date wed nov gmt server ncsa last modified thu apr gmt content type text html content length cis parallel programming spring cis parallel programming spring new web pages ve added description generic formal package parameter workaround ada web page sources also ftp directory ve added ada source ftp directory common ftp pub cis dwyer cis ada loose organization particular replicated worker stuff replicated ve added page related mid term final exams lists problems able work ve added page ada compiler see overview fundamental advances computing performance dependent adapting programming techniques new parallel computer architectures whether meet real time constraints improve response times computationally intensive tasks model physically parallel systems parallel programming techniques useful students professionals wide variety disciplines advanced undergraduates cis graduate students computing systems engineers building embedded systems scientists theoretical calculations could benefit course goal course build knowledge data structures algorithms cis expose student fundamental concepts concurrent distributed programming lectures nichols mwf pm instructors matthew dwyer virgil wallentine office nichols e email dwyer cis ksu edu www http www cis ksu edu dwyer phone fax office hours tr prerequisites cis requirements course consist lectures readings programming projects exams lectures readings bulk concepts course presented explained illustrated way extended examples lectures readings serve provide details depth selected concepts lectures readings function integrated presentation course material expected completed reading prior appropriate lecture take advantage class time ask questions elaborate issues presented readings homeworks programming projects working three different languages multi pascal concurrent c ada programming projects designed provide depth exposure concepts covered course use different languages help illustrate variety different solution strategies possible group projects class students expected work may discuss projects students may share designs code data modules objects documentation specification requirements interfaces please refer ksu campus phone book contains student life handbook governed guidelines procedures take note following passage instructor convinced evidence plagiarism cheating first decide appropriate punishment instructor may impose punishment ranging credit work exam f class instructor may recommend dismissal suspension recommendation carried undergraduate grievance board minimum credit given work exam dishonesty occurred instructor may draft memo student record kept provost office graduation indicating nature dishonest act examinations hour class mid term exam hour class comprehensive final exam final grades assigned based following weighting homeworks mid term final readings required readings course include text book selected papers literature papers available holdings university library lester art parallel programming prentice hall gehani roome concurrent c software practice experience vol sept gehani roome concurrent c concurrent programming class es vol dec gehani capsules shared memory access concurrent c c ieee trans parallel distr systems vol july peterson petri nets computing surveys vol additional reference materials include burns weller concurrency ada cambridge university press braunl parallel programming introduction prentice hall krishnamurthy parallel processing addison wesley lovelace www based ada tutorial http lglwww epfl ch ada tutorials lovelace lovelace html additional resources web pages course linked home page include assignments solutions lecture notes links parallel programming pages organization schedule course broken two phases first phase covering material lester text provide solid background fundamentals parallel programming second phase cover number additional topics related parallel programming build foundation professor wallentine lecture first phase course professor dwyer lecture second phase professor dwyer hold office hours course course cover following topics motivation parallel programming parallelism use disjoint parallel processes break problem sub problems solved independetly basic concepts shared memory systems multiprocessor architectures process communication synchronization synchronous parallelism distributed memory systems communication system topologies asynchronous parallelism system performance amdahl law gustafson barsis law measures speedup utilization throughput parallel programming languages survey use language support writing parallel programs concurrent c ada concurrent programming paradigms common solution techniques software architectures parallel concurrent programs client server filters token passing etc formal models concurrent systems petri nets state space methods path expressions properties concurrent parallel systems distributed systems replication load balancing deadlock multi cast communication data driven parallelism data parallel programming vector processing automatic detection exploitation parallelism engineering concurrent software testing validating verifying concurrent systems reusable concurrent components schedule topics readings assignments dwyer cis ksu edu
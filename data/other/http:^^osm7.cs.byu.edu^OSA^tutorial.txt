date tue jan gmt server ncsa content type text html last modified wed jun gmt content length osa tutorial osa tutorial paul black p black ieee org lei cao caol bert cs byu edu brent goodman mbg byu edu ben nielson nielson cs byu edu lu pan pan math byu edu amalia parra parra bert cs byu edu barry roberts barry bert cs byu edu sean rohead rohead bert cs byu edu roger smith rsmith bert cs byu edu mike steed mrs bert cs byu edu wei wei weiwei bert cs byu edu mingkang xu xmk osm cs byu edu use hyper document hyper text tutorial reference manual osa object oriented systems analysis technique get details explanations related subjects clicking highlighted words objective tutorial learn osa use osa model real world using osa lead better systems first part page explains general ideas behind approaches osa one use expect expect etc second part explains individual building blocks models constructed last part reference material osa glossary symbolary bibliography url use markers text indicate special parts tutorial indicates formal basis underlying osa model indicates changes book object oriented systems analysis indicates concepts somewhat tentative developers happy likely change indicates comparisons systems analysis techniques object oriented languages philosophy osa osa objected oriented systems analysis technique understand study specific domain interacting objects purpose understanding documenting essential characteristics expressive power represent reality underlying concepts based formal definitions system data behavior modeling object oriented vs process oriented analysis process oriented analysis describes systems network interacting processes includes descriptions data used processes recorded data dictionary approach often steers analyst away studying system components interrelationships towards studying system might designed implemented also difficult process oriented analysis map concepts network processes objects existing real world system opposed process oriented analysis object oriented analysis modularizes analysis document along object boundaries exist real world system addition approach also organizes knowledge system object single logical location analysis document thus information system object easier locate object oriented analysis analysis methods object oriented approach also encourages analysts concentrate rather reduces temptation skip prematurely design make easier understand information objects object oriented techniques provide forms abstraction including aggregation generalization classification model driven vs method driven analysis method driven approach consists fixed sequence steps follow system developed method waterfall method spiral model practice steps cannot followed exactly development problems encountered analyst must adjust order steps adapt procedures make exceptions rules analyst left rely experience underlying principles may undocumented poorly understood model driven technique hand provides prespecified set fundamental concepts model system study aids analysts building models best suits needs philosophy model driven technique important thing learn step step procedure rather conceptual framework behind analysis technique reality representation osa model designed idea reality represented instead particular programming language modeling components designed allow analysts capture everything importance system thus osa encourages analysts represent systems way perceived without constrained implemented formal basis underlying concepts osa based formal definitions system data behavior modeling analysis construction system models whose modeling constructs based formal definitions helpful following reasons models based formal definitions provide foundation testing model integrity completeness analysis since formal model definition ensures consistent interpretation provide mechanism communicating system understanding within analysis team model formal foundation also improve communication parties outside analysis team components osa osa concepts formalize everything one needs model real world situation although osa integrated modeling scheme parts work together conveniently seen consisting three parts orm obm oim orm object relationship model orm object relationship model way describe represent objects classes object relationships objects classes memberships real world orm consists objects object classes lexical object classes relational object classes high level object classes relationships relationship sets special forms generalization specialization roles aggregation association constraints participation constraints co occurrence constraints object class cardinality constraints specialization constraints general constraints high level relationship sets notes obm object behavior model obm object behavior model means describing behavior objects means explaining object possible states informally may changes state obm may thought detailing objects join leave object classes relationships obm consists states transitions triggers conditions events actions initial transitions final transitions exceptions prior states subsequent states threads real time constraints general constraints behaviors high level states high level transitions generalization specialization oim object interaction model construction oim consists specifying interacting objects interacting multiple objects bidirectional interaction special interactions access modify remove destroy add create continuous interaction time constrained interactions general constraints interactions interaction within object class high level interactions views generalization specialization references section gives references may helpful reading osa models using osa build models glossary glossary alphabetical list osa terms entry brief definition link main defining page links related terms symbolary symbolary list symbols used graphical representation osa diagrams bibliography bibliography list books papers url primarily osa also references system analysis software engineering techniques updated fri nov paul e black black lal cs byu edu
date tue jan gmt server ncsa content type text html last modified tue aug gmt content length cs software project management cs ntu se software project management fall http www cs uidaho edu billjunk courses cs cs html last updated august computer science home page univ idaho home page course overview proposed catalog description software project management cr techniques planning organizing scheduling controlling complex software system development support projects instructor william junk computer science dept university idaho moscow id telephone fax alternate e mail billjunk cs uidaho edu prerequisites undergraduates cs software engineering cs individual design project permission graduates cs software engineering analysis permission may taken non computer science majors basic understanding software developed resources students must ability communicate instuctor via e mail must facilities access world wide web goals upon completion course participants understand software development fits complex product development activity able select appropriate software development life cycle project know development processes required typical software development project able select development processes appropriate specific development project able plan software development project including identifying key processes interdependencies identifying documentation needs preparing detailed project schedule estimating project resources costs able recommend effective project organizational strategy specific development project able effectively monitor software development project able perform software project risk assessment understand relationships software development activities organizations activities organizations within enterprise understand social environmental factors contribute hinder software development activities textbooks mike cotterell bob hughes software project management international thomson computer press tom demarco timothy lister peopleware dorset house fred brook mythical manmonth th anniversary edition addison wesley grading participation readings exercises individual project final exam undergraduate graduate sections course graded separately due slightly different schedules campus campus sections graded separately difference undergraduate graduate versions expected level accomplishment additional academic study work experience graduate students able provide greater insight depth discussion phase course work example expectations amount effort put individual project substantially higher graduate students pages undergraduates versus pages graduates participation students expected make regular contribution class campus students prepared offer comments regarding material presented ask interesting questions class respond good answers questions asked class calling attention high quality article topic discussed class pointing interesting www site relating personal experience etc encouraged campus students also things communicate regular basis using e mail fax telephone mail m particularly interested hearing perspective practitioners meaningful contribution week considered satisfactory level portion class sessions devoted discussion feedback based questions comments supplied campus term project course also requires approved term project practical application concept studied coruse project expected extensive graduate students undergraduates example might base project around preparation software project management plan follows ieee standards review published literature software risk assessment prepare report study software process metrics organizztion expected propose topic receive approval starting additional guidelines provided assignment exercises several exercises assigned semester individual assignments however one group assignment anticipated topical outline project planning general concepts project planning management project management plan ieee std product development life cycles complex systems hardware software conception retirement time market issues software development life cycles waterfall incremental evolutionary spiral software maintenance life cycles incorporating software reuse pick appropriate life cycle software development processes process concepts process maturity cmm key process areas cmm process interaction ieee std management technical documentation supporting interfacing processes marketing systems engineering verification validation software quality assurance software configuration management system support system maintenance activity planning scheduling setting project goals identifying development activities gantt charts network based scheduling pert cpm cost resource estimating top bottom estimating software cost models work breakdown structures resource management budgeting reserves resource tracking risk identification management top software risk areas proactive risk management determining project status status reporting software project measurement metrics contracting outsourcing development using outside contractors purchasing code services third parties organizational strategies functional organizations product team organizations matrix organizations managing teams hiring building teams assigning work empowerment using temporary personnel evaluating team members environmental social factors informal organizations power structure physical working environment technology support training change management computer science home page univ idaho home page www http www cs uidaho edu billjunk e mail billjunk cs uidaho edu
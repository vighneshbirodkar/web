mime version server cern date wednesday nov gmt content type text html content length last modified friday sep gmt cornell cs course home pages fall course home pages links home pages number cs courses many cases class notes problem sets course information available although may available registered members course cs computers programming intermediate programming high level language introduction computer science topics include program development proofs program correctness program structure recursion abstract data types data structures analysis algorithms pascal principal programming language cs structure interpretation computer programs challenging introduction programming languages computer science topics include recursive higher order procedures performance analysis algorithms proofs program correctness probabilistic algorithms symbolic hierarchical data abstract data types polymorphic functions object oriented programming infinite data types simulation interpretation compilation programs cs taste unix c introduction unix operating systems programming environments six week course divided two parts first three weeks cover architecture unix operating systems c language high level second three weeks center around programming project intended demonstrate issues crafting programs c unix cs introduction digital systems computer organization web course material includes course info lecture notes homeworks project info hopefully even lecture videos topics covered course include representation information machine assembly languages particular powerpc processor organization interrupts o memory hierarchies combinatorial sequential circuits data path control unit design rtl microprogramming cs software engineering technology techniques course covers techniques technologies used modern software development involves good deal programming development experience tries simulate life professional programmers topics include c language object oriented programming software design issues classical software engineering collaborative programming cs data structures lists trees graphs arrays forms data structure implementation relationship language data structure emphasizing abstract data types dynamic storage allocation memory management detailed study searching sorting methods analysis determine efficient algorithm given situation cs practicum operating systems practical aspects operating systems studied design implementation operating system kernel supports multiprogramming virtual memory various input output devices programming project high level language cs foundations artificial intelligence challenging introduction major subareas current research directions artificial intelligence topics include knowledge representation search problem solving natural language processing vision robotics logic deduction planning machine learning cs automata computability theory introduction modern theory computing automata theory formal languages effective computability faster moving deeper version cs credit given corrective transfers cs cs encouraged first weeks instruction cs advanced programming languages course introduces relates operational denotational axiomatic semantics model programming languages imperative applicative algebraic logic programming cs multimedia systems investigation computer science issues related multimedia systems topics include coding compression storage systems high speed networking video audio processing user interface issues databases multimedia cs analysis algorithms methodology developing efficient algorithms primarily graph theoretic problems understanding inherent complexity natural problems via polynomial time algorithms randomized algorithms np completeness randomized reducibilities additional topics parallel algorithms efficient data structures cs cool tools seminar course survey latest coolest software hardware applications systems tools emphasis practical use tools seminar present tutorial style introduction one topics cs topics computer graphics covers advanced topics computer graphics applications computer graphics scientific computation cs seminar natural language understanding covers current topics natural language understanding computational linguistics relevant areas machine learning meets week hours present discuss recent papers field well ongoing natural language understanding research department information previous semesters information previous semesters may retained surprised certain links work fall spring summer
mime version server cern date tuesday jan gmt content type text html content length last modified monday aug gmt student modeling student modeling view paper click open book image novel application theory refinement student modeling paul baffes raymond j mooney proceedings thirteenth national conference aritificial intelligence pp portland august aaai theory refinement systems developed machine learning automatically modify knowledge base render consistent set classified training examples illustrate novel application techniques problem constructing student model intelligent tutoring system approach implemented authoring system called assert uses theory refinement introduce errors initially correct knowledge base models incorrect student behavior efficacy approach demonstrated evaluating tutor developed assert students tested classification task covering concepts introductory course c programming language system produced reasonably accurate models students received feedback based models performed significantly better post test students received simple reteaching refinement based student modeling automated bug library construction paul baffes raymond mooney journal artificial intelligence education pp critical component model based intelligent tutoring sytems mechanism capturing conceptual state student enables system tailor feedback suit individual strengths weaknesses useful modeling technique must practical sense models easy construct effective sense using model actually impacts student learning research presents new student modeling technique automatically capture novel student errors using correct domain knowledge automatically compile trends across multiple student models approach implemented computer program assert using machine learning technique called theory refinement method automatically revising knowledge base consistent set examples using knowledge base correctly defines domain examples student behavior domain assert models student errors collecting refinements correct knowledege base necessary account student behavior efficacy approach demonstrated evaluating assert using students tested classification task covering concepts introductory course c programming language students received feedback based models automatically generated assert performed significantly better post test students received simple teaching automatic student modeling bug library construction using theory refinement paul baffes ph d thesis department computer sciences university texas austin december history computers education characterized continuing effort construct intelligent tutorial programs adapt individual needs student one one setting critical component intelligent tutorials mechanism modeling conceptual state student system able tailor feedback suit individual strengths weaknesses primary contribution research new student modeling technique automatically capture novel student errors using correct domain knowledge automatically compile trends across multiple student models bug libraries approach implemented computer program assert using machine learning technique called theory refinement method automatically revising knowledge base consistent set examples using knowledge base correctly defines domain examples student behavior domain assert models student errors collecting refinements correct knowledge base necessary account student behavior efficacy approach demonstrated evaluating assert using students tested classification task using concepts introductory course c programming language students received feedback based models automatically generated assert performed significantly better post test students received simple reteaching learning model students using theory refinement detect misconceptions paul baffes ph d proposal department computer sciences university texas austin new student modeling system called assert described uses domain independent learning algorithms model unique student errors automatically construct bug libraries assert consists two learning phases first application theory refinement techniques constructing student models correct theory domain tutored second learning cycle automatically constructs bug library extracting common refinements multiple student models used bias future modeling efforts initial experimental data presented suggests assert effective modeling system induction techniques previously explored student modeling automatic bug library construction significantly enhances subsequent modeling efforts using theory revision model students acquire stereotypical errors paul baffes raymond j mooney proceedings fourteenth annual conference cognitive science society pp bloomington july student modeling identified important component long term development intelligent computer aided instruction icai systems two basic approaches evolved model student misconceptions one uses static predefined library user bugs contains misconceptions modeled system uses induction learn student misconceptions scratch present third approach uses machine learning technique called theory revision using theory revision allows system automatically construct bug library use modeling retaining flexibility address novel errors estlin cs utexas edu
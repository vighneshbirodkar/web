mime version server cern date monday jan gmt content type text html content length last modified wednesday feb gmt research summary ed posnak supporting adaptive multimedia applications internetworks recent advances computing communication technologies made economically viable design implement distributed multimedia information management systems promise enhance users ability access rich variety audio video textual information globally inter connected networks advances also resulted networked infrastructure inter operating components frequently differ capacity orders magnitude consequently multimedia information management systems future required provide services clients highly heterogeneous environments traditionally since functional interoperability dominant issue heterogeneity sufficiently managed using black box abstractions e g ip posix however since differences performance cannot hidden abstractions inadequate meeting real time requirements resource intensive multimedia applications address performance heterogeneity trend toward designing configurable applications adapt current environment well changes resource availability time mechanisms enabling development adaptive multimedia applications constitute focus doctoral research resource requirements multimedia applications vary significantly depending presentation processing mechanisms compression image processing consequently begun investigating adaptive mechanisms controlling cost performance tradeoffs presentation processing specifically developed presentation processing engine ppe provides applications compression independent means accessing manipulating changing quality media objects ppe composed modules implement primitive compression components e g huffman coding discrete cosine transform etc media processing operations e g scale clip etc allowing basic codec building blocks dynamically configured ppe support different codecs switch resolution levels provide flexible control qos parameters frame rate spatial resolution signal noise ratio snr ppe implementation bound scalable codec run time based media object compression format application qos requirements expressed terms frame rate resolution snr implementation later dynamically reconfigured accommodate dynamic changes resource availability well qos requirements applications fine grained modular architecture allows modules existing codec implementations suitably extended reused implement new codecs thereby simplifying software development moreover support media processing operations added plugging modules implement operations codec internal implementation advantage fine grained configurability enables operations performed semi compressed opposed uncompressed data often yields significant performance gain experience developing ppe toolkit using implement number codecs provided insights adaptive multimedia applications built whereas object oriented design techniques powerful tools building dynamically configurable implementations carry associated efficiency cost due procedure call overhead dynamically dispatched method invocations development modular configurable efficient presentation processing mechanisms requires carefully engineered balance use static dynamic composition modules static composition implemented ppe using parameterized types inline methods minimizes efficiency cost maintaining reusable extensible architecture instance image video compression operations filter bit stream get number bits decode huffman symbols statically composed invoked high frequency minimal use reconfigurability hand modules perform dithering inverse discrete cosine transform good candidates dynamic configurability multiple implementations different cost performance tradeoffs effectively balancing static dynamic binding ppe implementations jpeg mpeg decoders achieved performance within percent fastest public domain monolithic implementations power dynamically configurable presentation processing environment depends ability express configurations well cost performance tradeoffs propose develop abstract language specifying protocol configurations via algebraic expressions operators represent modules operands represent data representations used automatic configurator compute appropriate configurations triggered change user qos requirements notifications changes resource availability language also used specify protocol configurations downloaded client site along multimedia data key challenge make language flexible enough allow configuration altered support media processing operations maintaining consistency encode side specification presentation processing environment integral component end end systems architecture distributed multimedia applications designed distributed multimedia computing laboratory university texas austin specifically propose extend configurable programming environment support qos aware transport protocols thereby obtain completely integrated configurable protocol stack stack support efficient streaming data application network adapter vice versa well methods accessing multimedia objects multiresolution file server expect results work substantially advance state art building adaptive distributed multimedia applications
date tue jan gmt server ncsa last modified wed sep gmt content type text html content length cps e fall second assignment programming assignment cps e fall searching kwicly points problem appeared slighly different format internet programming contest due date early bonus wednesday october midnight final due date monday october midnight assignment provide practice structs vectors sorting reading files using getline streams writing classes iterative enhancement table contents introduction input output coding grading submitting extra credit makefile sample input files accessible ola cps e kwic acpub system sure create subdirectory kwic problem set permissions access prof uta ta typing fs setacl kwic ola cps e read introduction searching sorting prototypical computer applications assignment ll write program organizes titles sentences efficient human search based different key words given list titles list words ignore write program generates kwic key word context index titles kwic index title listed keyword occurs title kwic index alphabetized keyword keywords words listed list words ignore example words ignore list titles descent man ascent man old man sea portrait artist young man kwic index titles given portrait artist young man ascent man descent man descent man ascent man old man sea portrait artist young man old man sea portrait artist young man old man sea portrait artist young man title listed many times key words title example portrait artist young man listed four times portrait artist young man input output program read file whose name enter run program legal input files contain list words ignore one per line followed list titles one per line string line used separate list words ignore list titles words ignore appears lower case letters line characters length title appears line may consist mixed case upper lower letters words title separated whitespace title contains words words ignore titles characters titles words ignore combined characters z z white space appear input output output kwic index titles title appearing keyword title kwic index alphabetized keyword word appears title instance potential keyword words title rose rose aphorism would appear three times occurrence rose aphorism keyword appear upper case letters words title lower case letters case upper lower irrelevant determining word ignored titles roughly centered shown key words capitalized justified somewhere near middle column screen worry part first assume titles fit line worry handling weird cases handle cases assuming longest title fit properly titles kwic index keyword appear order appeared input file case multiple instances word keywords title keywords capitalized left right order sort maintains original order elements equal keys called stable sort insertion sort stable code insertion sort found tapestry text reproduced vector ints void insertsort vector int numelts precondition contains numelts ints postcondition elements sorted non decreasing order int k loc int hold k k sample input descent man ascent man old man sea portrait artist young man man man bubblesort dog corresponding output portrait artist young man ascent man man man bubblesort dog descent man man man bubblesort dog descent man ascent man old man sea portrait artist young man man man bubblesort dog man man bubblesort dog old man sea portrait artist young man old man sea portrait artist young man coding requirements help ideally maintain one copy title store title keyword although print title keyword may choose worry assignment worth points points minimizing storage storing titles first pass may decide store title occurrence keyword might lead following declarations diagram shows struct kwictitle used store title old man sea struct kwictitle vector mytitle int mykeyindex bool operator diagram title stored kwictitle objects keyword note two two kwictitles compared using less operator index keyword determines string kwictitles compared may need think minimizing storage one option storing titles use vector titles storing title vector course titles may vectors strings isn problem also make titles structs contain vector strings replace mytitle declaration kwictitle index vector titles solution still four kwictitle objects sun also rises mytitle index title rather title think carefully ask questions developing class ll probably find useful develop class solve problem example public member functions could include read printindex probably several private member functions called printindex call example might store words ignore vector string myignore write function shown search vector bool kwic isignore const string int k k k course need example private member function kwic isignore could useful grading standards assignment worth points points awarded follows behavior points generates kwic index sorted properly handles duplicate key words title nice output centered memory efficient coding style uses classes comments readme submission create readme file assignments readme files include name well name anyone collaborated assignment amount time spent submit assignment type submit e kwic readme kwic cc makefile sure submit source files e g may decide write seperate header file although required extra credit extra credit use vector store words title use list see chapter tapestry still use index keyword ll need count words rather index directly keyword list class doesn support random access free change kwictitle completely must minimize storage must use lists store titles submit extra credit assignment type submit kwic xtra readme include files use version kwic program
date mon dec gmt server ncsa content type text html last modified fri dec gmt content length sean landis fall context based image retrieval project page sean landis cs project fall content based image retrieval systems interior design table contents introduction background manual image analysis automated image analysis image features indexing queries current research feature extraction query specification distance metrics indexing extensibility artificial intelligence maximizing domain knowledge project overview project definition implemention storage manager analysis manager query manager display manager user interface image menu view menu query color algorithms query pattern algorithms results color queries pattern queries user interface design limitations conclusions usefulness future work references introduction computers beginning replace photographic archives preferred form repository computer based image repositories provide flexibility cannot attained collections printed images recently explosion number images available computer users number increases users require sophisticated methods retrieval content based image retrival cbir promises fill requirement many diverse areas cbir play key role use images art galleries museum management architectural engineering design interior design remote sensing natural resource management geographic information systems scientific database management weather forecasting retailing fabric fashion design trademark copyright database management law enforcement criminal investigation picture archiving communication systems education entertainment many applications cbir attracted attention researchers across several disciplines background content based retrieval based understanding semantics objects collection semantic analysis performed object inserted collection given semantic representation objects collection user compose query retrieves set objects similar semantics query analysis usually performed index structure summarizes data collection content based image retrieval semantic analysis retrieval images semantic analysis may involve manual intervention may entirely automated manual analysis involves human interpretation associate semantic properties image automated semantic analysis extracts image features correlated semantic meaning image analysis methods advantages drawbacks manual image analysis traditional databases use text key words labels efficiently access large quantities text data even complex text data automatically summarized labeled using natural language processing artificial intelligence data images rather text summarizing data labels becomes considerably difficult example consider repository news photographs user may wish pose query give new photographs containing us president communist leader support queries like images require labeling indicates people images title nationality political alignment known humans process electromagnetic signals convert highly detailed semantic interpretations therefore human analysis required generate labels support sophisticated queries like one problems human analysis personal perspective one person interpretation important features image may match another person interpretation personal perspective leads variance image analysis labeling domain mismatch person domain interest may influence image feature selection analysis interface expressiveness human computer interfaces provide limited bandwidth expressive capability image analysis os limited expressiveness interface data entry errors humans error prone especially set task tedious redundant problems best automate image analysis much possible intervention required user limited set unambiguous choices automated image analysis automated image analysis calculates approximately invariant statistics correlated semantics image data example statistics color histograms invariants shape moments edges statistical analysis useful provides information image without fickle costly human interaction despite appeal automated image analysis suffers drawbacks primary problem statistical analysis extracted features support specific type query features apply particular domain useful posing general purpose queries diverse data sets consider image database indexed color histogram image feature vector generated element vector represents percentage color quantum found image three element vector could quantums representing red green blue practice color feature vector requires three elements feature vector image contains quantized percentage red green blue quantums available greater accuracy feature vector greater cost indexing comparison database contained fabric images color histogram would powerful way pose query user interested designing men casual shirt spring wants bright spring like colors query posed desired color mix fabrics containing similar mixes specified colors retrieved hand database contained news photographs described earlier color histograms would useful semantics images database correlate well color histograms image features image feature piece semantic information extracted image several properties measuring quality feature capacity number distinguishable images represented maximal match number maximum number images query could possibly retrieve complexity amount computation required determine two images similar particular feature compactness amount space required store compare feature image features categorized either primitive logical primitive feature low level statistical attribute image object boundry color histogram primitive features automatically extracted directly image logical feature represents abstract attribute label grass assigned region image logical features rely information beyond contained image delineation primitive logical features always clear consider image d representation d scene containing several objects features representing objects might either primitive logical features extraction generates feature containing edge information primitive feature hand extraction identifies object name say utilizing model based approach logical feature primitive features often used basis generating logical features common cbir system architecture layers logical feature extraction top primitive featue extraction primitive features extracted directly image generate segemented image information abstract logical features generated segementation process dividing image regions correspond structural units interest indexing queries goal indexing create compact summary database contents provide efficient mechanism retrieval data summary data based feature vectors since content based visual databases items images objects represented pre computed visual features key attribute image feature vector corresponds point multi dimensional feature space search based similarities feature vectors therefore achieve fast effective retrieval requires efficient multi dimensional indexing scheme multiple indexing schemes may required support queries involving combination features utilize multiple indexes hierarchical approach often used component query applied appropriate index higher layer merges results presentation user cbir queries posed fuzzy fashion user typically interested results according similarity rather equality requirement influences indexing scheme methods feature comparison means queries solicited user image similarity usually determined computing distance measure query appropriate feature vectors index structure similar images ranked according distance thresholding may used reduce number similar images presented user query created composing primitive logical feature vectors present simple structured query environment cbir systems define query classes typical query classes color partial histogram created specifying colors percentages texture texture features include directionality periodicity randomness roughness regularity coarseness color distribution contrast complexity sketch user creates sketch representing outline matched dominant image edges shape example shape created using simple painting tools shape compared objects within images similarity volume volumetric relationships specified using d tools feature vectors contain d information spatial constraints feature vector contains topological relationships among objects image browsing user presented structured method viewing entire database objective features objective features attributes date image acquisition light direction view direction features lend methods used traditional databases subjective features feature extraction manual semi automatic subject human interpretation examples region labels manual object identification motion motion applicable series images video segments motion features measure movement objects sequences movement camera viewpoint camera focal point text either simple complex text associated images simple case traditional database methods used complex systems use natural language processing artificial intelligence reason text annotations domain concepts domain information lends specific forms feature vectors queries query classes provide meaningful way user create feature vectors correspond notion image semantics queries composed multiple query classes alternative user composed queries queries example user submits query form prototype image system uses feature vector appropriate query class es often session begin user composed queries refined query example run interactive query system called query image content qbic click current research large number researchers exploring cbir related topics focused recent work productive following sections describe important topics studied feature extraction feature extraction performed image added database cbir systems provide support multiple query classes pickard minka use different features characterize images mit photobook image retrieval system core system retrieval engine supports wide range features including visual browsing color similarity measures text primitive features combined create higer level logical features call concepts qbic system extracts features support image query classes color texture shape sketching location text system also supports set video oriented query classes color histograms many different extraction methods used first issue dimension color feature vector e g number colors typical numbers range dimensions number unique colors representable one byte higher dimension feature vector greater capacity values bin color histogram usually either total number pixels percentage pixels given color entire image query specification papers read treated query specification secondary issue researchers recognized need simple ways specify queries unlike text based databases desired information retrieved single query suitable image may require many queries cbir systems typically return several best images selection user many systems allow user select one images example another query example query refinement researchers exploring ways providing easy refinement queries yield high success use multiple query classes compose query interests researchers although many systems claim support composite queries papers explained combine query classes successfully distance metrics image query classes rely similarity metrics rather exact matching distance metrics produce relative distance two image feature vectors threshold used determine two features similar many cases user control threshold relax constrain query every distance metric advantages drawbacks example stricker analyzes two common distance metrics l l euclidean norms l norm computes distance d two n element color histograms h l norm computed stricker states using l metric results false negatives e images similar color composition retrieved l metric take color similarity account using metric similar l metric results false positives e histograms many non zero bins close histogram thus retrieved always qbic system uses dimension color histogram th element percentage color distance histogram r database image histogram q computed r q r q transpose operator locations j contain distance color color j ibm ultimedia manager uses dimensional vector color percentages dimension represents range color space analysis time color pixel quantized one ranges based location rgb space indexing predominant cbir research area image feature indexing many difficult problems solve first image features typically high dimensional requiring complex multi dimensional indexing second traditional indexing assumes exact matching similarity matching complicates indexing structure finally difficult combine multi dimensional similarity based indexing methods efficiently support queries composed mutliple query classes using similarity metrics initial indexing pickard minka avoid problem combining query classes different metrics similarity encoded clusters image regions tree structure distance measured ancestral distance clusters effect normalizing different query classes treated identically extensibility systems must extensible overcome immaturity indexing methods query specification feature extraction important work cbir lies ahead importance extensibility recognized wu et al developed core based generic framework multimedia dbms demonstrate flexibility architecture developed two different applications computer aided facial image inference retrieval system cafiir trademark archival registration system star medical information system currently development conclusion state object orientation important retrieval engine like core one advantage increase reusability codes increase reusability extensibility artificial intelligence research focuses three applications artificial intelligence cbir reasoning logical features similarity metrics index construction maintenance example pickard minka apply ai annotating images dynamically select multiple feature models based user labels image regions system also capable improving indexing structure based new positive negative examples wu et al apply fuzzy reasoning queries logical features query partially defined user also used learning based experiences neural network model generate self organizing nodes content based index tree allows system fuse composite feature measures support complex fuzzy queries maximizing domain knowledge query performance drastically improved cases assumptions made nature domain images database wu et al observe core comprehensive functions however application domain specific problems application development domain expertise must added customize indexing retrieval module project overview exploration cbir problems domain interior design interested methods cbir apply problems faced interior designers interior designers work paint wallpaper fabric floor coverings also follow general principles form space color style designers customers regularly face tedious chore manually searching matching materials according general design principles taste opportunity high degree computer assistence tasks designers could compose queries using primitive logical features specify constraints according design principles results series queries wallpaper paint carpet must self consistent according designer specified rules form space color style requirements led interest toward following query classes color fabric wallpaper etc often selected based upon color content perfect application color histograms texture floor coverings wallpaper fabric important textural components ideal queries based textural features shape examples shapes stripes plaids floral patterns objective features styles victorian could modeled objective features subjective features taste mood sensation related design concepts specified using subjective feature queries examples feminine vs masculine cheery cool warm etc text product attributes part numbers supplier information first production date text features domain specific design rules described domain specific features query example powerful tool interior designers example given particular carpet sample designer could find window covering compliments carpet project definition implemented software prototype allowed explore following areas color color important feature materials interior designers use color also allows automatic image analysis explored implementations color histogram feature vectors related similarity metrics pattern patterns also important interior designers focused automated feature vector generation using edge detection software design one difficulties cbir systems small number query classes provide enough flexibility support interior design technology image feature vectors similarity metrics indexing immature real world system needs extensible configurable using object oriented techniques designed system encapsulates areas highest change created framework support addition new query classes distance metrics framework divides major system tasks among manager objects interact well defined interfaces user interface defined simple user interface color histogram queries provided ability query example using color histograms shapes image management basic qbic system ability efficiently manage performance storage memory requirements images size complexity images special computation resource requirements identified issues suggest solutions specifically avoided exploring indexing issues project implementation implemented software prototype purpose exploring details cbir software written using microsoft tm visual c compiler version platform intel dx system running windows nt operating system version software architecture shown following block diagram architecture loosely based core managers implemented singleton object class definition restricts instantiation one system wide object storage manager storage manager provides interface image database responsible maintaining memory virtual mapping images performing system specific o operations following class diagram depicts key relationships storagemanager class stormgr h provides member functions access image database client uses store associate pixmap file image object store image database function used analysismanager process user request add image database also attaches pixmap image allows analysismanager perform feature extractions image clients request single image using getimage entire image database list using getimagelist loaddb function used initialize storagemanager object current implementation storagemanager maintains unordered list image objects representing entire database real system storagemanager would maintain multiple indices used retrieve images image objects would leaves index e g case tree based index structure efficiency implementation loads pixmap data image necessary image object determines load data task loading delegated storagemanager image class image h encapsulates details pixmap implementation feature vectors system manipulates image objects convenience pixmap class provides interface color pixel representation image pixmap h class allows implementation screen image change without affecting rest code features class features h encapsulates set feature vectors class allows new feature vectors added new query classes added two changes would required production system efficiently manage memory first current implementation loads pixmaps demand never invalidates invalidating pixmaps would conserve large amounts physical memory typical pixmap requires x bytes memory store image data assuming colors also pixmap color table overhead making total bytes second memory saver would use thumbnail versions pixmaps thumbnails smaller representations usually x bytes used display current system requires entire image feature extraction support thumbnails would either require time tradeoff reduce large pixmap loaded memory disk space tradeoff thumbnails generated load time stored database analysis manager analysis manager analmgr h performs analysis images added system result set feature vectors one type query class greatest change cbir system likely addition new query classes analysis manager provides extensibility via registration feature extractors generate feature vectors class relationships shown following class diagram user adds new image system user interface calls analyze member function function uses storagemanager create new image analyzes calling extract installed feature extractor new feature extractor objects added calling addfeature system initialized featureextractor abstract class provides interface definition used feature extractors features h concrete feature extractor classes inherit interface provide implementations appropriate needs feature vectors generate feature extractor object responsible analyzing image creating featurevector installing featurevector feature object image featureextractor classes play important role encapsulate important information particular query class adding new query class effort creating new subclass featureextractor classes get query class specific information feature extractors example querymanager calls similarityfunc comparing two images analysismanager feature extractors features featurevector important relationship initialization time feature extractors installed singleton instance analysismanager init cpp analysismanager tells feature extractor position set feature vectors stored features objects also tells features class many feature vectors every features object must capable storing every feature extractor implementation knows large make data portion featurevector encapsulating knowledge fashion new features easily added query manager querymanager class provides two important functions ability query database ability maintain query history querymgr h query manager accepts features object similarityfunc user interface formulates query formulated query used retrieve similar images storage manager client requests initialized features object analysismanager knows position size information every feature fills information matched query client gets similarityfunc feature extractor class defined query class similarity functions static member functions derived feature extractor class necessary passing member function pointer function argument accept two features objects compute distance similarity functions must return non negative value representing distance feature vectors function also optionally return value less zero two feature vectors dissimilar querymanager uses return value rank images distance querymanager completes processing query passes ranked list images displaymanager presentation current implementation contains similarity functions operate upon single query class since specifics similarity computation external querymanager possible provide similarity functions take account multiple query classes one way provide hierarchy queries results one level queries passed different similarity function display manager user interface display manager displmgr h responsible displaying images screen tracking mouse selection images class closely related user interface provided operating system maintains list currently displayed images responds paint messages generated window system client display manager submit list images calling display replace existing list images held display manager list passed function images displayed note image lists many manager objects maintain lists pointers image objects avoid memory leaks clients pass deletion policy display member function telling displaymanager manage memory image list user interface provides typical menu options according windows tm style see screen capture showing application area filled wallpaper images click image label name database file containing pixmap image menu image menu provides options adding images querying database selecting query option presents dialog designed solicit query particular query class example following screen capture shows dialogs used compose query color composing color query multi step process involving two dialogs query color dialog allows user specify color percentages query specify color user manipulates controls color dialog standard windows dialog allows selection colors directly system color palette user may also create sixteen custom colors query composed user presses ok button query submitted querymanager similar images displayed displaymanager view menu view menu provides selections allow user view information database images database item causes displaymanager display entire image database real application would impractical intelligent browsing tools would necessary traversing large set images selecting features item presents user image features dialog containing list box image names user selects image presses desired button display group following screen capture shows happens colorhistogram button pressed color histogram dialog presents two histograms selected image original image histogram color histogram image stored database bar represents relative number pixels assigned displayed color total color bins field number bins histogram total empty bins field number bins contain pixels image feature histogram histogram feature vector quantized version original histogram high percentage empty bins feature histogram common selecting pattern histogram button image features dialog presents pattern histogram dialog dialog shows directional bias image numbers three bins represent relative biases direction integer values range representing weak strong strong strong dialog shows image strongly biased vertically strongly biased horizontally color values item view menu presents user dialog viewing predominant feature colors image color values dialog displays five prevalent colors percentage distribution rgb value color rgb values shown value center quantization range dialog useful testing quality similarity function query color algorithms image added database analysismanager calls extract member function colorhistogram object clrhistx h function responsible creating query class specific feature vector installing image colorhistogram creates dimensional color histogram feature vector similar one used ibm ultimedia manager element feature vector represents cube shaped subspace rgb space shown following figure pixel quantized one bins traversing image histogram contains number pixels contained color cube bin value converted percentage representing relative number pixels contained color cube similarity function colorhistogram computes distance two histograms using th l norm distance compared user definable threshold value determine similarity querymanager uses return value order images similar first l norm works well sparse matrices fine user provides three colors via dialog entries values compared querying example similarity function ignores small percentages present histograms reducing problem false positives due contribution insignificant differences histograms query example requires larger similarity threshold since usually involves many comparisons queries via dialog data used worked three color queries good query example query pattern algorithms query pattern algorithms automatically recognize directional biases image image added database analysismanager calls extract member function pattern class patternx h pattern creates dimensional feature vector element contains percentage bias horizontal diagonal vertical directions pattern extraction algorithm multistep process first creates greyscale copy original image rgb values converted brightness values using translation black white television television images transmitted using yiq color scale black white television recievers display y portion luminance signal greyscale image processed detect edges using sobel operator method applies two x kernels nieghborhood pixel estimate brightness derivatives db dx db dy derivative horizontal direction following kernel used vertical direction following kernel used conceptually kernel applied image sliding kernel image summing products values kernel brightness values result derivative brightness slope pixel center kernel application kernels pixel nieghborhood magnitude computed value assigned pixel center kernel emphasize edges algorithm thresholds value black white following image result process finally edge image traversed applying two kernels time derivatives much stronger bias image direction slope determine value zero pi algorithm quantizes direction one three bins histogram process applied entire image sums bins converted percentages result feature vector containing percentages bias horizontal diagonal vertical directions distance metric ranks three direction biases strong strong strong weak computes l norm distance two histograms distance compared user definable threshold value determine similarity returned distance used querymanager order similar images results results project positive using scanner able produce line pixmaps wallpaper samples implemented software supported color pattern based queries wallpaper database software provides intuitive user interface supports easy addition new query classes color queries two ways query database color dialog example query color dialog described dialog query using three user selected colors demonstrates effectiveness query three images returned order similarity example based query uses color histogram displayed wallpaper sample query key user clicks right mouse button desired example presented popup menu selecting query color example initiate retrieval stripe bmp used example wallpaper image threshold set pattern queries software currently supports pattern queries example example based queries initiated popup menu query based wallpaper sample plaid bmp results set wallpapers containing strong directional bias vertical horizontal directions query restricted display images current implementation provide enough capacity distinguish directional bias lines bias noisy patterns would require sophisitcated feature extraction algorithm example smoothing step could used supress noise performing gradient computations user interface user interface fairly intuitive interface presents familiar environment windows user following microsoft windows interface guidelines sample user unfamiliar image processing easily navigated system user confused meaning threshold parameters must set numbers confusion could alleviated presenting slider control representing scale relative distance design software design used takes full advantage object oriented principles key features design change encapsulated area greatest change addition new query classes functionality encapsulated feature extractor concrete classes new query class added copying existing feature extractor modifying suit needs new query class implemenation details encapsulated two classes hide implementation details pixmap storagemanager support multiple image types pixmap could converted abstract class providing interface specific image types would inherit class storagemanager class hides details database operating system responsible logical image management full featured application storagemanager would delegate system details another class would manage images abstraction enforced abstraction enforced using well defined manager classes interface inheritance eases expansion featureextractor abstract class defines interface concrete feature extractors client code written interface without knowledge query class specific details ghese design principles produced extensible embeddable system prototype could made embeddable converting server client server arrangement first user interface code must externalized code sensitive change properly resides client application second client server communication protocol must used microsoft windows environment ole would provide capability limitations limitations prototype performance resource management adding new image database takes long time image analysis although current algorithms optimized step always expensive perform real time production system would many feature vectors batch processing mechanism would necessary image management crude production system entire image database loaded memory mechanism exists maintaining working subset images support thumbnail versions images size image x even though software always scales x display software prototype intended exploring ideas therefore contain polish required production systems conclusions project goals met prototype cbir system built demonstrating color pattern queries intuitive user interface provides ease use object oriented design supports extensibility embeddability usefulness vast number images available line quality cbir systems critical using right system people quickly find image need field interior design designers customers search hundreds carpet drapery paint wallpaper samples selections must combined create pleasing result producing asthetic result often requires even searching use cbir designers could access vast amounts material either cd rom vendor database rapidly create high quality interior decorating solutions sophisticated query environments could assist applying practical design constraints ensure attractive results expensive sample inventories would obsolete significant savings would passed customers future work cbir system interior design requires access large databases flooring paint fabric wallpaper samples efficient retrieval multiple large image databases relies new data representations indexing methods methods must support queries composed multiple query classes better query classes needed support aspects interior design materials classes color texture pattern style needed create asthetic designs text attributes necessary represent manufacturer information wear characteristics cost etc judicious use artificial intelligence improve system performance fuzzy logic useful determining image similarity certain query classes expert systems built assist designers creating solutions conform traditional design idioms finally sophisticated user interfaces needed give designers power flexibility work demands users must able incrementally build design solutions interface must provide access designers portfolio use modify past work allowing quick response customer demands many challenges ahead future cbir systems builders field interior design presents challenges results work show promise still much references venkat n gudivada vijay v raghavan content based image retrieval systems ieee computer september desai narasimhalu special section content based retrieval multimedia systems flickner sawhney niblack et al query image video content qbic system ieee computer september rajiv mehrotra james e gray similar shape retrieval shape data management ieee computer september r w pickard p minka vision texture annotation multimedia systems j k wu desai narasimhalu b m mehtre c p lam y j gao core content based retrieval engine multimedia information systems multimedia systems markus stricker bounds discrimination power color indexing techniques proceedings spie storage retrieval image video databases ii nagarajan ramesh ishwar k sethi feature identification aid content based image retrieval proceedings spie storage retrieval image video databases iii virginia e ogle micheal stonebraker chabot retrieval relational database images ieee computer september john c russ image processing handbook second edition crc press hong jian zhang di zhong scheme visual feature based image indexing proceedings spie storage retrieval image video databases iii jonathan ashley ron barber myron flickner james hafner denis lee wayne niblack dragutin petkovic automatic semi automatic methods image annotation retrieval qbic proceedings spie storage retrieval image video databases iii harold treat ed ort jean ho mimi vo jing song jang laura hall frank tung dragutin petkovic searching images using ultimedia manager proceedings spie storage retrieval image video databases iii james rumbaugh michael blaha william premerlani frederick eddy william lorensen object oriented modeling design prentice hall cs course description send questions comments sean landis scl isis com last modified sean landis
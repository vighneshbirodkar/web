date tue nov gmt server ncsa last modified tue apr gmt content type text html content length cs principles computer science url http www cs hmc edu keller cs html link index page harvey mudd college spring computer science principles computer science home page reference card course personnel instructor robert keller olin p m mtuwth appt keller muddcs x secretary nancy mandala olin m f nancy muddcs x cs intern account problems etc vacant position please mail help muddcs instead official mascot rex tutor graders matt dharm mdharm muddcs x john larkin jlarkin muddcs x jeff polakow jpolakow muddcs x grader account mail assignments cs grad muddcs cs hmc edu tutor hours current schedule tutors terminal room beckman mon jeff polakow tue jeff polakow wed john larkin thu john larkin fri matt dharm would like help hours work please let know room beckman x terminals connected machine muddcs find leave back lecture hall galileo edwards turn right another right long corridor proceed new section building turn right second door right get office go back long corridor keep going end go right upstairs olin building go left left southeast corner olin office inside always open business hours door usually closed filter noise hesitate knock catalog description introduction principles computer science algorithms complexity analysis data structuring data procedural abstraction grammars correctness logic principles processor organization operating system concepts programming languages basic automata theory theoretical limitations course goals learn apply basic principles computer science including software construction hardware organization limitations computers text robert m keller principles computing january available one time special order cost reproduction strongly recommended buy copy entire book also line microsoft word kato mac server folder kato home department homes cs cs thus viewable macs local network see getting pc version well however still recommended purchase book rather say getting someone old version book revised substantially since last course offering book large pages reading screen apt tiresome inconvenient book taken exams whereas mac cannot course assumptions students first course computing college level e g cs prior experience c c preferred although essential others made starting knowledge pascal know procedures arrays types minimum unfamiliar please take cs cs first lectures word lecture used loosely expect lecture periods include explanation like multilogue set dialogues expected attend ask questions provide comments threads essentially three interwoven threads course book problems lectures try keep synch one another active participation three threads required volume wise book covers material discussed lecture lecture cover things book staying attune going lecture help focus areas book important far exam emphasis problems exercise things discussed book lecture resources course planned interactive throughout eager prevent programming difficulties consuming extraordinary time please ask get stuck difficulties much efficient start early assignment give enough time cope numerous contingencies inevitably materialize get help line emailing cs help muddcs goes graders tutors enable talk slow check email often email message typically answered entire class parts message embedded want attributed please indicate message carrying problem solutions computer implementation showing understand issues principles techniques explain work problem level detail ask however must sufficient time margin telling eleventh hour aren getting therefore want drop course availing substantial help available also welcome submit email note card question d like answered point would like addressed class leave mailbox olin course encouraged ask questions class well many tools available computer use man feature unix find need explore command man command gives information specific command command man k topic lists commands relating specific topic also use info reader gnu emacs certain library language editor specifics emacs type escape x info helpful information examples line copies assignments etc kept various subdirectories directory cs cs machine muddcs web page rex documentation finally corner store maxim applies find want ask grading approximately eight assignments entailing programming programming assignments help drive home key working concepts principles first couple assignments rex language one likely seen used language used mostly c c used due position emergent industry standard ability reflect low level computer structure time provide high level data object abstractions may one assignment assembly language programming using simulated computer isc prior exposure c varies across class hold one special evening sessions c request programming course although much course entails programming consider exposure computer science ideas important part intent programming assignments drive home key ideas willing devote much class period needed nominally minutes detailed examples programming techniques specific programming questions answers appear useful given day time used purposes honor code standard read carefully although discussion problems others encouraged programming cs emphasizes individual learning rather group projects observe following standard may discuss assignment students may share give receive written work kind inside outside course elaboration case programming assignments consider email computer files fragments files printed output written work developing code programming assignment discuss ideas others discussion ideas must involve wholesale examination transcription actual working code others exception may use code explicitly provided instructor definitely forbidden form collaboration wherein two students split assignment transcribe others contributions sometimes changing names variables comments formatting etc occurs failing grade issued automatically help get another significant acknowledge submission lose credit doubts whether form interaction constitutes violation standard please consult prior continuing grading weights programming assignments constitute grade mid term examination count final class attendance participation random quizzes etc account remaining various practice problems indicated particular able work two dot problem notes relating material covered lecture need submitted exams consist largely problems similar level along perhaps little easier harder exams open book emphasize conceptual understanding rather memorization fine details late assignment policy submissions done emailing source code grader cs grad muddcs also establishes time submission due dates assignments noted carefully work assignment conducted week weeks last day space necessary thinking automatic fixed one day grace period assignments words due date states day n assignment must turned midnight day n receive credit midnight day n work spend problem edification say isn worth required get points best plan get assignments stated due date cs topic outline lectures roughly follow outline progression rate two numbered topics per week say would like depending background topics expand longer allocated result topics get jettisoned fall end please keep reading without explicitly assigned notes generally expand lectures discussions lectures may also expand notes introduce new material often several threads interwoven lectures period time part emphasize commonality concepts different vantage points brackets indicate chapters notes start respect concepts follow outline mention every topic actual lectures determine points emphasis computing rules computation problems models computation states transitions list notation functional specifications computation rewriting heterogeneous lists trees mutual recursion anonymous functions assignment based programs mccarthy transformation turing machines computing demand c review polya library translating rex c ram model linear addressing principle arrays pointers l values r values computing grammatically inductive definitions grammars syntax parsing evaluation expressions structural computing data structuring dynamic storage allocation open vs closed list models computing objectively object orientation data abstraction c objects inheritance computing logically proposition logic applications gate realizations minterm expansion boole shannon expansion logic simplification hypercubes karnaugh maps care situations predicate logic programming logic backtracking program specification correctness verification mid term examination date midterm wed mar class period complexity computing runtime measures profiling growth rate comparisons upper bounds o notation examples sorting heapsort merge sort radix sort complexity continued empirical measurements set abstraction examples bit vectors tries computing graphically directed graphs graph representations depth breadth first search weighted graphs shortest paths traveling salesman problem finite state computing finite state machines sequential logic design regular expressions finite state machines computer components registers buses multiplexors etc computing store stored program computer structure assembly language computing physically physical bases computation computing parallel parallel computation limitations computing finite state limitations lower bounds incomputability intractability np completeness glitch phenomenon comprehensive final exam date final fri may p m email assignments use following scheme elm san cs grad muddcs cs hmc edu n assignment number code file containing code circumstances mail using pine mime encodes file use easily
date tue nov gmt server ncsa content type text html last modified tue may gmt content length qpt qpt quick program profiling tracing system qpt exact efficient program profiler tracing system rewrites program executable file inserting code record execution frequency sequence every basic block straight line sequence instructions control flow edge information another program qpt stats calculate execution cost procedures program unlike unix tools prof gprof qpt records exact execution frequency statistical sample tracing program qpt produces trace regeneration program reads highly compressed trace file regenerates full program trace profiling qpt operates two modes slow mode places counter basic block program manner mips tool pixie quick mode qpt places counters infrequently executed subset edges program control flow graph placement reduce cost profiling times since thing free lunch quick profiling requires program analysis consequently slows qpt qpt stats additional cost instrument program report results however small quickly gained back profiling long running programs like systems pixie qpt rewrite executable file record sequence instruction data references however qpt uses abstract execution reduces overhead tracing times program untraced execution cost qpt also records number semantics events loop entry iteration function entry exit memory allocation deallocation systems identify original version program qpt obsolete maintained several years time ran dec ultrix decstation mips processor sun sunos sparcstation qpt new version qpt build eel library editing executable files eel currently runs sparc based machines sunos solaris though ports progress machine specific code eel qpt collected files porting new machine requires couple months effort documentation algorithms qpt described thomas ball james r larus optimally profiling tracing programs acm transactions programming languages systems toplas vol july pp abstract execution described james r larus abstract execution technique efficiently tracing programs software practices experience v n december pp qpt described james r larus efficient program tracing ieee computer may pp applications david wood develop cache profiler called cprof uses traces qpt report cache misses caused statements program cprof available part warts obtaining qpt qpt available part warts qpt qpt distributed full source small amount documentation qpt qpt copyrighted distributed terms warts license copy license available ftp cs wisc edu ftp pub warts license ps obtained contacting address james larus computer sciences department west dayton street university wisconsin madison wi larus cs wisc edu last modified may james larus larus cs wisc edu
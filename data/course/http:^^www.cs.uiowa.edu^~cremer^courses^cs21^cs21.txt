date wed nov gmt server ncsa content type text html c home page c algorithms data structures spring mwf jessup hall professor jim cremer n maclean e mail cremer cs uiowa edu office hours f appointment ta jun tu d mcbride jun cs uiowa edu office hours w th new last updated monday complete scores semester mapping scores course letter grades available grades section see pick graded final please stop office homework assignments scores grades goals content schedule textbook supplemental books requirements grading late assignment policy policy collaboration prerequisites note language programming assignements homework solutions useful code sample exams etc prerequisites c c c permission instructor course goals content schedule aim course gain experience major paradigms data structures used creating algorithms basic methods analyzing time space requirements programs cover textbook tentative schedule week intro ch math background induction recursion week ch algorithm analysis notation techniques bit week quick review ch ch trees week ch hashing weeks ch priority queues week ch sorting week february exam class weeks ch disjoint sets weeks ch graphs week spring break week ch graphs including bit extra decidability tractability complexity weeks ch algorithm techniques including greedy methods dynamic programming divide conquer week april exam class week ch backtracking search games tentative week ch amortized analysis may friday final exam m textbook weiss data structures algorithm analysis benjamin cummings second edition supplemental books reserve math library cormen leiserson rivest introduction algorithms mcgraw hill aho hopcroft ullman data structures algorithms addison wesley requirements grading course grades based ten homework sets two midterm exams final exam small programming assignments programming problems usually given part regular written homework assignments separate grading category programming assignments class participation effort may taken account determining grades borderline situations components weighted roughly follows homeworks assignments midterm exams final exam late assignment policy assignments due beginning class cases assignments turned within hours receive penalty turned hours late receive penalty exception student may turn one homework assignment two days late penalty regrade requests must made within one week assignments returned class policy collaboration homework programming assignments done alone reasonable discuss general approaches problem solution algorithm design students bulk work must done alone working details sharing write sharing copying code treated violation academic integrity rules note language progamming assignments program source code book pascal however course programming assignments free use choice pascal c c another language approved instructor homework assignments homework html version homework postscript version official test data homework must turn runs program files wordlist wordlist wordlist test data homework extra wordlist extra wordlist extra wordlist homework html version homework postscript version homework html version homework postscript version official test data homework must turn runs program files circuit circuit circuit circuit path path path test data homework testdata testdata testdata testdata testdata testdata homework html version homework postscript version homework html version homework postscript version homework html version homework postscript version homework html version homework postscript version homework postscript file view print postscript html basic www language version homework scores grades course grades total score b b b c c c d complete homework exam scores including final sorted id number plain text file complete homework exam scores including final sorted total score plain text file final exam data median mean high score range number people exam data median mean high score range number people exam data median mean high score range number people homework solutions useful code miscellaneous stuff homework solutions html version homework solutions postscript version c code question homework code commented quite meet specifications question reads input interactively rather file handles single character words prints tree preorder rather level order important part one fills table used calculate optimal binary search tree two ascii files obst h obst c exam solutions html version exam solutions postscript version homework solutions html version homework solutions postscript version homework solutions html version homework solutions postscript version homework solutions html version homework solutions postscript version homework solutions html version homework solutions postscript version sample exam might help see style questions ll get exam wed feb exam given point course fall semester document contains two extra questions actually used exam sample exam html sample exam postscript homework solutions html version homework solutions postscript version implementation heap routines c maybe useful last question homework pascal code available via ftp site listed beginning textbook homework solutions html version homework solutions postscript version code majority problem homework see item c implementations solution majority problem homework linear time recursive divide conquer method maj d c c short simple linear time scanning method maj scan c code help generate test data majority problem gen maj test data c number test data files contained directory etc maj test data files etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data b etc maj test data maj data c etc maj test data maj data d source code basic c tested silicon graphics workstation runing irix silicon graphics unix two majority implementations compile fine machines compilers e g use cc o maj scan maj scan c gen maj test data c code contains call drand d guess unix specific random number generator easy change code run elsewhere however homework solutions html version homework solutions postscript version
date tue jan gmt server stronghold ben ssl apache content type text html content length last modified mon jan gmt cs programming assignment rules guidelines cs programming assignment rules guidelines page give information expect cs programming projects please read carefully starting first project background although topic cs networking programming projects assume good deal background unix need solid experience c programming language least working knowledge unix file o process management signals order programming assigments sure necessary skills please talk one course staff first week classes find defer taking cs later curriculum implementation rules projects coded ansi c unsure differences ansi k r c number books available bookstore ansi c expect good coding style throughout includes good functional decompostion useful comments meaningful variable names function header comments required following rules advantage points assigment constitute style grade see grading policies assignments designed implemented leland cluster sweet hall programs must compile run sparc solaris machines epicxx dec osf machines amyxx testing programs platforms may develop platform like long program also runs two platforms times ambiguities assignment specifications multiple ways assignment implemented cs engineering class expect make reasonable design decisions cases base decisions know assignment whole ta may give advice tradeoffs decisions make tools several tools leland systems make life considerably easier make utility used conditionally recompile program based timestamps source code object files executable expect everyone class seen makefile permanent fixture every flavor unix platforms know use make write makefile learn require makefile submitted assignment gdb gnu debugger gdb interactive source level debugger allows trace code executes examine program state program seg faults show learning use gdb effectively save many hours debugging hell compile gdb simply add g flag gcc command start gdb program command gdb progname type help gdb prompt information purify development tool pure software checks program run time many common errors among things checks memory leaks references uninitialized illegal addresses invalid parameters passed system calls use purify simple preface command links program purify example purify gcc o myprogram main o client o netio o run program purify start separate x window show diagnostics sample makefile illustrates options deliverables two expected deliverables assignment first source code implementation include makefile builds program name specified assignment current directory important adhere requirement assignments tested shell scripts must graded hand makefile wrong know write makefile look class directory sample second deliverable project writeup file called readme caps writeup straight text file readme html writeup html submit program accept assignment unless one files present reside directory source code submit file contain following overview structure code design decisions made short justification found ambiguities assignment also list resolved implementation answers questions assignment asks submission projects submitted electronically submit script requires following true current directory must contain file called makefile current directory must contain file called either readme readme html must least one file extension c additional required files listed assignment specification submit script check well conditions true script submit required files files extension c h current directory subdirectories submitted everything needed compile run project current directory order submit assignment enter following command usr class cs bin submit assn assn assignment number e honor code enforce adherence stanford honor code applies programming assignments may use publicly available code sources long source noted code aware however copying code stevens book verbatim dangerous code strictly ansi may discuss projects fellow students however may work together students use code written another student assignment questions honor code please ask one course staff honor code violations laughing matter stanford much better ask might seem like silly question risk academic career grading policies assigment graded total points assignments weighted equally final grade points grade functionality points measure well assignment meets specifications given assignment handout remaining points grade style code specified functionality points may contested think code misgraded style points subjective may contested rule late assignments accepted professor mckeown grant individual exceptions rule please ask ta extensions general extensions granted serious reasons family medical emergency times system problems leland cluster may prevent completing assignment time cases extension generally granted entire class references resources unix network programming stevens reference choice programming unix sockets api also review session first assignment due provide introduction socket programming tcp ip volume protocols also stevens excellent reference specification common implementations tcp ip related protocols although book required course text excellent reference assignments refer chapters book additional reading rfc request comments set documents absolute reference internet standards rfc numbered sequentially rfc web page also get rfc via anonymous ftp look index rfc list rfc titles student assigned ta signing class web page question cannot answered class materials references contact ta ta hold office hours sweet hall problems may want schedule one programming sessions hours please e mail questions cs leland id project guidelines html v jimge exp
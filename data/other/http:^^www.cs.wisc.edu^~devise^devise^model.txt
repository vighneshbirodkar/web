date fri dec gmt server ncsa content type text html last modified wed oct gmt content length devise model visualization model visualization model visualization used design framework devise constructed also best way understand devise functions stages visualization file schema tdata mapping gdata visual filter view window link cursor stages visualization visualization devise divided stages stage supported components responsible functions stage component design essential providing following functionalities devise visualizations constructed creating component instances interconnections components devise extensible new components may defined incorporated framework example new type file new way drawing graphics may incorporated visual query interface allows user save visualization apply different sets input files stages creating visualization follows import file devise textual data tdata schema used describe information import file mappingtdata graphical data gdata select view display gdata assign visual filter select portion gdata viewed arrange views windows create linked axes using visual links display relationships views using cursors file input file provided user stored disk ascii format example ascii file containing sin time cos time might look like time sin cos schema schema file describes layout ascii input file used convey name type range attributes characters separate attributes file characters ignored reading file attribute range information optional example file schema file looks like type sensor ascii comment whitespace attr time double hi lo attr sin double hi lo attr cos double hi lo first line names file type sensor sensor files data stored format one file type imported devise schema file example also create stock file type read information stock prices data stored different format second line tells devise ignore lines start third line tells devise attributes file separated white spaces devise also read files separated delimiters remaining lines describe attribute names types ranges tdata textual data tdata representation used devise access files types input data file imported devise tdata user uses tdata create visualizations different types input files input devise treated uniformly tdata selecting file type user asked enter alias tdata default name name input file stripped path information entering alias file imported tdata devise mapping mapping converts tdata attributes graphical data gdata attributes user decides tdata visualize selecting tdata attributes map onto x y color shape gdata attributes notice tdata visualized one way creating one mapping example create following example mappings sin vs time x y cos vs time x y sin vs cos x y mapping created used tdata file type gdata graphical data gdata graphical representation tdata consists attributes x y color pattern size orientation shape shape specific attributes visual filter visual filter defines query graphical data attributes gdata implementation supports range query x y gdata attributes use visual filter specify portions gdata viewed view view used display gdata fall within range visual filter currently two types views scatter sortedx scatter view used draw scattered plot sortedx view implements optimizations used reduce time used draw gdata x attribute sorted window window provides screen real estate used views draw gdata also responsible arranging views boundaries currently devise supports tiled automatic vertical horizontal window layouts view removed window reduce clutter moved another window related views brought together comparison windows duplicated handy feature link link used link visual filters updating one synchronously updates linked visual filters implemented links linked axes either linked x y axes however link theory used graphical attributes x y color size pattern orientation shape cursor cursor also used display x y boundaries one view within another view cursor contains source view destination view source view cursor fetches information current view x y axes boundaries boundaries source view drawn line segments axes destination view click axes area destination view move source view changing visual filter location clicked
mime version server cern date wednesday jan gmt content type text html content length last modified wednesday sep gmt diffusion monte carlo image synthesis applications diffusion monte carlo image synthesis alan heirich james arvo california institute technology problem statement photorealistic image synthesis requires detailed simulation photon transport geometric environments monte carlo methods applied problem order reduce amount computation resulting algorithms concurrent well suited implementation parallel computers effective implementation requires proper latency hiding dynamic load balancing diffusion discussed metaphor concurrent computation since early recent years numerous diffusion algorithms proposed solve problem dynamic load balancing parallel computers recently diffusion algorithm proposed solve closely related mapping problem proposal antecedents relaxation methods applied problems circuit layout current research investigated utility diffusion algorithms problems dynamic load balancing partitioning monte carlo path tracing implemented monte carlo algorithm message driven concurrent pipeline employed diffusion algorithm perform dynamic load balancing designed diffusion algorithm partition complex geometric models among processors parallel computer performed initial simulations validate approach research results initial results shown better scaling efficiencies anticipate figures improve implementation tested processors platforms include ibm sp sp systems networks workstations uniprocessors used facilities argonne hpcrf measure scalability processors used sp installations larger benchmarks benchmarks discovered implementation require large amounts network bandwidth quickly becomes compute bound complex models example message traffic generated nodes anl hpcrf within bandwidth provided ethernet although experiment nodes cornell theory center became bandwidth limited ethernet higher sampling rates employed phenomenon subsided future plans plan continue develop implementation well explore complementary rendering techniques e g radiosity finite element methods amenable parallel implementation intend benchmark code beowulf cluster mhz pentium pro computers construction caltech center advanced computing research funding work funded cornell program computer graphics caltech center advanced computing research nsf center research parallel computation references kajiya j rendering equation proc siggraph dijkstra e w scholten c termination detection diffusing computations inf proc lett cybenko g dynamic load balancing distributed memory multiprocessors j par dist comp heirich taylor parabolic load balancing method proc intl conf par proc heirich scalable diffusion algorithm dynamic mapping load balancing networks arbitrary topology intl j found comp sci appear heirich arvo j scalable photorealistic rendering complex scenes proc st eurographics workshop parallel graphics visualization
date tue jan gmt server apache content type text html content length last modified tue jan gmt introduction cs introduction computer programming ll learn design build interactive software systems use modern programming environment code debug multi file c c projects design language independent algorithms data structures design application program interfaces new code libraries write simple c code networked client server computing works exemplified world wide web texts eric roberts art science c handouts web pages scheduling note course follows schedule mccormick school engineering means classes meet reading week computing requirements assignments must ready access one following platforms pc compatible better borland turbo c c preferrably version macintosh preferrably better symantec think c c unix machine gnu c c x windows either athena motif widget set addition matter platforms re also need computer northwestern network web browser preferrably netscape n better recent release mosaic ftp program e g ftp unix fetch macintosh ftp client windows pc course notes announcements assignments c c code must available via network topics basic programming language concepts constants integers floats strings variables reading writing data expressions arithmetic logical control statements iteration branching switch functions calling defining prototyping files basic computer science concepts data structures strings arrays pointers algorithms algorithm analysis software development libraries using defining interface implementation development environments files projects debuggers program design requirements analysis algorithm data structure design modules application program interfaces api coding maintainability testing debugging programming large application concepts graphics graphical interactive interfaces event driven programming assignments work load learn lot learn course lot basic concepts taught lectures assessed exams real learning occur programming assignments time consuming course comments send mail chris riesbeck
date mon dec gmt server ncsa content type text html cse general information cse general information course goals course abstraction programming specifically goals cse learn concepts modularity encapsulation focusing abstract data types basics data structures important topics include thinking programming recursively analyzing complexity simple algorithms completing course students able design write medium sized programs design interfaces modules abstract data types provide one implementations interfaces read write use document software components make concepts abilities concrete study use c programming language class c concepts taught applied many languages many c constructs features covering staff instructor craig chambers please use following address email instructor cse instructor cs washington edu head ta brad chamberlain cse headta cs washington edu ta andy collins sections aa ae cse collins cs washington edu craig kaplan sections ab af cse kaplan cs washington edu michael noth sections ad ah cse noth cs washington edu jared saia sections ac ag cse saia cs washington edu lab consultants samuel adams sca cs washington edu owen benneter flatley flato cs washington edu jason griffith grit u washington edu tony tsai ttsai cs washington edu check schedule definitive information lecture section times places office hours etc tentative course topic outline also available subject change text headington riley data abstractions structures using c heath strongly recommended lippman c primer nd edition addison wesley really doesn matter much c book almost certainly want one since text reference manual sense word evaluation one midterm comprehensive final exam material covered lectures sections homework assignments assigned readings fair game exams thus important attend sections well lectures programming assignments sure read grading turn policies quizzes gradingthe following breakdown used grading midterm final weekly quizzes total quiz assignments total assignments total extra credit earn extra credit must first fully complete submit assignment given interested extra credit may suggest extensions related programs write extra credit limited maximum total course grade late policyexcept truly exceptional circumstances late homework accepted homeworks due beginning section assigned days policy collaboration vs cheating may copy code someone else considered cheating caught cheating way full disciplinary measures may invoked including failing grade class initiation cheating case university system avoid creating situations copying arise cannot email post otherwise make code available electronically anyone post general questions programming problems even pseudo code snippets actual c code good news educationally valuable work others general ideas go solving problem helping others general terms getting stuck allow people look others code screens give help debugging case one two people seeing code getting electronic copy doubt collaboration vs cheating send instructor email cse instructor cs washington edu asking clarification computing quarter using mscc mac lab located basement thomson hall lab staffed consultants able provide reasonable levels help mac lab sieg also used low priority used higher priority classes use course offers two levels computing support full partial accept turnins floppy disks projects developed either fully partially supported platforms additionally full support means build sample executables platform well easy unpack distribution code necessary getting started partial support means provide sample executables bundled code distributions make necessary sample skeleton source code available via web code reasonably portable able build projects platforms without much trouble remember choose use partially supported platform responsibility configure system understand build projects able debug system configuration problems summary platforms support assign ta consultant platform give help reasonable problems full macintosh symantec c partial pc windows borland c v partial pc windows msvc v partial unix g already familiar unix using machine many advantages disadvantages many students done past encourage try note support win nt compilers expect source files developed systems class compile execute test machine ensuring responsibility cse webmaster cs washington edu
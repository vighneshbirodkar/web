date wed nov gmt server ncsa last modified mon nov gmt content type text html content length cps software design implementation cps software design implementation fall object oriented programming design analysis requirements syllabus books assignments code project groups teaching tools making toonces presentation overview description course overview covered requirements large group project four six person teams two smaller group projects two individual mastery projects mastery projects designed ensure everyone completes course certified capable writing understanding reasonably complex c programs since people large team project may write c code mastery projects necessary certification one mastery projects also use java least three written smaller assignments programs grading small assignments class presentation class participation mastery exams small group projects large group project syllabus syllabus information readings topics discussion assignments grepple design due monday september prototype friday september final project due monday september toonces object oriented networked calendar extraction system groups toonces revised due dates submission guidelines design turn toonces making toonces presentation mastery templated deques due october group project started time mastery ii boggle joggle due december preliminary joggle code see also ola cps joggle jogglereader java jogglegraph java joggleplay java jogglefe java joggapp java bogdict txt code examples java nutshell examples o reilly book java nutshell accessible source runnable applets also ola cps nutshell cs acpub machines templated map classes including abstract base class two implementations unsorted vector hash table map h abstract base class uvmap h unsorted vector interface uvmap cc unsorted vector implementation hmap h hash table interface hmap cc hash table implementation iterator h iterator base class uviterator h iterator class uv map iterator cc implementation uvmap iterator hiterator h iterator class hashtable map hiterator cc implementation hashtable map iterator iterproxy h proxy class iterator pointer proxy word tracking program counts occurrences words file uses map classes available words cc main source code file templatewords cc template instantiation file makefile makefile site specific requiring map classes two views menu driven program manipulating images one non object oriented although class used object oriented uses command pattern implement commands used within menus menus text based first non object oriented version usepix cc main program pixmap h interface header file pixmap class manipulates images pixmap cc implementation pixmap class object oriented version uses pixmap class application h main application class interface application cc main application class implementation command h abstract base class commands quitcommand h quit command class interface quitcommand cc quit command class implementation readcommand h read command class interface readcommand cc read command class implementation displaycommand h display command interface displaycommand cc display command implementation simpcommand h templated class using pointers member functions non parameterized commands menu h menu class interface menu cc menu class implementation menuitem h menu item class interface menuitem cc menu item class implementation filelister h read one list files hard wired directory interface filelister cc templateapp cc template instantiation file makefile class checking memory leaks rudimentary overloading new delete global basis heapstats h heapstats cc class design exercises programming small large tba tba books several books ll use course mastering object oriented design c cay horstmann java nutshell flanagan object oriented design heuristics arthur riel optional books c programming language bjarne stroustrup effective c specific ways improve programs designs scott meyers design patterns elements reusable object oriented software gang four books reserve mythical man month fred brooks debugging development process steve maguire teaching staff support personnel one professor two tas one ta one utas professor owen astrachan office d lsrc email ola cs duke edu ola acpub duke edu phone office hours monday thursday time quick questions ta syam gadde office d lsrc email gadde cs duke edu phone office hours tuesday wednesday utas trevor selby office d lsrc email trevor cs duke edu phone xx office hours pm teer cluster needs verification groups groups groups first assignment please fill information asked groups group preferences submit turn class project information yet available programming tools getopt information parsing command line arguments using templates instantiate templated classes using g compilers generate template repositories gprof information profiling programs java references code help information cvs rcs coming back owen astrachan home page
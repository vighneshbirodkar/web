date tue dec gmt server ncsa content type text html cse winter tentative schedule cse winter tentative schedule topics introduction jan programming languages programming language paradigms interpreters vs compilers overview lisp jan introduction basic functions expressions lisp alternative control structures rules evaluation write recursive functions etc programming techniques lisp jan string file manipulation lisp examples fileanal cl postcalc cl evaluator lisp extra tracing features production systems pattern matching jan dynamic memory management jan allocation space data garbage collection prefix infix postfix notations conversions jan infix prefix conversion interpretation lisp stack machines emulation lisp infix postfix conversion stack machine evaluation lexical analysis jan regular expressions finite state automata regular expressions tokens programming languages simple lexical analyzer lisp assignment parsing jan grammars context free grammars recursive descent parsing lisp implementation parsing techniques translation code generation jan syntax directed translation three address code logic programming feb horn clause logic unification prolog syntax semantics logic programming lisp mcl graphics visual programming feb graphics mcl data flow paradigm drawing programs vp liveness iconic representation operations data midterm exam feb english language programming feb semantic grammars augmented transition nets grammars english mixed initiative interfaces c language feb essentials c example program print c example program bincard c introduction java feb construct hello world applet sample graphics program html applet sample graphics program java source expert system languages feb rule writing inference techniques implementation shells hybrid programming environments feb integration lisp domain specific libraries embedding sublangages lisp live demonstration xform programming environment c oriented language processing tools mar lex yacc trends programming languages mar support reuse increased functionality ease expressing computations making programmers nonprogrammers little languages scripting languages end user languages support safety reliability software aesthetic beauty ultimate power project presentations mar review final exam mar meeting pm sieg final examination mar tanimoto cs washington edu december
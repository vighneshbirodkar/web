date mon nov gmt server ncsa content type text html last modified tue apr gmt content length cs section program program array numbers due date friday pm grade final grade text covered chp problem description program read list integer values user entered one per line values read array integers reading numbers program perform series operations array operations implement find minimum maximum value array count number prime numbers array many numbers divisible print whether array strictly ascending descending order neither check adjacent pair numbers array see order assignment uses user defined functions user defined subroutines chp one dimensional arrays chp input read keyboard results written directly screen e files example user enters following integer values program display hint use check results minimum value maximum value prime numbers numbers neither ascending descending program design find minimum maximum number array assume first number array current min max go rest array compare number current min max re assign values accordingly e g similar finding minimum time program note numbers positive negative integers count number primes go array number check see prime number e see value besides number evenly divides number turns prime increment counter accordingly determine list numbers strictly ascending descending order go pair numbers array second number greater equal first list must necessarily descending order second number less equal first list must necessarily ascending order takes one pair numbers wrong order make whole list ascending descending program structure program must first read numbers one dimensional array using loop reading array pass array relevant user defined function subroutine calculate results operation performed separate user defined function subroutine minmax find minimum maximum value array subroutine passed array integers passes minimum maximum value prime counts number prime numbers array function passed array integers returns total number primes updown determines whether array strictly ascending order strictly descending order neither note two adjacent numbers considered ascending descending function passed array integers returns whether numbers ascending descending neither suggest writing minmax function first easiest prime little harder finally updown requires thought debugged function subroutine got working move next one attempt write everything debug instead one piece time one biggest advantages writing user defined functions subroutines hand hand assignment online copying fortran source code file e g program compiled executable file e g program exe handin directory also hand printed copy fortran source code file screen output program run four sets test data given gradesheet gradesheet following gradesheet used grade assignment please take close look make sure everything required note graded correct output input values given handing must run program values manually check program gives correct results every case correct output user interface useful prompts number meaningful display results implementation correct use functions subroutines arguments correct use arrays correct use else end statement correct use end loop meaningful variable names indenting neatness documentation program description function subroutine descriptions variable argument definitions total copyright copy gareth bestor bestor cs wisc edu last modified april
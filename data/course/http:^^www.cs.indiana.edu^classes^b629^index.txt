date wed nov gmt server apache content type text html content length last modified wed oct gmt b spring home page b spring program transformation programming environments general information course outline readings systems assignments projects general information course description course students interested advanced program manipulation techniques supporting tools course present methods techniques program analysis program transformation techniques algorithms programming environments well survey current systems area students implement program analyses transformations experiment programming environments part course prerequisites one c b one p p working knowledge c scheme instructor permission credits instructor y annie liu email liu cs indiana edu office e lindley hall hours mw pm swain east office hours appointment tentative course outline introduction program development overview goals correctness efficiency productivity methods transformational programming object oriented programming step wise refinement composable software techniques specialization incrementalization data optimization tools compilers language based environments visualization tools tool generators simple examples program analysis overview goals program understanding checking optimization refinement composition modification reuse styles static vs dynamic forward vs backward necessary vs sufficient methods abstract interpretation dataflow analysis ssa form cdg vfg sese region pst vdg slicing type based projection based set based applications dead code analysis redundancy analysis strictness analysis binding time analysis closure analysis update analysis sharing analysis aliasing analysis linearity analysis concurrency analysis time analysis program transformation overview kinds program synthesis optimization refinement composition modification reuse basics techniques algebraic simplification fold unfold rewriting program optimization operation driven optimization composition fusion deforestation unrolling list tupling specialization partial evaluation supercompilation incrementalization finite differencing inplace update caching memoization tabulation tupling thining promotion accumulation program refinement data driven optimization representation selection data localizing staging transformation compile time garbage collection program modification reuse parallelizing programs serializing parallel programs program integration programming environments techniques overview syntax incremental parsing higher order abstract syntax semantics analysis incremental attribute evaluation extensions attribute grammars e g higher order composable modular coupled transformation utilities second order pattern matching unification language complex tree transformation tree rewriting incremental pretty printing program tree database management program manipulation systems overview catalog compiler construction tools frontend backend generators attribute grammar based systems programming environment generators program transformation systems specialized utilities examples cornell synthesizer generator microsoft ip reasoning refine kestrel kids dtre specware nyu apts munich cip cwi asf sdf saarbrucken optran prospectra inria mentor centaur berkeley pan ensemble following topics covered specially program analysis partial evaluation incrementalization data driven optimization programming environments techniques syntax semantics transformation environments environments generators sg ip centaur program transformation systems apts kids optran readings systems assignments projects liu cs indiana edu last updated october
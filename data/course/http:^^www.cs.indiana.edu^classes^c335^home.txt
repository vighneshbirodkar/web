date wed nov gmt server apache content type text html content length last modified wed sep gmt c computer structures c h computer structures fall sections computer science department indiana university lecture tr ballantine laboratory r r r lindley texts fall john wakerly microcomputer architecture programming family wiley csci c packet printed locally packet consists three documents laboratory manual m programming reference guide selected pages prosser winkel art digital design tentative lecture schedule see c computer structures course description detailed outline course content reading assignments mainly wakerly lect topics wakerly sections ch introduction background reading assignment chapter ch pascal data structures pascal refer needed semester required know pascal ch number systems arithmetic reading assignment ch computer organization reading assignment chapter ch addressing reading assignment ch operations including stack machines reading assignment ch interrupts reading assignment chapter ch assembly language assembly processes reading assignment chapter additional handouts digital logic reading assignment prosser winkel pages additional handouts microprogrammed control hardware design reading assignment microprogrammed control illustration manuscript handed lecture ch subroutines reading assignment ch input output appx b serial data communication reading assignment assigned procedures staff instructor franklin prosser office lh e email prosser cs indiana edu office hours tentative noon r appointment drop lh e associate instructors jagadish bandhole email jbandhol cs indiana edu office hours m p f lh f david soruco email dsoruco cs indiana edu office hours m w p lh f newsgroup newsgroup c sections fall ac c computer science departmental network use newsgroup heavily convey variety course information including questions answers lecture laboratory procedures problems check newsgroup frequently keep date feel free contribute questions solutions procedural problems constructive comments course grade class open book exams laboratory collected homework homework policy homework assignments due class end class due date late homework accepted instructional staff post solutions class newsgroup laboratory lindley hall questions homework may graded instructors discretion however solutions questions posted laboratory lab meets lindley hall ai discuss lab procedures regular lab section bring lab c lab manual receive additional handouts information class lab attendance attendance class laboratory expected experience shows clear relation good attendance good performance lectures laboratory sessions discuss much material available textbook lab manual frequent handouts without benefit lecture lab discussion handouts usually opaque academic integrity read computer science department statement academic integrity sure understand rules computer science courses operate cases academic dishonesty reported office student ethics branch office dean students withdrawal last day drop course automatic w october date student may withdraw permission dean college arts sciences approval normally given urgent reasons related extended illness equivalent distress incomplete grade incomplete final grade given prior arrangement exceptional circumstances conforming university departmental policy bulk course work completed passing fashion c computer structures course description c students study computer systems problem solving context basic computer hardware low level software systems emphasis fundamental properties computer systems apply across broad range computers systems abstractions reinforced class laboratory laboratory students extend problem solving skills working level computer assembly language using modern microcomputer system although class laboratory proceed schedules lab applies many fundamental concepts dealt lecture lecture provides foundation lab class lab emphasize disciplined structured approach programming topics selected following list topics marked star might included honors course number systems arithmetic conversions among various number bases decimal binary hexadecimal arbitrary base integer fraction conversions number representations signed arithmetic signed magnitude two complement one complement floating point computer arithmetic addition negation subtraction simple binary multiplication floating point addition numerical problems overflow loss precision character codes computer organization computer components processor ram rom peripherals computer data flow system bus microcomputer basic processor organization registers clocked circuits alus internal processor data flow processor architectures accumulator machines general register machines stack machines others computer instruction sets classes instructions operands operations introduction addressing modes operation codes fetch execute instruction processing cycle examples hardware execution typical instructions operation simple program instruction classes moves arithmetic shifts rotates logical program control status registers condition codes processor control risc cisc instruction pipelines operand addressing address size effect register size memory size addressing modes including register direct memory direct register indirect memory indirect auto increment auto decrement immediate indexed based program counter relative paged position independent code memory mapping memory management virtual memory caches assembly language assemblers machine instructions assembly directives object modules structure assembler program location counter symbol table operation code table two pass assembly absolute versus relocatable assembly macros implementation loading linking relocatable loading linking external references entry points structured programming assembly language hash tables programming save time space subroutines parameters high level language programs assembly language subroutines parameters assembly language subroutine calling methods passing parameters static dynamic allocation stack oriented parameter passing conventions stack frame recursion coroutines etc input output o organization busses devices interfaces ports o programming protocols memory mapped versus isolated o overlapped o o drivers serial data communication interrupts basic interrupt processes hardware software responsibilities interrupt protocols single level priority vectored priority interrupt identification polling nonmaskable interrupts traps software interrupts direct memory access concurrency interrupt processes concurrency multiple interrupts waking sleeping deadlocks critical sections locking semaphores shared data instructions reentrant programs digital computer organization boolean algebra combinational circuits circuits memory register structure synchronous clocked design processor architecture register bus structure basic processor control microprogrammed control instruction pipelines programming laboratory programming assembly language current processor structured programming good documentation implementation data structures queues lists trees cumulative programming projects project useful subsequent projects suggested textbooks wakerly microcomputer architecture programming family john wiley sons new york isbn hamacher vranesic zaky computer organization rd edition mcgraw hill co new york isbn patterson hennessy computer organization design hardware software interface morgan kaufmann publishers san mateo calif isbn x stallings computer organization architecture th edition prentice hall inc upper saddle river n j isbn x
mime version server cern pre date sunday nov gmt content type text html content length last modified friday may gmt life keyboard computers part culture life father worked ibm every often d visit work see huge computer rooms sometimes d bring home pieces computers us see idea things really cool looking sometime father brought home ibm documentation programming languages flowcharting tried read make sense surprising since ibm isn exactly famous clearly written documentation came mit first weeks went tour mit artificial intelligence laboratory days included logo lab remember went tour remember several freshmen lived fraternity recall together ai lab together new members frat whether came join frat liking people met ai lab former seems likely especially since house strong representation ai lab event playing logo left pretty much alone figure lot fun undergraduate would sometimes come ai lab play hack logo began learn program remember anyone teaching think must taught sometimes would try use lisp pdp mysterious figure summer worked ibm operator low level position calling much skill espresso maker spare time work allowed use computer language apl time found textbook language able learn still idea languages actually worked used sophomore year took course ancestor course known course explained computer language could designed using simpler language building blocks also tried give us sense ideas modularity top design crucially idea abstraction one make program represents concept set agreements thereafter use without needing know concept implemented program becomes black box whose internal details irrelevant later year took second course explained simplest sorts computer languages machine language could implemented hardware circuits able understand computer programming level individual logic gates wanted reinforced sense value keeping different levels separate order build large complex structure later though would learn one hardest problems deciding draw modularity lines putting one borders wrong place makes system slow difficult use next major step learning programming student job architecture machine group ancestor media laboratory days group students arcmac developing new operating system use around lab operating system new full bugs turn demanded constructed many software tools examining structures used program opportunity look shoulders experienced even use tools bit poke around using one tools suddenly understood actual meaning patterns binary ones zeros machine significant difference information disk machine memory given region memory instruction number letter picture difference solely matter interpretation perhaps biggest aha life happy people around could understand mattered working job began think make program something make easy someone else use also step towards professional programmer worker makes artifacts others use delight making also time also began good enough designer people started taking ideas design function seriously graduated began work real world programmer first job imlac needham ma imlac minicomputer d call workstation sort expanded pdp built vector display processor programmed assembly language imlac big product phototypsetting system ces took advantage raster graphics offer kind wysiwyg interface typesetting laser printers kept first job year moved new job honeywell multics multics operating system great historical importance first developed partnership mit general electric experiment practical large time sharing system time cutting edge state art computer science time joined multics group days past group retained measure pride still high standards even though time passed learned several important ideas working multics people first understanding interface relation program user expanded include idea user might another programmer important make programs building blocks programmers whose needs could expect easily anticipate second idea programs meant read people well machines multics group developed programming process required modification system described justified group senior programmers written read person author installed necessary multics far large single person understand coordination review board provided kept multics stable consistent grew changed years though multics nearly forgotten set mark software quality never equalled working multics taught careful designs always allow room unanticipated future changes expect people read programs work multics came know many people one particular note bernie greenberg bernie one brilliant programmers ever met addition talented musician playing rock guitar baroque harpsichord equal ease spoke several languages bernie also re introduced lisp time mit artificial intelligence laboratory developing first lisp machines bernie friends several key workers project learned lisp bernie long left multics join new startup company commercialize lisp machine soon left well join logo computer systems new firm intended implement version logo apple ii home computer logo computer systems first time ever startup firm instead formal regulations multics adhoc group included several close friends lovers well bizarre personalities lcsi worked hard knew money short supply would often work hours row almost work lisp lisp machines gradually became expert language end managed produce product time us left company result political battles higher management turned blessing though alan kay gone atari quite rich alan setting research labs california cambridge almost entire boston staff lcsi came form atari cambridge research center atari gave us money design best work environment could think freedom work problems interested us able work music able hire one friends tom trobaugh work atari knew happiness working partner problems really cared using powerful computers available alas atari began lose money one day closed lab atari went enrolled mit media lab one first contingent doctoral students media lab media lab encourages students set directions fact insists pros cons advantage learn independent think outside common assumptions field drawback always companionship others learning case became interested linguistic phenomenon called paraverbals inarticulate noises like uh huh hmmm help make conversation run smoothly pretty large literature subject discover m sure would gone faster guide hand experienced authority controlling learning wouldn done important thing media lab constant focus demonstrating one work people complain important good demo able explain re matters smart uninformed person short sentences learn clear learn express idea benefit learner teacher learn grace pressure wish everyone learned skills one first projects worked phonetic dictionary remember kid asked grown meaning word told look dictionary fine idea except hard ve heard word know spelled especially true english bizarre spelling rules phonetic dictionary allows look word spelling according sounds spelled write approximation sound word system consults dictionary organized pronunciation key thing able accept wide range phonetic spellings example word headache might write hedayk hedake pleased see project mentioned first page stewart brand book lab supervisor chris schmandt known login name geek could write length knowledge lots smart people world two qualities rare first autocrat argue way put air superiority call geek second even valuable kept perspective particular always taking week two time bring baby daughter wilderness learned computer happily sit idle week week lost fathering gone ever major project back seat driver car could give driving instructions city boston street map knew roads navigation system knew speech synthesizer could talk actually make work needed car car navigation system supplied sponsor japanese electronics firm designed work one type car top line luxury sedan also needed one two cellular phones car communications media lab bought needed kept keys surely graduate student usa lab equipment one day demonstrating back seat driver group general motors took ride great time shooting pictures another getting japanese car went driving usually happened one point driver missed turn normally consequence bsd would calmly inform driver fact plan new route case driver former race car driver quickly made illegal u turn without even slowing maneouver even seasoned boston drivers never attempted caused program crash guess better crashing car ll add something demise lisp machines rise unix becoming obsolete
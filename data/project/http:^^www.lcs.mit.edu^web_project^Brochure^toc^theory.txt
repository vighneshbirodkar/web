server netscape commerce date tuesday nov gmt last modified thursday jun gmt content length content type text html theory computation group one world largest groups theoretical computer researchers laboratory computer science lcs pursues nearly every major area computer technology interests range basic mathematical theory computational geometry complexity theory number theoretic algorithms theoretical work foundations electronic circuitry communications biology cryptography computer architectures important goal theoretical computer science create formal models computation explore possible within models results deepen understanding basics computer science also alter practice efficient algorithms novel architectures better understanding program meaning many models reflect recent technological advances parallel distributed computing example work also performed traditional models finite automata ordinary sequential computers parallel algorithms efficient algorithms scientific computing computational biology machine learning computational complexity cryptographic protocols program semantics distributed computing mit world leader parallel algorithms architectures thus work closely architects systems designers create next generation parallel supercomputers faculty students interact leading companies thinking machines ibm design analyze communication networks parallel computation models efficient parallel algorithms various applications methods making large scale parallel machines fault tolerant surprisingly deeply involved design use forthcoming information highway efficient network based communications fact one important exciting challenges facing theory researchers tom leighton professor applied mathematics parallel algorithms michel goemans assistant professor appliedmathematics efficient algorithms lcs also vigorously researches efficient algorithms sequential computers surprisingly perhaps improved algorithms well known problems continue discovered new theoretical problems often arise spin offs advances computer technology work focuses algorithms graph problems computational geometry number theoretic problems laying routing vlsi circuitry recent projects include line algorithms know data advance randomized algorithms use random numbers aid decision making approximation algorithms guaranteed find near optimum solutions many fundamental problems provide insight design analysis efficient algorithms lie area combinatorial optimization recently seen surge exciting developments approximation algorithms difficult optimization problems lcs leader obtaining novel general techniques designing algorithms developed improved approximation algorithms variety problems including related multicommodity flow network design well specific problems graph bisection problem maximum cut problem alan edelman assistant professor applied mathematics scientific computing david r karger assistant professor ofcomputer science engineering algorithms largely result rapid advances parallel computing technology scientific computing become one computer science active areas interdisciplinary area bridges numerical analysis linear algebra computer architecture program analysis optimization software engineering scientific visualization various scientific applications problems scientific computing often strain resources modern parallel machines compelling us advance new tools ideas lcs researchers pioneered adaptation algorithms special needs scientific applications scientific computing involves various research topics theoretical computer science finite element finite difference mesh generation sparse dense matrix computations solution large scale linear systems problems translated approximated combinatorial geometric problems including network optimization communication network topology emulation graph embedding parallel machine scheduling dynamic load balancing geometric modeling triangulations fundamental issue parallel scientific computing mesh partitioning large mesh divided given number pieces roughly equal weights boundary small efficient partitioning vital balance load reduce communication parallel solutions sparse linear systems also useful parallel emulation computational meshes hypercube butterfly architectures core algorithms iterative relaxation computational biology represents another new exciting research area accordingly one goals expand computational toolkit available numerous biological problems computer science example helps make sense vast amount information compiled human genome project dna amino acid sequence data one intra miteffort drawn resources lcs whitehead institute biology mathematics departments specific research areas include computational approaches protein folding physical genetic mapping virus shell assembly aids theories sequence homology alignment yet another illustration computational biology relates called grand challenge associated protein folding determination protein fold three dimensionally amino acid sequence known important first step answering question solution motif recognition problem given known d structure motif researchers must determine whether fold occurs unknown sequence amino acids positions techniques theoretical computer science particularly effective solving problems ronald l rivest edwin sibley websterprofessor computer science engineering associate director lcs machine learning bonnie berger assistant professor mathematics computational biology another front researchers machine learning study computers ability learn experience results research stimulated various formalizations address range issues psychology artificial intelligence pattern recognition neurobiology recent research themes include inference finite automata learning presence noise learning unknown environment piecemeal exploration learning manifest systems relevant variables often always visible learner models teaching general group research positive nature strive develop provably efficient learning algorithms potentially practical application cases however research leads equally useful negative results identifying limits ultimately learnable another major theme development new models learning provide better theoretical formulations real world learning situations appropriate algorithms one example learn concept defined boolean formulae examples concept another infer structure finite state system examining system input output behavior statistical techniques needed determine much data needed given problem complexity theory helps assess difficulty computing desired answer data machine learning research generally theoretical nature although experimental involves careful specification models learning precise specification analysis learning algorithms use wide range models capture different aspects technical philosophical relevance learning noisy data learning hierarchically structured concepts learning neural nets learning via different output representations learning represent system containing hidden state variables trading simplicity hypothesis quality fit data shafrira goldwasser professor electrical engineering computer science cryptographic protocols silvio micali professor electrical engineering computer science cryptographic protocols cryptography another important area research within lcs simplest ancient form cryptography relates secret communication cast framework complexity theory sender recipient adversary computationally bounded machines encryption system deemed secure computationally unfeasible adversary obtain information encodings since proving non trivial lower bounds complexity np complete problems within current state art proof security must show method compromising security transformed efficient algorithm problem factoring integers generally believed intractable achieving privacy one area cryptography research another design protocols authentication certified electronic mail contract signing two mutually suspicious parties general goal perform arbitrary distributed computation among many processors containing portion input processor connected network processor reveals information intended protocol research led complexity theory amount knowledge must released order one processor prove fact another processor theory zero knowledge proofs generating pseudo random numbers functions another important field randomness defined respect specific model computation specific level computational resources lcs researchers contributed virtually cryptographic inventions past decade including invention first public key cryptosystem probabilistic cryptosystems invention zero knowledge proofs michael sipser professor applied mathematics computational complexity theory mauricio karchmer assistant professor mathematics computational complexity theory lcs also enjoys traditional leadership role computation complexity theory one prime goals field devise study natural schemes classifying problems according computational difficulty place familiar important problems within appropriate scheme one familiar example problem factoring large integers finding prime numbers divide integer evenly exercise theoretically interesting also relevant cryptography brute force method searching prime factors one one slow useful better algorithms known determining intrinsic difficulty factoring problem one complexity theory many exciting questions lcs researchers first show problems high intrinsic complexity investigating complexity problems akin factoring studying power weak computational models branching programs monotone circuits bounded depth formally constrained models easier analyze thus may help us better understand standard models closely related work studying power probabilistic computation parallelism randomness pseudo randomness interactive proof systems basic computing concepts albert r meyer hitachi america professor engineering program semantics logic peter elias professor emeritusand senior lecturer information theory elsewhere within lcs researchers theory programming semantics logic aim provide clear mathematical foundations reliable reasoning principles conform robust functional metaphor programmers use design describe justify programs programming routinely unites high abstraction pragmatic design includes declaration procedures functions data types processes objects researchers objective lay solid foundation task computer scientists notion function however may depend context evaluated contrasts mathematician classical notion function bridging conceptual gap involves elements algebra modal intuitionistic logic category complexity computability proof type theory applied programming language design compiler construction program optimization work extended study specifying meaning verification properties parallel distributed processes nancy lynch professor electrical engineering computer science distributed computing baruch awerbuch research scientist distributed computing distributed computation theory designed clarify basic capabilities limitations concurrent distributed computing systems research results include new algorithms analysis impossibility results formal concurrent systems models models techniques proving correctness concurrent algorithms problems typically include getting non failing processors agree synchronizing non failing processors fault tolerant compiling routing resource allocation sharing access data graph theoretic problems breadth first search finding minimum cost spanning trees basic problem fault tolerant computing cause processors agree among value data item say common course action simple exercise absence faults may impossible faults present individual processors reliable knowledge states processors work led many interesting algorithms impossibility results demonstrate conditions consensus cannot achieved important lcs project related network protocols development series efficient algorithmic transformers result project compilation protocols designed relatively simple network model protocols run complex realistic environment lcs developed important formalism input output automaton model basic mathematical model concurrent distributed systems components simple state machine model helps describe interactions concurrent system environment model verifies correctness algorithms also helps find fix serious gaps basic existing algorithms construction multi writer atomic registers example
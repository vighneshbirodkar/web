mime version server cern date monday dec gmt content type text html content length last modified monday mar gmt cs fall course materials cs fall foundations artificial intelligence course materials cs handouts cs lecture notes cs homeworks solutions cs handouts project information cs lisp labs cs presentation schedule cs handouts tentative course syllabus last modified cs lecture notes introduction ai sep defining artificial intelligence sep knowledge representation semantic networks frames problem solving search sep state space search iterative deepening sep heuristic search hill climbing simulated annealing sep heuristic search beam search best first search sep optimal search sep adversarial search sep alpha beta pruning rule based reasoning sep history game playing components rule based systems sep class sep algorithms forward backward chaining sep class sep conflict resolution expert systems machine learning oct introduction machine learning oct instance based learning decision tree induction oct learning search oct fall break oct version space algorithm oct neural nets backprop oct neural nets ii intro genetic algorithms oct genetic algorithms oct midterm knowledge representation inference oct representing knowledge first order logic oct inference first order logic oct resolution theorem proving oct logical reasoning systems planning nov planning introduction nov partial order planning nov hierarchical decomposition uncertain knowledge reasoning nov abduction bayes rule nov belief networks nov constructing belief networks nov inference belief networks natural language understanding nov ambiguity language stages processing nov syntactic analysis state space search nov class nov thanksgiving break nov bottom chart parser nov semantic analysis conceptual analysis dec conceptual analyzers today circus problem inference dec inference scripts putting together dec nlp learning planning selected project presentations dec selected cs project presentations cs homeworks solutions section intentionally left blank cs handouts project information course syllabus project information project ideas proposal format final project submission etc examples code good procedural data abstraction well good consistent indentation courtesy ed wayt oumi mehrotra gene lisp genetic lisp getting started project easier write code stages result ll turn code review regularly whether running final grade based intermediate code reviews d suggest working code reason think particular project doesn fit well structure let know ll create personalized schedule first think major modules project requires knowledge structures e g rules state descriptions board representations ll need including related constructor functions accessor functions described winston main text implement modules stubs e lisp functions substantive code specify necessary parameters make calls appropriate module stubs write code implement generic knowledge structures completed code review oct get system running beginning end soon possible simple example invariably require making many simplifying assumptions completed code review nov design implement inference engine control strategies needed system e g specific search strategy rule interpreter move generator learning algorithm completed code review nov incrementally remove simplifying assumptions adding necessary code evaluate system appropriately project end common lisp language guy steele common lisp resouces cmu ai repository including lisp faq cs lisp labs lab sep lists taking lists apart firing lisp due sep lab sep primitives edit eval loop procedures due sep lab solution shows declare global variables example reasonable indentation documentation lab sep conditionals recursion procedural abstraction due sep lab solution example reasonable indentation lab oct data abstraction mapping iteration due oct lab oct o debugging structures clos due oct return cs home page
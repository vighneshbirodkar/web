date tue nov gmt server ncsa content type text html last modified sun nov gmt content length cs mail list archive cs mail list archive auto generated hideous perl script sat nov table contentsbetter cvs documentation timer hint please sign project meetings obnoxious flame project design documents office hours clarification office hours calculators midterm addendum limits message routing requirements summarized limits network configuration draft design due friday authoritative aal service interface ready design document evaluation form aal send blocks using multiple sockets addendum using multiple sockets protocol state machine error warning codes midterm exam tcp spec struct aal sap re must tell groups today initialization hooks added aal service interface clarification sap aal conn desc etc project groups first assignments change office hours week policy remedial questions re error network congif caching virtual circuits questions routing alg error network congif slides fixed process spawning script available information solaris threads class notes slides friday talk line mail project groups project description line handimg hard copy clarification assignment due time assignment due time solaris bsd equivalences sample makefile parallel mail archive reversal undergrads project undergrads sending structures handing first assignment buffer size recvfrom get size file message chars worry network order note inet ntoa using cs html mail archive inet ntoa struct hostent struct addr handling invalid address send struct clarification assign interface look files tcp protocol appropriate datagrams compiler warnings sample code assignment deadline besaw sample client server code available better cvs documentation date sat nov benjamin teitelbaum cs list alfred cs wisc edu subject better cvs documentation sender owner cs list cs wisc edu considering using cvs trouble getting man pages check info documentation much better m x info emacs o o timer hint date wed oct benjamin teitelbaum cs list alfred cs wisc edu subject timer hint sender owner cs list cs wisc edu knock trying implement elaborate timer mechanism solaris cond timedwait function allows wait condition variable bounded amount time effectively gives clean way set timeout later cancel ack arrives consider attached demonstration feature note necessarily good example write code demo cond timedwait source executable p course cs lhl public project timerdemo o o include include include include include enum state idle request pending acked connection control block class class connectcb public construct ccb given timeout connectcb char nm int timeout name nm state idle mutex new mutex ackarrivedcv new cond destructor connectcb delete mutex delete ackarrivedcv set connection retransmitting necessary void establishconnection int attempt int wakereason mutex lock mutex send initial connection request state request pending sendconreq attempt set timeout value struct timespec timeouttime timeouttime tv sec time null timeout timeouttime tv nsec wait ack timeout whichever comes first note needed mesa cv semantics state request pending wakereason cond timedwait ackarrivedcv mutex timeouttime timout occured retransmit reset timeout wakereason etime wakereason etimedout sendconreq attempt timeouttime tv sec time null timeout printf thread done ack arrived n name mutex unlock mutex process ack void ack mutex lock mutex state acked cond signal ackarrivedcv mutex unlock mutex get connection state state getstate state retval mutex lock mutex retval state mutex unlock mutex return retval private methods private send connection request message void sendconreq int trynum printf thread sends connection request d n name trynum private data private state state const int timeout char name mutex mutex cond ackarrivedcv public thread thrid connectcb ccb void establishconnectionstub void ccb connectcb connect connectcb ccb call class function given object connect establishconnection return main ccb new connectcb thr create establishconnectionstub void ccb ccb thrid ccb new connectcb b thr create establishconnectionstub void ccb ccb thrid sleep ccb ack sleep ccb ack sleep thr exit please sign project meetings date sun oct benjamin teitelbaum cs list alfred cs wisc edu subject please sign project meetings sender owner cs list cs wisc edu would like schedule individual meetings project group week discuss return draft designs office hours canceled accommodate minutes meetings group meeting slots available tr wf sign electronically follows view ben public signup sched txt consult group members pick available time slot edit ben public signup sched txt quickly enter group time slot please please mangle file write back ages load editor system degenerates chaos ll resort paper signup sheet meetings held one offices conference room get one later case forwarding notes left office doors see soon ben srinivasa obnoxious flame project design documents date sat oct benjamin teitelbaum cs list alfred cs wisc edu subject obnoxious flame project design documents sender owner cs list cs wisc edu ta still working way draft project specifications mean slack project indeed judging seen far many still lot design work general comments apply specifications seen document suppose specification casual discussion issues set annotated header files must provide full details system structure algorithms key data structures packet formats anyone reading spec especially members project team know exactly system supposed built furthermore end semester project doesn work specification main proof least right track many clearly clue make fsm description protocol suggest looking tcp state diagram book following general guidelines every state name make clear diagram describes break complex protocols cases example show fsm vc establishment corresponding roles played connection request initiator destination node end point intermediate node label state start state every arc two labels event causes transition action take testing plans implementation schedules woefully sketchy come plan build test project incrementally guaranteed able demonstrate least subset project works wave hands anything example plan use tcp checksum algorithm describe hope helps o o office hours clarification date tue oct srinivasa narayanan cs list cs wisc edu subject office hours clarification sender owner cs list cs wisc edu office hours tomorrow sorry confused previous mail nsp office hours date tue oct srinivasa narayanan cs list cs wisc edu subject office hours sender owner cs list cs wisc edu available tomorrow instead available changes office hours tomorrow nsp calculators date mon oct lawrence landweber cs list parmesan cs wisc edu subject calculators sender owner cs list cs wisc edu may use calculators test midterm date sun oct lawrence landweber cs list parmesan cs wisc edu subject midterm sender owner cs list cs wisc edu material text covered exam chapter chapter chapter addition material discussed class plus notes handed documents purchased doit included addendum limits message date wed oct benjamin teitelbaum cs list cs wisc edu subject addendum limits message sender owner cs list cs wisc edu nodes network links per node connections passing terminating node addition may make one assumption node ever hops away node o o routing requirements summarized date wed oct benjamin teitelbaum cs list alfred cs wisc edu subject routing requirements summarized sender owner cs list cs wisc edu algorithm must detect link failures caused node failing one end link route exists network b connection request b must succeed note underlying vc necessarily follow shortest path times virtual circuit exists b node goes middle alternative route b connection must stay alive perspective aal client technically speaking stay alive perspective atm client note ok tear vc rebuild endpoint long higher system layers notice anything happened alternative route b connection closed aal clients informed per service interface specification limits network configuration date tue oct srinivasa narayanan cs list cs wisc edu subject limits network configuration sender owner cs list cs wisc edu many asking size network stuff assume following limits nodes network links per node connections passing terminating node ben nsp draft design due friday date tue oct benjamin teitelbaum cs list alfred cs wisc edu subject draft design due friday sender owner cs list cs wisc edu go document carefully checking design reasonable complete although final version design document counts portion project grade graded draft version good opportunity get early feedback us waste time effort pursuing bad flawed design o o authoritative aal service interface ready date sun oct benjamin teitelbaum cs list alfred cs wisc edu subject authoritative aal service interface ready sender owner cs list cs wisc edu p course cs lhl public html fall src aal h link successfully ftp ftpd must support interface changes elaborations tentative interface described handout please check file carefully o o design document evaluation form date fri oct srinivasa narayanan cs list cs wisc edu subject design document evaluation form sender owner cs list cs wisc edu evalution form project design document available online postscript form nsp aal send blocks date fri oct benjamin teitelbaum cs list alfred cs wisc edu subject aal send blocks sender owner cs list cs wisc edu aal send block calling thread data packet buffer enqueued aal point packet buffer reused application layer cannot assume data actually arrived want aal send block sent data acknowledged ok o o using multiple sockets addendum date thu oct benjamin teitelbaum cs list alfred cs wisc edu subject using multiple sockets addendum sender owner cs list cs wisc edu pretty much acceptable reason using multiple sockets per node want realistic simulation physical links link layer system band communication allowed nodes link specified configuration file o o using multiple sockets date thu oct srinivasa narayanan cs list cs wisc edu subject using multiple sockets sender owner cs list cs wisc edu wanted use multiple sockets atm layer protocol virtual nodes port number guarantee port numbers always integer multiple enable use multiple sockets sure port number extra sockets multiples nsp protocol state machine benjamin teitelbaum date wed oct cs list alfred cs wisc edu subject protocol state machine sender owner cs list cs wisc edu see page textbook example o o error warning codes date wed oct lawrence landweber cs list parmesan cs wisc edu subject error warning codes sender owner cs list cs wisc edu notes code citing error codes full list referenced via class web page next line assignement date wed oct lawrence landweber cs list parmesan cs wisc edu sender owner cs list cs wisc edu apologize forgetting bring assignments come office pick midterm exam date tue oct lawrence landweber cs list parmesan cs wisc edu subject midterm exam cc ben parmesan cs wisc edu lhl parmesan cs wisc edu nsp parmesan cs wisc edu noland wednesday october pm tcp spec date tue oct lawrence landweber cs list parmesan cs wisc edu subject tcp spec sender owner cs list cs wisc edu tcp spec available online via class web page http www cs wisc edu cs tcp friday next week struct aal sap date fri oct benjamin teitelbaum cs list alfred cs wisc edu subject struct aal sap sender owner cs list cs wisc edu sap simply name particular service particular host data structure used represent sap struct aal sap count looking like complete h coming soon host id type could node number network configuration file typedef int host id aal service identifier type typedef int aal servid aal service access point sap typedef struct host id hostid aal servid servid aal sap o o re must tell groups today date fri oct lawrence landweber ben cs wisc edu subject re must tell groups today cc cs list alfred cs wisc edu sender owner cs list cs wisc edu cs students let emphasize ben request people group info could people please send status ben friday please whether currently group initialization hooks added aal service interface date wed oct benjamin teitelbaum cs list alfred cs wisc edu subject initialization hooks added aal service interface sender owner cs list cs wisc edu addition aal service interface calls listed project handout initialization hook set worker threads shared data structures layers void aal init must support call precisely totally hook use main thread main call aal init create ftpd server thread create ftp client thread go sleep thing missing prototypes aal service interface functions error codes must supported ready next week o o clarification sap aal conn desc etc date wed oct benjamin teitelbaum cs list alfred cs wisc edu subject clarification sap aal conn desc etc sender owner cs list cs wisc edu srinivasa made nice diagram shows sequence events connecting server also clarify terminology using p course cs lhl public html fall project sap eps o o project groups date wed oct benjamin teitelbaum cs list alfred cs wisc edu subject project groups sender owner cs list cs wisc edu groups one know please find group asap mail members names usernames groups two need another person edwin sutanto edwins henny dwiyono dwiyono groups three ming amir roth amir glenn ammons ammons scott colville sec brian swander swanderb tim flechtner flechtne abhinav gupta agupta ashish thusoo ashisht shrinivas ashwin sashwin zhenyu liu zhenyu konstantinos dovrolis konstant moncef elaoud moncef luke blanshard luke jennifer shi shi taxiao wang twang narayanan anand narayana shyamsundar nuggehalli shyamsun andrew therber andyt chris weaver weaver shilpa lawande ssl v gopalakrishnan raji john edwards edwards johannes gehrke johannes krzysztof zmudzinski zmudzin andrew miller miller dan schuster schuster erik yoder yoder kurt wiedenhoeft wiedenho eric groth groth paul salmon pdsalmon daniel goemans goemans peter mateja mateja randal ramig randal zhenhai lin zhenhai liping zhu liping dan yao dyao baicheng liao bail xuelin lu xuelin tim fliss fliss shad aumann aumann mike payne mpayne tricia powers powers ming yin mak newton mak chi man sizto jason chi man chi yan liu alice chil brad thayer brad david sundaram stukel sundaram kurt froehlich froehlic sivasankaran chandrasekar schandra george varghese joev chan wai kei stephen waic susan chiang susanc eleanora suran suran oguz yetkin yetkin irvin tsang irvin shang zou zou chi cheng chu chi chen luis ulloa ulloa kin chan kinc kam weng cheong kamweng zhe wang zhe haihong wang whh jin zhang zj thomas dever dever jim auer auer kristin martens martens haris stewart haris byron yeung byron soma dasgupta soma yau mo chan yau ching lun wu chinglu rong wang rongw dan schuster schuster andy miller miller erik yoder yoder o o date wed oct benjamin teitelbaum edwins cs wisc edu cc cs list alfred cs wisc edu reply message edwin sutanto tue oct cdt subject fsm missing slides sender owner cs list cs wisc edu ehmm ben postscript project overview slides still meesing fsms know hand pasted fsm look page http www cs wisc edu cs fall project see slides o o first assignments date tue oct benjamin teitelbaum cs list alfred cs wisc edu subject first assignments sender owner cs list cs wisc edu done grading friday monday latest o o date tue oct benjamin teitelbaum swanderb cs wisc edu cc nsp maggie cs wisc edu cs list alfred cs wisc edu reply message brian swander wed sep cdt subject interactions garbler signalling routing sender owner cs list cs wisc edu question garbler arbitrary protocols garbler effect atm packets going meaning signalling packets routing packets uneffected garbler garble everything much realistic potentially garbles atm payloads never garble atm cell header therefore yes need worry signalling routing protocol cells garbled garbler garble everything deal arbitrary structure signal routing packets need come signalling routing protocols communicate completely within secure garbling header atm packets meaning send atm packets use payload type header tell interpret header won able squeeze routing signalling info atm cell header checksum crc computation cells could put payload use crc field atm cell header design choice seems best solution allow arbitrary packets whatever size like sent signalling routing protocols lost garbled question first bytes garble proof would need sort crc check rest send signalling routing info byte chuncks careful signalling routing protocols communicating atm cells packets word using describe aal data transfer unit believe answered questions previous comment o o change office hours week date sun sep srinivasa narayanan cs list cs wisc edu subject change office hours week sender owner cs list cs wisc edu please note following change office hours week monday shifted mts earlier normal hours wednesday cancelling compensate hold office hours thursday sorry inconvenience nsp policy remedial questions date sun sep benjamin teitelbaum cs list alfred cs wisc edu subject policy remedial questions sender owner cs list cs wisc edu help questions networking course project teach c prerequisite debug programs questions like compiler says x basic questions c programming language like const method getting strange error like code const instance class called method prints contents bvect cc call non const method int bvector print const object given last priority since steady stream valid questions project means questions like probably never answered questions like suggest buying book c like scott meyers books studying man pages reviewing notes sorry obnoxiousness o o re error network congif date fri sep benjamin teitelbaum luke blanshard vnp com cc cs list alfred cs wisc edu subject re error network congif sender owner cs list cs wisc edu expect us handle erroneous configuration files like one started barf go ahead allow connection present either direction assume errors configuration file o o date thu sep benjamin teitelbaum haris cs wisc edu cc nsp sol cs wisc edu cs list alfred cs wisc edu reply message haris stewart mon sep subject suspend nodes cause garbler go insane sender owner cs list cs wisc edu said project d bringing nodes killing processes perhaps restarting wondering really plan expect might either following well suspend process node goes unresponsive later floods network packets way late ignored node gets times kill nodes perhaps restart worry node suspended later restarted causing really old cells transmitted insane garbeler garbeler goes insane node spits packets onto network total garbage recoverable atm packets ignore packets offending node works problem course either options mean re routing virtual circuits around dead bad nodes may mean increased useless traffic dealt garbler go insane introduce constant amount noise across links o o caching virtual circuits date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject caching virtual circuits sender owner cs list cs wisc edu another minor point ok cache virtual circuits found sake efficiency try first completely unnecessary doesn make sense first would cache vc node knows local part vc whole thing secondly even bent backwards cache vc might valid routing tables changed o o questions routing alg date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject questions routing alg sender owner cs list cs wisc edu graph algorithm optimal routing use shortest path algorithm need consider complexity example re route vc timeout occurs search next best circuit network large shortest path algorithm isn exactly lightning fast assumptions make size network important routing algorithm discover routes detect route two end points find optimal routes course worry loops vis vis last question let say network contain nodes set timeout values accordingly o o error network congif date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject error network congif sender owner cs list cs wisc edu network congif gave following sample network configuration file syntax clear comments must begin node sol links node sol links blank lines ok node sol links node sol links shouldn node also connect back node like node sol links absolutely right sorry o o slides fixed date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject slides fixed sender owner cs list cs wisc edu project overview slides fixed thanks shad aumann link still place course page note set ghostview orientation seascape view right side software engineering talk slides coming soon o o process spawning script available date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject process spawning script available sender owner cs list cs wisc edu script automatically invokes copy project running node mentioned network configuration file http www cs wisc edu cs fall project moa pl please read comment top usage information see script constrains command line syntax ve also placed sample network configuration file directory might find useful lives http www cs wisc edu cs fall project network config find problem script please let know right away thanks o o information solaris threads date wed sep benjamin teitelbaum cs list alfred cs wisc edu subject information solaris threads sender owner cs list cs wisc edu lots information http www sun com sunsoft products developer products sig threads resources html including good faq pointers various papers threads also downloaded solaris multithreaded programming guide mentioned class pages long d put p course cs lhl public html fall project solthreads ps still pages long might want look see useful print o o class notes date tue sep lawrence landweber cs list parmesan cs wisc edu subject class notes sender owner cs list cs wisc edu sets notes available purchase doit bit oriented link protocols logical link control spec spec spec cover order beginning next monday slides friday talk line date mon sep benjamin teitelbaum cs list alfred cs wisc edu subject slides friday talk line sender owner cs list cs wisc edu since many folks requested put slides friday presentation project line available course page either ms powerpoint format postscript however postscript messed least viewed ghostview landscape slides printed across portrait pages postscript ms windows gurus generate correct postscript either file please send correct postscript tell thanks o o mail project groups date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject mail project groups sender owner cs list cs wisc edu group three together please mail ben names usernames thanks o o project description line date thu sep benjamin teitelbaum cs list alfred cs wisc edu subject project description line sender owner cs list cs wisc edu postscript version project available cs home page time please look tomorrow morning present project lecture o o handimg hard copy date wed sep srinivasa narayanan cs list cs wisc edu subject handimg hard copy sender owner cs list cs wisc edu worrying turn hard copy late night slip hard copy ben office door room dont need key get room thanks nsp clarification assignment due time date tue sep benjamin teitelbaum cs list alfred cs wisc edu subject clarification assignment due time sender owner cs list cs wisc edu mean midnight day midnight evening tomorrow deadline wed sep cdt still want hard copies handed class tomorrow ever hand tomorrow morning class put hard copy one mailboxes th floor slip one office doors thanks o o assignment due time date tue sep benjamin teitelbaum cs list alfred cs wisc edu subject assignment due time sender owner cs list cs wisc edu important everyone get first assignment working deadline submitting midnight tomorrow o o solaris bsd equivalences date tue sep benjamin teitelbaum cs list alfred cs wisc edu subject solaris bsd equivalences sender owner cs list cs wisc edu library calls sample code including bzero bsd specific may trouble finding solaris derived mainly system v r ways things convenience appended chart mapping bsd calls solaris equivalents bsd possibilities standards notes srandom seed srand seed ansi c also older unix srand seed svr non ansi signal sigset svr systems calls e g sunos restarted bytes r w returned else eintr sigaction posix extensible implementation sigvec sigaction posix sigblock sigprocmask posix sigset sig hold sighold svr sigsetmask sigprocmask posix sigset sigrelse svr sigpause sigsuspend posix setjmp sigsetjmp posix longjmp siglongjmp posix statfs statvfs svr bcopy memmove ansi c bsd bcopy handles overlapping areas correctly memmove memcpy bzero memset ansi c index strchr ansi c rindex strrchr ansi c getwd getcwd posix getrusage open ioctl getrusage information whole lot found prusage structure use piocusage ioctl see example proc man page detail gethostname sysinfo si hostname svr see sysinfo many possible values getdtablesize sysconf sc open max posix see sysconf c many values available via sysconf strptime see code kevin ruddy timelocal mktime wait w o rusage waitpid posix wait waitid svr wait see j org schilling wait emulation code usleep nanosleep posix see nanosleep r solaris see libposix solaris see example sample makefile date tue sep benjamin teitelbaum cs list alfred cs wisc edu subject sample makefile sender owner cs list cs wisc edu simple makefile rebuild client server programs modify suit needs cc g ld g defines incpath cflags g wall incpath defines ldflags client o client o common o server o server o common o srcs client c server c common c client client o ld client o o client ldflags server server o ld server o o server ldflags c o o cc cflags c parallel mail archive date tue sep benjamin teitelbaum cs list alfred cs wisc edu subject parallel mail archive sender owner cs list cs wisc edu ve learned lab automatically archiving course mail hypermail lab archive lives http www cs wisc edu lists classes cs list nicely threaded message subject keep current mail archive generated perl script running since easy filter messages irrelevant faq looking project partner internet china etc bottom line want see archive messages look http www cs wisc edu lists classes cs list want see moderated archive look http www cs wisc edu cs mail archive html o o reversal date mon sep lawrence landweber cs list parmesan cs wisc edu subject reversal sender owner cs list cs wisc edu ok concede goal break friendships split hairs status devise single project blend two versions planning undergrads date mon sep lawrence landweber cs list parmesan cs wisc edu subject undergrads sender owner cs list cs wisc edu since sending note received requests regarding mixed teams special students non cs majors etc system adopt teams made undergrads implement fewer functions change undergrads trivialize project make bit less work since every student class equivalent proficient c programming reason distinguish majors goal help students undergrads likely taking courses grad students note projects graded curve every team get deserves independent done others class would thrilled projects would disappointed c d f projects project undergrads date mon sep lawrence landweber cs list parmesan cs wisc edu subject project undergrads sender owner cs list cs wisc edu indicated class today teams undergrads implement much protocol functionality term project teams containing grad students purpose undergrad team one three members classified undergrads e g ce ls bus etc special students count grad students sending structures date mon sep srinivasa narayanan cs list cs wisc edu subject sending structures sender owner cs list cs wisc edu one note sending structures seems like people still doubts one shouldn send structure sorry earlier messages cryptic ll present concrete example help doubts lets define sample structure struct pkt short type long data define variable type pkt struct pkt pkt lets assume address pkt sun sparcs size pkt bytes bytes field type bytes used bytes used field data reason machines long inetgers required aligned double word boundary hence bytes cannot used field data however machines requirement structure pkt defined vectra size bytes assuming pkt starts address byte used type field bytes used data field requirement long field aligned double word boundary assuming client runs sols server runs vectras imagine happen send structures across network thanks nsp handing first assignment date sun sep benjamin teitelbaum cs list alfred cs wisc edu subject handing first assignment sender owner cs list cs wisc edu absolutely done assignment please copy source code well makefile build client server programs p course cs lhl public handin note insert access write delete access directory certain done copy code also grading convenience please makefile generate client executable named client server executable named server copy executables object files handin directory able go handin directory type make see two executables called client server created test need tutorial using make look http www cs wisc edu cs make html also please hand d paper copy assignment class wednesday per requirements section assignment let us know trouble hand process o o buffer size recvfrom date sat sep srinivasa narayanan cs list cs wisc edu subject buffer size recvfrom sender owner cs list cs wisc edu also one question happens read part packet specify within recvfrom buffer small packet size since datagram protocol stream didn think possible read part packet come back another call read later part tried yet seems read nothing first part rest away stream protocol think make sense get bytes time think right reading parts time works streams datagrams buffer size smaller recvfrom call throw away rest packet get size file date fri sep benjamin teitelbaum edwins cs wisc edu cc cs list alfred cs wisc edu subject get size file sender owner cs list cs wisc edu another question get size file get stat int stat const char path struct stat buf o o message chars worry network order date thu sep benjamin teitelbaum yetkin cs wisc edu cc cs list alfred cs wisc edu nsp sol cs wisc edu subject message chars worry network order sender owner cs list cs wisc edu anything dictates structure packets specifically something drastically wrong making packet array characters bytes long putting integers appropriate fields ascii characters still worry network host order sending packets level sendto recvfrom library calls packets send arrays characters point however still need worry endian ness know first two characters really represent integer aren careful represent wrong integer byte mirror image end yes still worry network host order hope helps o o note inet ntoa date thu sep srinivasa narayanan cs list cs wisc edu subject note inet ntoa sender owner cs list cs wisc edu following address inet ntoa hostp h addr get error incompatible type argument inet ntoa exactly thing place hostp declared struct hostent hostp first argument inet ntoa type struct addr h addr list field struct hostent defined char hence h addr define h addr list type char pointers h addr list h addr list etc really pointers structures type addr type cast using inet ntoa function inet ntoa call would look like inet ntoa struct addr hostp h addr using cs html mail archive date wed sep benjamin teitelbaum cs list alfred cs wisc edu subject using cs html mail archive sender owner cs list cs wisc edu please note mail archive hanging course web page http www cs wisc edu cs mail archive html general interest mail sent class list archived probably find archive useful loosely organized faq go first questions o o inet ntoa struct hostent struct addr date wed sep srinivasa narayanan cs list cs wisc edu subject inet ntoa struct hostent struct addr sender owner cs list cs wisc edu geeting questions regarding inet ntoa function hostent structure struct addr hostent structure addr structures different hostent structure list pointers structures type addr h addr list field hostent structure inet addr could thought byte value stores internet address form inet ntoa function converts internet address form dotted decimal form could read first pages chapter book stevens unix network programming get information nsp handling invalid address srinivasa narayanan subject handling invalid address siman cs wisc edu jose f siman date wed sep cdt cc cs list cs wisc edu reply jose f siman sep pm x mailer elm version pl mime version content type text plain charset us ascii content transfer encoding bit sender owner cs list cs wisc edu case client sends addr request invalid address e server return instance client vega cs wisc edu addr invalid cs wisc edu server won able translate invalid cs wisc edu server print error exit respond client special error message server respond client error message use type string fields convey error message back client e g server could set type field value indicating error condition send error message string field server exit send struct srinivasa narayanan subject send struct geery cs wisc edu andrew geery date wed sep cdt cc cs list cs wisc edu reply andrew geery sep pm x mailer elm version pl mime version content type text plain charset us ascii content transfer encoding bit sender owner cs list cs wisc edu quick question assignment said end presentation couldn simply take packet struct send integer fields wouldn network order transform network order using htonl hntos put packet structure simply send packet structure e g packet pack type htons v packet filesize htonl v strcpy packet name v sendto sd packet work correctly works m sure proper order would take care host network byte order problem assignmnet specifies packet byte field followed byte field followed string maximum length defines packet size maximum bytes send packet structure would sending data format specifications know internal structure packet machine receives data interprets packet structure different format machine sent packet packet thats sent across network match specification exactly first bytes short field next bytes data field aware goes byte packet sent doesn happen send packet structure clarification assign interface look files srinivasa narayanan subject clarification assign interface look files cs list cs wisc edu date wed sep cdt x mailer elm version pl mime version content type text plain charset us ascii content transfer encoding bit sender owner cs list cs wisc edu answers questions got need convert string user inputs command line using htons since character string short long since string sequence single byte characters integers involved user input number request type e addr filezise need expect addr filesize typed way e capital letters send addr filesize server use numbers distinguish internally user type addr filesize number like user may type lowercase addr filesize however sending type server use short integer distinguish thats byte type field packet give examples heres typical client requests look like client sol cs wisc edu addr krusty cs wisc edu first sol cs wisc edu name m c server running addr request type krusty cs wisc edu name m c want find internet address filesize request look like client sol cs wisc edu filesize testfile c filesize request type testfile c name file user requests filesize look existance file within home directory exactly case clear handout says print file name file size error file doesn exist also actually mean file home directory deep account look file every directory lets make real simple assume filename specified relative respect current working directory server stat system call providing name file got string field argument stat tcp protocol appropriate datagrams date wed sep srinivasa narayanan cs list cs wisc edu subject tcp protocol appropriate datagrams sender owner cs list cs wisc edu question using tcp protocol type datagrams sock dgram using tcp datagrams work following reason tcp protocol provides connection oriented protocol provides byte stream semantics datagrams definition imply connectionless approach also semantics different streams e g datagrams message boundaries preserved case streams apologise clear topic class nsp compiler warnings sample code date wed sep srinivasa narayanan cs list cs wisc edu subject compiler warnings sample code sender owner cs list cs wisc edu note sample programs compile sample client server programs wall option see lot warnings saying implicit declaration function means appropriate header files functions included try avoid warnings including appropriate header files assignment man pages system call library function usually specify files included nsp assignment deadline date tue sep srinivasa narayanan cs list cs wisc edu subject assignment deadline sender owner cs list cs wisc edu deadline assignment wednesday september apart code script output also need hand executables electronically give instructions separate mail thanks nsp besaw sample client server code available date mon sep srinivasa narayanan cs list cs wisc edu subject besaw sample client server code available sender owner cs list cs wisc edu one student asked sample client server code could compile run see stuff works made sample client server besaw tutorial available cs public assign could use following commands get client server executables gcc wall client c lsocket lnsl o client gcc wall server c lsocket lnsl o server could run server server sample port able use run client follows client xxx xxx name m c server running e g sol cs wisc edu whatever type client displayed server line line bugs code appears tutorial fixed however cannot guarantee full correctness seems work well tried anyway give feel assignment nsp
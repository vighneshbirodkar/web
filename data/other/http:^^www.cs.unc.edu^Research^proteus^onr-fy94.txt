date tue jan gmt server ncsa last modified wed sep gmt content type text html content length prototyping system parallel distributed applications prototyping system parallel distributed applications table contents principal investigator productivity measures summary objectives approach detailed summary technical progress transitions dod interactions software hardware prototypes list publications invited contributed presentations honors prizes awards received project personnel promotions obtained project staff misc hypermedia url keywords revised wed sep nyland cs unc edu principal investigator pi name allen goldberg pi institution kestrel institute pi phone number pi fax number pi e mail address goldberg kestrel edu pi url home page http kestrel edu pub mosaic kestrel html grant title prototyping system parallel distributed applications grant contract number n c r number reporting period pi name jan prins pi institution university north carolina pi phone number pi fax number pi e mail address prins cs unc edu pi url home page http www cs unc edu grant title prototyping system parallel distributed applications grant contract number n c r number reporting period pi name john reif pi institution duke university pi phone number pi fax number pi e mail address reif cs unc edu pi url home page http www cs duke edu grant title prototyping system parallel distributed applications grant contract number n c r number reporting period productivity measures number refereed papers submitted yet published number refereed papers published number unrefereed reports articles number books parts thereof submitted published number books parts thereof published number project presentations number patents filed yet granted number patents granted software copyrights number graduate students supported full time unc duke number post docs supported full time number minorities supported summary objectives approach provide prototyping based design methodology supports architecture independent development parallel distributed systems proteus system provides language tools supporting methodology work addresses fundamental problem naive implementations abstract models parallel computation lead impractical implementations whereas machine specific models lead intractable analysis even simplest programs goal work provide tools exploring design space parallel application process prototyping successive refinement detailed summary technical progress development object oriented mechanisms task parallel communication synchronization significant progress made language design development extensible foundation explicit task parallelism communication shared object model access shared state controlled object methods class directives constrain mutual exclusion methods gpr predefined classes single assignment objects synchronize producer consumer together provisions private state barrier synchronization allow expression wide range parallel computing paradigms key providing expressive uniform vehicle refinement development methodology performance prediction computing model varies level refinement development improved computational model logp hmm support early analysis program efficiency resource utilization developing methodology performance predicition uses program refinement progresses increasingly detailed parallel computational models accuracy confidence assessment thus increases level architectural detail incorporated program increases support assessment multi paradigm programs different models used analysis code segments following different paradigms vram data parallelism logp message passing suitable instrumentation attach model program time support accurate modeling costs cache o developing improved performance models e new hybrid model parallel computation logp hmm model lmr fills gap hierachy refined models extending network model logp sequential hierarchical memory model hmm completion release dtre transformation system refinement subsystem proteus called dtre completed system supported work transformation data parallel proteus programs vector models new system called specware significantly generalizes dtre developed addition supporting refinement generation c lisp code specware powerful category theory based operations manipulating diagrams directed graphs logical theories logical theories used hierarchically define partial specifications architectural descriptions refinements software artifacts operations used compose refine instantiate components build systems preliminary version specware released participation hiper d geoserver demonstration activity november participated community wide prototyping experiment defined hiper d program nswc part next generation aegis development effort using proteus developed series prototypes explore design approaches geometric classification problem initial design elaborated reflect functional structure radar system interactions system operator another prototype explored designs system demanding high traffic situations using sophisticated parallel algorithm prototypes executable using proteus interpreter rapidly developed judged contributed useful knowledge design options nswc external review participating prototech languages experiment assigned highest overall score proteus haskell efforts fy plans full development integrated task data parallel programming notation elaboration design model concurrent systems based successive refinement support resource requirement estimation using multiple refined performance prediction models development specware including integration proteus unified single step translation data parallel applications vector execution application development assist prototyping methodology description notational formalism software support real time educational simulations participation hiper d advanced geoserver prototyping activity transitions dod interactions duke unc collaborating john board e e department duke university j hermans biochemistry department unc investigation implementation parallel fast multipole algorithms fma molecular dynamics simulations ncsc unc recently awarded year m nih grant development implementation parallel algorithms molecular dynamics use proteus integral component effort medical imaging group unc using proteus develop sophisticated parallel algorithms segmenting medical images physical objects fma code examined others duke university cmu brooklyn polytechnic guide lead implementations release specware mitre motorola air forces institute technology rome labs motorola specifying eventually implementing kernal crypto system using specware afit rome labs evaluating specware use within research programs software engineering mitre evaluating specware technology specware described requires unix x environment refine available low cost educational institutions poc maria pryce pryce kestrel edu software hardware prototypes prototype system translation proteus programs executable parallel code developed enhancement proteus interpreter continues list publications lee blaine et al specware user manual kestrel institute technical report june rickard e faith doug l hoffman david g stahl uncvl university north carolina c vector library technical report may allen goldberg peter mills lars nyland jan prins john reif james riely specification development parallel applications using proteus system proc dimacs workshop specification parallel algorithms allen goldberg jan prins john reif rickard faith zhiyong li peter mills lars nyland daniel palmer james riely proteus system development parallel applications technical report unc ch may published prototech compendium allen goldberg richard jullig y v srinivas refinement specifications kestrel institute technical report oct jullig r srinivas y describing software architectures formally case study using kwic kestrel institute technical report kes u kestrel institute april jullig r srinivas y diagrams software synthesis proceedings th knowledge based software engineering conference ieee chicago il september gary levin lars nyland introduction proteus version technical report unc ch models resource metrics parallel distributed computation z li p mills j reif appear th hawaii international conference system sciences hicss parallel algorithms software technology track maui hawaii january p h mills l nyland j f prins j h reif software issues high performance computing framework development hpc applications computer science agendas high performance computing u vishkin ed acm z li p h mills j h reif models resource metrics parallel distributed computation duke technical report submitted publication daniel w palmer dpl data parallel library manual technical report unc qian x l allen goldberg referential opacity nondeterministic data refinement appear acm letters programming languages systems c wang allen goldberg kitp automated inference system program analysis proceedings conference automated deduction nancy france june invited contributed presentations work efficient parallel implementations sparse grid based computations jan prins workshop parallel algorithms unstructured dynamic problems dimacs rutgers nj proteus system development parallel software jan prins parallel software engineering crda griffiss afb rome ny targeting multiple virtual machines proteus system jan prins workshop parallel virtual machine concepts griffiss afb rome ny practical parallel algorithms maspar mp jan prins u naval academy annapolis md proteus system development parallel algorithms jan prins workshop parallel algorithms dimacs rutgers nj proteus solution geometric region server lars nyland computer sciences corp dalgren va parallel implementations molecular dynamics simulations jan prins computational biology colloquium series ncsc rtp nc social potential fields distributed behavioral control autonomous robots john reif h wang workshop algorithmic foundations robotics wafr san francisco february distinguished lecture predictive computing emerging paradigm efficient computation john reif school computer science april cmu role program transformations proteus system jan prins ifip wg working conference programming environments massively parallel computing ascona switzerland models control primitives resource metrics parallel distributed computation j reif invited keynote presentation th international parallel processing symposium ipps cancun mexico april dynamic parallel tree contraction john reif r tate th annual acm symposium parallel algorithms architectures spaa cape may nj june pp o log n time efficient parallel factorization dense sparse separable banded matrices john reif th annual acm symposium parallel algorithms architectures spaa cape may nj june predictive computing emerging paradigm efficient computation john reif dartmouth institute advanced graduate studies dags july hanover new hampshire honors prizes awards received project personnel promotions obtained jan prins promoted tenured associate professor project staff allen goldberg principal investigator kestrel institute jan f prins principal investigator unc john h reif principal investigator duke university stephen westfold senior scientist kestrel institute peter h mills research associate duke university lars nyland research assistant professor unc zhiyong li graduate student duke university rickard faith graduate student unc daniel palmer graduate student unc james riely graduate student unc bill yakowenko graduate student unc madelyn mann secretary unc kenneth robinson secretary duke university misc hypermedia proteus system home page overview publications software examples demonstrations personnel descriptions found quad chart three versions html hypermedia k bytes macintosh powerpoint k bytes postscript k bytes keywords prototype program development parallel programming program transformation fast multipole algorithm fma
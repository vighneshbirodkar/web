date tue nov gmt server ncsa last modified tue jan gmt content type text html content length cs parallel real time computation url http www cs hmc edu keller cs html harvey mudd college spring computer science parallel real time computation course personnel instructor robert keller olin p m mtuwth appt keller muddcs x secretary nancy mandala olin m f nancy muddcs x cs intern account problems etc tbd beckman tbd muddcs x catalog description characteristics applications parallel real time systems specification techniques architectures languages design implementation credit hours prerequisites prerequisites cs credit hours texts michael j quinn parallel computing theory practice second edition mcgraw hill selected references papers provided course requirements two three programming assignments parallel machines well written assignments participants present short tutorial lectures chosen topic participants choose project instructor approval report results class cs topic outline mq denotes reading pages quinn book motivation parallel computing mq response time user concurrency throughput fault tolerance logical structuring example parallel applications expression evaluation matrix computations database search sorting measuring analyzing parallel program performance serial vs parallel time speedup efficiency generic models theoretically motivated models pram parallel random access machine mq dag directed acyclic graph model wt work time model jaja bsp bulk synchronous parallelism architecturally motivated models interconnection networks mq mimd multiple instruction stream multiple data stream simd single instruction stream multiple data stream spmd single program multiple data language motivated models dataflow systolic arrays functional programming logic programming goal trees object oriented programming architecture studies mq simd architectures connection machine icl dap masspar mimd architectures shared memory sequent symmetry cray d partitioned memory paragon ncube numa non uniform memory access machines bbn butterfly cedar clusters architectures dataflow graph reduction vliw long instruction word machines systolic arrays neural networks programming low level review processes communication rendezvous unix process management barrier synchronization mach higher level linda futures apl like operators language issues parallel decomposition dataflow analysis grain size trace scheduling languages mq concurrent functional languages sisal multilisp fortran high performance fortran ada x concurrent c c lisp concurrent prolog strand pvm mpi mapping scheduling mq system issues scalability isoefficiency metric kumar cache coherence combining networks load balancing deadlocks fault tolerance algorithm studies elementary mq matrix multiplication mq fast fourier transform mq solving linear systems mq sorting mq parallel search mq graph algorithms mq combinatorial search mq applications case studies finite elements parallel logic programs monte carlo traveling salesman problem many body simulation theorem proving real time systems characteristics examples real time systems timing performance issues handling time delays timeouts deadline specification scheduling language requirements table contents parallel computing theory practice introduction pram algorithms processor arrays multiprocessors multicomputers parallel programming languages mapping scheduling elementary parallel algorithms matrix multiplication fast fourier transform solving linear systems sorting dictionary operations graph algorithms combinatorial search additional references joseph jaja introduction parallel algorithms addision wesley guy e blelloch vector models data parallel computing mit press vipin kumar et al introduction parallel computing design analysis algorithms benjamin cummings geoffrey fox et al parallel computing works morgan kauffman gregory pfister search clusters prentice hall worldwide web links supercomputing parallel computing research groups rcs id cs html v keller exp keller
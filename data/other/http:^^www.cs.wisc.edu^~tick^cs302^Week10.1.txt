date wed dec gmt server ncsa content type text html last modified fri nov gmt content length cs section lecture notes week lecture notes week part topic heaps text none notes heaps remember ve seen binary search represented tree e becomes middle search starts need search left part list new middle need search right part though middle tree one way array represent tree however another type tree array represent called heap two things required order tree heap must complete tree every node must two children except last one one two unique complete binary trees size look like o o o o o o o o o o o o o o o o o o o o o o o o o o o o nodes must satisfy heap property dramatic chord node heap value node must value children heap whereas heaps represented arrays elements heap read left right top bottom stored ll referring array list getting around heap eventually ll need talk obtain sorted list heap first though need talk important functions help us move around heap change values inside finding related nodes note list left child found list list left child list general given element n left child list n list n right child list n list n parent list n list n inverse finding child heapify every cs invents word purpose heapify ties fact every complete binary tree heap worry whether heap property satisfied heapify takes node moves tree node satifies heap property okay begin won moved suppose wanted heapify node list chose chose would top one children heap property would still fail node continue follow located list heap property still fails need switch get note still heap problem nodes path satisfy heap property buildheap way providing heap property path tree need able paths true paths tree heap re essentially going call heapify within loop won need call heapify bottom nodes usually called leaf nodes nodes children re far go start last node children list example general heap n elements node list n heapify node heapify node list list repeat reach top tree list example heapify node heap heapify node heap heapify node ecompasses moves gets switched start n work backwards suppose re given heaps h h node x tree x h h violate heap property one place x switch x top h x fine h fine h may fine let look h x h h h h h subheaps re back argument x violates heap property move h h exactly heapify node violate heap property always x heapify finds right spot x even x isn problem nodes fine heap work back n build heaps lower parts tree use build heap higher parts tree example made heap tree starting list heap tree starting list used two subheaps build heap tree starting list heapsort heaps give us completely sorted array give us quick method consider following heap take last element array switch first element largest element array end list decrease heap size list list heap list ignored since ve already found largest number want include heap anymore heapify list ll get new heap based first elements list repeat steps heap empty next time thru example switch decrease heap size heapify top largest elements order back list re done ll entire list sorted order copyright copy jeff lampert tick cs wisc edu last modified november
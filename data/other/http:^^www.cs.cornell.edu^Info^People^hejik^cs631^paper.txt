mime version server cern date sunday dec gmt content type text html content length last modified saturday dec gmt orwell removal tracked objects digital video orwell removal tracked objects digital video alfred hong heji kim lin hsian wang department computer science upson hall cornell university ithaca ny us http www cs cornell edu info projects zeno rivl rivl html table contents introduction background information specifics object tracking hausdorff tracker background reconstruction object segmentation evaluation related work extensions references introduction object tracking sequence images provide base multitude digital video processing applications removal object scene although numerous video processing editors available object tracking removal otr mostly manual process using existing object tracking feature rivl implement semi automated application allows user specify remove object reconstruct background result new video sequence work primarily focuses algorithms domain stationary backgrounds single moving object addition otr also extend work segment tracked object background use resulting segmentation variety video processing effects overlaying tracked object top different sequence resulting application ideal test bed experimenting various otr segmentation algorithms reconstruct background use different techniques segmentation illustrated diagram figure orwell otr segmentation overview rest paper organized follows section provides background rivl hausdorff tracking algorithm section discusses vision algorithms employed ends section reviews work done section concludes current status future research directions key words object tracking hausdorff distance object removal segmentation background reconstruction image filtering background information rivl rivl resolution independent video language video audio first class data types jonathan schwartz implemented rivl tcl tk extension multimedia processing high level operators used rivl independent video format resolution provides necessary infrastructure test ideas rivl genc rivl genc generates c code rivl functions need perform low level image processing routines already included rivl library implementations median mean filters use functions generated rivl genc pixel level computations hausdorff tracker hausdorff tracker feature based object tracking system continuous sequence images model tracked object represented binary edge map produced applying canny edge operator smoothed version gray level image input image taking advantage fact motion object roughly affine transformation two consecutive frames algorithm matches possible translations scales model specified search window shown red dotted box figure generally best match points overlap transformation model since use best match model next image tracker begins wander results deteriorate quickly figure hausdorff tracking algorithm explained specifics section discusses implementation algorithms accessible orwell editor first subsection discusses object tracking second subsection discusses background reconstruction algorithms assuming stationary camera third subsection discusses segmentation algorithms object tracking hausdorff tracker tracker rivl returns scale translation coordinates image performance tracker depends setting correct parameters search e size search window scaling factors forward backward distance limits allowed dissimilarity match must make trade laxness constraints processing time required track object hausdorff tracker also works better larger images background reconstruction need background replace tracked object original sequence possibly segment object experiment three different approaches background reconstruction temporal median filter temporal mean filter physical space search first two approaches background reconstruction temporal mean filter temporal median filter temporal mean filter tmef tmef technique computes mean pixel value taking arithmetic average whole frame sequence assigns result pixels background frame technique averages tracked object scene possible blurring effect implement filter averaging rgb values independently temporal median filter tmdf tmdf builds background frame computing median pixel value sorting images video sequence techniques relies assumption portion tracked object appears one particular location less half image frames implement filter finding frame median using gray level value reconstructing background using corresponding rgb values temporal filters pixel level operations wrote rivl genc rivl genc allows twenty frames maximum entered input function medians medians median could implement true median function entire video sequence instead compute median several different samples sample composing twenty frames set equal intervals allow user decide best result physical space search physical space search finds frame bounding box tracked object overlap one currently processed frame part background needed replace object one occupied object previous frames using assumptions motion continuity initially search background current image near frame found background previous frame way avoid comprehensive search initial frame must search entire sequence possible background replacements although prefer closest frame contains background also want find multiple scenes background resides case another moving object moved background also possible partition bounding box smaller blocks search background pieces assume single moving object sequence possible use one frame object removed background reconstructed background entire sequence however due shifting lighting levels desirable reconstruct scene every frame every block frames figure shows result background covered subject head reconstruced figure sequence illustrating object tracking background reconstruction object segmentation image segmentation segmentation separating tracked object background one core problems vision yet adequately solved unconstrained settings explore motion differencing second differencing background subtraction classical problem figure segmentation methods image differencing motion differencing applies threshold two consecutive images produce binary image indicating regions motion extend motion differencing use three consecutive frames second differencing perform binary operation difference image first two frames last two frames segment moving object middle frame moving objects clearly segmented exists less overlap moving object consecutive images choose three consecutive frames sufficient motion figure segmentation methods b background subtraction background subtraction involves application threshold background image containing moving object techniques works well used faithful copy background evaluation figure input video sequence used video sequence frames one inputs test images recorded motion jpegs sun microsystems camera using parallax board mean median figure temporal filter results example images results temporal filters reconstructed background image mean filter slightly visible blurring effect caused moving object number frames video increases effect become negligible process mean filter smoothing function sharpening function rid shadowing effect figure segmentation results background subtraction choose eyeball test metric commonly used many vision researchers determine quality segmentation background subtraction produced best segmentation smoothest edges least number holes within object motion differencing performed worst since tends give irregular outline motion includes portion background belongs object previous image current image effect appears undesirable white outline around object right pair images second differencing method shows improved results regular motion differencing still solid background subtraction second differencing advantage background subtraction since reconstructing background necessary sort post filtering necessary cases fill holes smooth edges figure segmentation results second differencing motion differencing set two fold goal one object removal object segmentation overall quality object removal depends accuracy hausdorff tracker fidelity reconstructed background feel accomplished otr long background exist less success segmentation leave much room future improvements related work extensions multimedia vision highly experimental areas embodying numerous possibilities although tracking object segmentation active ares research vision appears virtually established work automating object removal using background reconstruction extend project along orthogonal directions solve object removal moving camera handle zooms pans handle subtle problems object removal object shadow reflection etc integrate orwell full video editor well include functionalities allowing tracker backtrack reset object position refine segmentation morphological operators references tracking non rigid objects complex scenes proceedings fourth international conference computer vision j j noh w j rucklidge jain kasturi schunck machine vision mcgraw hill ousterhout john k tcl tk toolkit addison wesley massachusetts swartz jonathan smith brian c rivl resolution independent video language submitted tcl tk workshop july toronto ca l teodosio w bender salient video stills content context preserved proc acm multimedia pp
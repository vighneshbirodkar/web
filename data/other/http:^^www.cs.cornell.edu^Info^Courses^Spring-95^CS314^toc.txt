mime version server cern date monday dec gmt content type text html content length last modified monday mar gmt cs lectures table contents back cs home page cs lectures see symbol document press get postscript file document little cleaner html printout sections document introduction computer systems cpu organization programming procedures recursion stacks assemblers linkers loaders interrupts o introduction logic design topic introduction computer systems readings cs pascal really works handle complexity courses fit intro design design strategies design documentation anatomy computer history modern computers generations computers topic cpu organization readings cpu design problem registers control unit program machine language put data memory implementing loops arithmetic logic unit alu register transfer languages microprogramming summary topic programming readings architecture registers data sizes memory layout instructions general instructions assembler directives instructions assembler data movement instructions arithmetic instructions logic instructions control addressing immediate addressing data register direct addressing address register direct addressing address register indirect addressing address register indirect increment decrement addressing address register indirect displacement addressing address register indirect index displacement addressing program counter displacement addressing program counter index displacement topic procedures recursion stacks readings topic writing absolute value function k assembler solution registers jmp solution storing return address register problems recursion introduction stacks solution use stack return address jsr ret instructions saving state function prologs epilogs prologs another example stack frames using stack frame pass parameters using stack frame local variables parameter order important detail accesing parameters problem solution frame pointers frame pointers detailed example subroutine linkage instructions passing arguments reference case study memory management mac virtual memory page tables summary topic assemblers linkers loaders readings topic preparing assembly program execution machine code example clr instruction example add instruction example move instruction assembler pass build symbol table pass generate code build rld structure object module linking programs linker loader summary topic interrupts o readings topic happens something wrong fetch decode execute processor call service routine supervisor versus user mode exception processed k writing exception handlers tracing breakpoints operating system calls reset input output interrupts properties peripheral interrupts summary topic introduction logic design readings digital systems gates truth tables boolean algebra combinatorial sequential circuits sequential circuits physical level choosing technology making gates ttl making gates ttl cont making gates ttl cont gates ttl packages fan fan physical logical level boolean algebra theorems boolean algebra proving boolean equations generating boolean equations truth tables canonical form canonical form minimal form karnaugh maps rules thumb finding minimal expressions mapping real problems boolean equations implementing sop using nand gates implementing sop using gates multiplexers another silver bullet programmed logic array pla programable read memory prom summary back cs home page
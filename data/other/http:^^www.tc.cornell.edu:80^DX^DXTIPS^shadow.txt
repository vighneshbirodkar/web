date sun nov gmt server ncsa content type text html last modified wed jul gmt content length shadow tip making shadows shadows powerful perceptual cues d relationship objects scene dx renderer produce shadows possible generate acceptable shadows modifying colors individual vertices objects scene macro described performs following steps obects shadowed transformed coordinate system light places arbitrary direction infinity depth buffer calculated viewpoint light depth buffer turned volume data set stacking way overlaps vertices original objects volume depth buffer mapped onto original vertices new data depth buffer value vertex compared depth vertex vertex farther light value given depth buffer dimmed objects modified colors transformed back world coordinates approach sort vertex mapped z buffer method limitations accuracy shadows depends density vertices object objects vertices jaggie shadows thrown onto resolution depth buffer must high get acceptable shadows compute module cannot resolve transform objects objects built using rotate translate scale transform modules shadow correctly unless use calculate macro apply transforms module uses lot memory runs well machine gbyte memory macro dialog box shown explaination inputs object input carries objects shadowed depth resolution input resolution desired depth buffer shadow factor amount dim shadowed vertex light pos direction light infinity depth ingore input threshold self shadowing set zero cause surfaces dim object scale input overrides automatic conversion object size camera coordinate space offset input allows objects move along z axis light download test program click also need configuration file test program layout shown example output program shown download macro click another example shown protein ribbon representation casting shadows two planes see also cornell theory center examples visualization work ctc cs final projects spring cornell theory center last updated november bruce land
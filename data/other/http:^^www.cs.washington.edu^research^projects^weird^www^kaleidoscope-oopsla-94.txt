date tue dec gmt server ncsa content type text html implementing constraint imperative programming languages kaleidosope virtual machine implementing constraint imperative programming languages kaleidosope virtual machine authors gus lopez bjorn freeman benson alan borning published proceedings acm conference object oriented programming systems languages applications portland oregon october pages abstract constraint imperative programming cip languages integrate declarative constraints imperative state destructive assignment yielding powerful new programming paradigm however cip languages difficult implement efficiently due complex interactions two donor paradigms neither virtual machines classical object oriented languges existing constraint languages suitable implementing cip languages assumes purely imperative purely declarative computation model developed new virtual machine cip languages k machine imperative machine incremental constraint solver constraint based rather value based data store virtual machine allows user defined constraints defined using constraint constructor definitions cip analog method definitions similar methods constructors able reference variables indirectly many levels pointers k machine maintains relations objects presence state change indirectly referenced objects k machine capable supporting wide variety cip languages including recent kaleidoscope click get postscript file return constraints home page
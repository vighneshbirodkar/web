mime version server cern date monday dec gmt content type text html content length last modified tuesday nov gmt overview horus project overview horus project five years ago kenneth birman robbert van renesse started activity ultimately lead design horus outset project perceived redesign isis group communication system isis although successful unix specific monolithic hence inflexible used protocols subsequently improved upon last five years horus evolved beyond initial goals becoming sophisticated group communication system emphasis properties considerably different parent system perhaps best general overviews horus found april issue communications acm may issue scientific american many additional papers available online technical reports area readers already familiar group communication best understand horus general purpose communication architecture also good job supporting sorts process group applications isis became popular broadly horus flexible extensible process group communication system interfaces seen application varied conceal system behind conventional interfaces actual properties groups used membership communication events affect group matched specific needs application application contains multiple subsystems differing needs create multiple superimposed groups different properties resulting architecture unique completely adaptable groupware developer systems programmer pays properties specifically desired often use horus introduce reliability replication completely transparent manner users wish treat horus prebuilt system take advantage virtual synchrony model introduce replication coordination fault tolerance applications horus suitable building high performance groupware applications working real time applications notably area telecommunications switch management several interfaces available direct use horus including toolkit named hots oriented towards c programmers users wish develop new groupware protocols horus viewed group communication environment rather collection prebuilt groupware solutions unix independent permits use several programming languages c c ml python single system horus protocols structured like stacks lego blocks hence new protocols developed adding new layers recombining existing ones dynamic run time layering horus permits application adapt protocols runs environment finds much research issues associated developing layered groupware protocols time horus layers become much simpler expected consequently lend automatic verification especially true horus layers coded ml well suited analysis using nuprl system also cornell research project combining simple layers complex semantics supported existing horus protocol layers include implementation virtually synchronous process groups technique permitting consistent fault tolerant data replication well protocols parallel multi media applications considerable recent work done protocols secure group computing real time applications moreover horus point communication protocols upgraded underneath running application without need stop restart application although layered protocol architectures often carry performance penalty horus includes protocol accelerator permits demonstrate excellent performance horus supports corba request broker fault tolerant multi media toolkit fault tolerant www server cooperative text editor theoretical side project contributed significant body fundamental results overall areas distributed fault tolerance consistency security private communication group communication systems current work includes study properties proved composed stacks consisting multiple layers basic theoretical work virtual synchrony study systems combine real time logical consistency properties looking future believe horus well matched replication needs emerging web applications caching web proxies cornell students implemented prototypes systems successfully horus used java communication protocol appropriate system management complex large scale internet settings likely application areas include transparent fault tolerance options limited classes applications security system monitoring database replication horus software available use research laboratories commercial use technology possible late early arrangement stratus computers inc project funding arpa played significant role progress made horus project providing long term funding office naval research contract n j horus research effort grateful ibm research gte siemens corporation stratus computer inc support effort comments werner vogels
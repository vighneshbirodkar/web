date mon dec gmt server ncsa content type text html cse homework assignment cse principles digital systems design carl ebeling fall homework distributed monday oct due wed nov class work together teams homework please look problems individually first sketch possible solutions questions meet together formulate solutions assign writeup one team members meet collate review solutions hand whole team responsible understanding solution problems problems involving verilog code hand code simulation log least part really long leiserson leiserson let say set n clients requesting service time one service use round robin approach decide next gets serviced n clients put order c c n two bits associated client first bit indicates whether client requesting service second bit indicates whether client last client serviced choosing next client service start last client serviced find next requesting client design circuit based parallel prefix implement round robin protocol assume get end list clients something happens restart operation beginning define operator show associative sketch resulting circuit extra credit solve problem place clients circle start end instead list show conditional sum operator defined class associative design conditional sum adder bit adder write verilog program adder simulate show works correctly show delay carry select adder o n root n take sorting circuit homework turn pipelined sorter inserting appropriate registers model delay using unit delay model calculate clock period simulate circuit show works correctly design fast accumulator circuit adds list bit numbers presented sequentially one per clock cycle circuit two inputs data start two outputs sum valid start asserted cycle new list numbers starts valid asserted cycle sum last list numbers valid may take one cycle list numbers entered generate final sum implement circuit using verilog using unit delay model model circuit delays simulate circuit showing fast works ebeling cs washington edu
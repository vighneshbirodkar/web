date wed nov gmt server apache content type text html content length last modified tue aug gmt cs syllabus fall cs syllabus fall use syllabus syllabus contains information necessary succeed cs specifically information course course requirements information covered extensively class responsibility read understand tentative schedule lecture topics readings examinations check sheet lab assignments suggestion write name phone number front syllabus gets misplaced returned readily assignment check sheet record assignment completions lose course description procedures computer science designed students intend major computer science areas strong emphasis computer programming prior knowledge computers required course challenging one demands self discipline hard work student although computer science new course offered many years content undergone extensive revision past years revision response new approach computer programming known object oriented programming object oriented programming fast becoming accepted methodology design development today large complex software systems products yet text books emphasize object oriented programming first computer science course written text first course object oriented programming sense new approach experimental many computer science teachers skeptical cautiously optimistic developing approach associated materials prove effective providing foundation object oriented program design development throughout computer science curriculum sure discover things want change gain experience new approach anxious receive constructive feed back students concerning text programming assignments examples order selection topics aspect class many students enrolling course done little lot programming pascal programming language however unlikely many students experience object oriented programming little experience computers programming may feel disadvantage compared others programming experience students situation well experience little difficulty others experience significant difficulty frustration even students programming experience may struggle try hard pace course beginners let experienced programmers divert lectures discussions toward advanced obscure topics trouble understanding lectures reading programming assignments seek help early often tas lab help instructor help attend help section help sections cs scheduled semester times locations posted lab plan attend least one help section week teaching assistant knows pascal well help design development coming assignment answer questions lectures purpose class lectures lend structure class tie concepts together instructors also answer questions elaborate concepts however primary responsibility education learning resources include weekly help sessions given lab ta textbook computers borland pascal programming environment lab much learning take place computer lab texts addition syllabus need buy text first course object oriented programming theodore norman text yet published commercially available packet bookstore grading points assigned program exam programming assignments accounting grade examinations exams including final exam count final grade final grading awarded straight percentage basis according following scale b d c d b c d b c e cs exam schedule fall exam testing center exam testing center final exam classroom tests open book open notes testing center heber j grant building hjgb testing center hours may vary semester semester usually similar following monday thursday pm friday pm saturday sunday closed accurate hours call testing center sometimes gets busy lines form go early allow plenty time doors close hour closing time cs tentative lecture schedule reading outline week topics text reading algorithms computers ram organization binary number system chaps machine language assembly language high level languages compilers microsoft windows borland pascal ide introduction pascal objects methods syntax turtle class chap variable constant data types classes objects variables chap variable declarations methods operations integer arithmetic assignment statements flow control repetition statement nested loops chap method calls function methods conditional expressions statement boolean expressions repeat statement conditional statements turbo debugger st exam extending pascal inheritance writing methods type declarations chap qualification execution method calls parameters real arithmetic standard functions enumerated types ordinal types strings standard string functions procedures subscripting strings chap string expressions reading string data user char type displaying numbers event driven programming event loops units unit interface part chap implementation part edit windows text files files file type output files input files sets chap o errors case statement upcase standard function filebox object nd exam defined subprograms programmer defined procedures chap value parameters variable parameters parameter passing programmer defined functions subprogram call syntax procedure call syntax function call syntax communicating subprograms using global variables nested subprograms scope rules arrays subrange types array declarations chap two dimensional arrays anonymous types assignment compatibility anonymous types parameter compatibility models arrays loops arrays records objects fields data members method members chap arrays records program design development top structured design chap object oriented design fundaments algorithms searching sorting chap review final exam lab materials location tmcb hours schedule posted lab tmcb typically hours m p m monday friday m p m saturday orientation lab orientations held lab hour hour pm wednesday thursday friday must attend one orientation sessions know computers work lab procedures complete first lab assignment equipment lab currently several dozen ibm compatible pc linked together file server disk system using novell networking equipment software diskettes need least one double sided double density floppy diskette save programs buy one bookstore better still buy two one backup copy bring orientation critical yet however need assignments policies lab policies change somewhat semester semester obtain current copy lab policies lab assistant however following rules always force asked leave break accessing copying displaying pornographic material food drink allowed unplug cables remove computer covers problems get help lab assistant games allowed computers time word processing lab assistants give first priority students assignments checked program ready signed hold syllabus signal ready illegal copying software help help sections cs scheduled semester times locations posted lab plan attend least one help section week teaching assistant knows pascal well help design development coming assignment answer questions sessions important help gain problem solving skills understand write assigned programs lab lab assistants check assignments answer brief questions program syntax help using computers ta write programs debug program logic whole point lab assignments learn tasks commonly asked questions questions repeatedly asked cs see answer question review previous pages talk instructor lab assistant way obtain extra credit time extra credit work time assignment correctly okay study someone else yes group study helpful however let someone else write programs unable pass tests makes exams individual teachers standard exams used sections cs exams closely parallel programming assignments text chapter exercises happens program partially finished lab closes leave lose won lose save floppy disk work next time re lab good idea save program periodically work even re going leave lab programming errors cause work station hang must power get working happens lose everything since last save borland pascal ide provides automatic periodic saving program editing take advantage feature check auto save editor files box preferences dialog environment option options menu program finished time due ten late days may use without penalty days could used one assignment one day ten assignments combinations late days used lose point day subsequent assignments late ever allowed play computer games never absolutely even re person lab play around machine see use yes means try entering running example programs text modifying programming assignments ve passed already diskette inch disk fine using someone else disk make absolutely sure finished disk formatted ms dos later re buying disk double sided double density floppy disk case still need purchase two computer science materials cards lab computer lab currently using microsoft windows borland pascal objects ibm compatible pcs want use computer ibm pc compatible compaq etc copies microsoft windows borland pascal objects also need get copy cs turtles units one lab tas must still bring programs lab pass non ibm compatible computer pascal compiler use learn things pascal won windows cs turtles units won able write programming assignments best way schedule time lab single block separate hours people best lab hours spread week people get tight sit long terminal recommend design write programs paper going lab enter debug classes held week exams yes always sure miss exams plan take exams times scheduled rare cases make tests given need help three things help sections schedule posted lab see instructor office hours individual assistance may arranged hire tutor tutoring service run student academics office free lance tutors often advertise bulletin boards daily universe share disk someone recommended need disks help sections really help yes useful helping students understand complete lab assignments students attend usually positive evaluation help sections one interesting observation failing students almost never regular attendees help sections get class feel uncomfortable large classes reason wary large classes studies show unless class small less dozen students size class correlation amount learning takes place much learning take place lab anyway best way learn pascal programming language write many programs go cs assignment check sheet fall go created aug updated mon apr scott mccosh send comments webmaster www cs byu edu
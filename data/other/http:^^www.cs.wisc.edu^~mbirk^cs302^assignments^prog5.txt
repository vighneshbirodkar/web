date mon nov gmt server ncsa content type text html last modified tue oct gmt content length program program cs section ta michael birk assigned tue due tue assignment write program print simple histogram bar chart based contents string chart shows many letter alphabet appeared string example run string program four program print following output f g m o p r u letters scale factor note letters counted punctuation spaces ignored also upper lower case letters distinguished chart shows number occurrences letter numerical visual form bunch asterisks basic technique create array integers hold counts letter array elements one letter alphabet first element array hold number second element holds number b achieve mapping letters z numbers following functions int char int char ch return tolower ch char int char int n return n functions rely fact characters really integers compiler translate one automatically program go entire input string character character letter add count stored element array corresponds letter requirements assignment must highly recommend get basics working first work actually print simple histogram counting total number characters must count total number letters print information see example scaling bar chart character occurs times must scale bars chart longest bar printed stars also print scaling factor example input string aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbb ccccccccccccccccccc d eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee fffffffffffff gggggg program print b c d e f g letters scale factor scaling factor frequent character occurs times appears say times scaling factor would would multiply scaling factor frequency character compute number stars print using functions program must properly structured using functions means different tasks subproblems performed different functions information passed functions via parameters return value help push right direction regard instituting rules assignment global variables may used variables must defined within function definition function may contain statements variable definitions cin cout etc lot fewer re sure re complying rule ask function may contain one loop course call another function loop use simple counting loops simple loops addition rules always apply must use proper indentation indent body composite statements etc line curly braces aren sure follow book guideline functions must documented using comments comments explain function meanings parameters return values reading input file eventually get everything else working must change program get input file ask user name file read file use input fortunately really easy since providing function reads entire file single string function following prototype string read file string filename function reads file filename returns contents single string string may contain many lines separated special newline carriage return characters program ignore like non letters error example file didn exist returns empty string read file function defined object file r public mbirk readfile obj means add project window project window contain three files prog cpp r public mbirk string obj r public mbirk readfile obj hand hand source code well output program following test cases note hand test cases test test also couple test cases result use see implementation working hand test output test output mbirk cs wisc edu
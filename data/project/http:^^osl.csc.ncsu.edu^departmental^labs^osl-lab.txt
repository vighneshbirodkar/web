date tue nov gmt server ncsa last modified mon jan gmt content type text html content length operating systems laboratory organization tools operating systems laboratory organization tools carol miller html william hicks earl shannon table contents introduction operating system development tools xcc download odt busers xinu program development example troubleshooting introduction operating systems laboratory computer science department provided students enrolled upper level undergraduate graduate operating system courses document contains description computers lab software development tools available students advanced classes laboratory configuration operating systems laboratory often referred osl computer science department located daniels lab vital resource two undergraduate courses csc csc graduate level real time operating systems course csc computers laboratory csc consist single sun sparc five sun xinu clients named friedpie fishstick onionring tatortot frenchfry hushpuppy sparc workstation known hushpuppy student accounts located xinu software development done hushpuppy uses sunos operating system version unix system v release extensions connected campus network via ethernet uses tcp ip communicate machines hushpuppy also reached using hayes compatible modem ncsu campus dataswitch university terminal servers computer systems via internet using address hushpuppy csc ncsu edu plain hushpuppy currently ncsu internet domain telnet hushpuppy also click sunos many commands found campus machines aza eos workstations garfield running digital equipment ultrix familiarity systems allow quickly become comfortable using sunos help available via line manuals commonly called man pages following example show display man pages sunos command ls list contents directory sun man ls hushpuppy responds reformatting page wait done ls v user commands ls v name ls list contents directory synopsis ls aaccdffgillqrrstu filename system v synopsis usr bin ls abccdffgillmnopqrrstux filename continues remaining information ls command xinu clients five xinu clients named fishstick frenchfry onionring tatortot friedpie sun megabytes ram two serial ports ethernet connection scsi port console port one two serial ports five clients connected hushpuppy via multiplexer connection allows server machine act front end xinu client eliminates need additional terminal operating system also suppports terminal connected second serial port currently configured five target machines clients connected hushpuppy ethernet network connection clients download xinu executables created sparc hushpuppy devices hard disks cd roms scanners connected sun via scsi port contents operating system development tools xinu small operating system originally designed digital equipment lsi computer transported platforms reason xinu target machine sometimes called lsi written douglas comer associates purdue university xinu development tools used explore different aspects operating system design xinu version discussed comer book operating system design xinu approach volume one volume two text covers xinu version xinu currently installed hushpuppy found directory usr xinu c mc assembly source files xinu located directory usr xinu src xinu header files usr xinu include library files located usr xinu lib xcc c compiler xinu command xcc invokes c compiler assember loader produce object files motorola mc assembly language files xinu executables input files located hushpuppy input files c source files motorola xx assembly source files object files libraries object files distinction different types files made suffix file name suffix file type c c source code mc xx assembly source o object file object file library example xcc would assume files main c io c control c c source code file lowlevel assembly module recommended use xcc assemble routines written assembly language switches options sent programs via command line xcc understands switch purpose c suppress loading linking phase compilation force xcc stop producing o files source programs o output name final output file output v verbose output narrating step compile dname define name preprocessor define directive e run macro preprocessor named c programs send result standard output idir include files whose names begin always sought first directory file argument directories named options directories standard list o invoke object code improver part c compilation p run macro preprocessor named c programs send result corresponding files suffixed compile named c programs assembly language leave asembly language output corresponding files suffixed without assembling loading result l include standalone startup routine allow downloading without xinu xcc command used generate modules downloading contain xinu operating system l switch used create standalone object file standalone module mode linker uses libsa library functions instead usual libx libc example compile c source file named main c assembly listing named lowlevel object io o executable named prog use xcc following way xcc o prog main c lowlevel io o information options consult man pages sun c compiler cc command mc xx assembler sun based upon motorola family microprocessors command used assemble xx source files machine code however resulting binary file proper format downloading reason encouraged use xcc assembling assemble file setup enter xcc setup download download executable xinu client download command loads absolute binary program image produced xcc memory target machine name file download provided argument otherwise name assumed m option used select send binaries otherwise available client machine used example download mfishstick prog download file prog fishstick client available reserved users download display error message odt connect user terminal console port xinu client command odt takes name line debugging technique odt feature lsi pdp computers feature rom based monitor accepts console keyboard commands name odt kept historical reasons provide uniformity across different xinu platforms development tool odt used connect user terminal console port client machine input keyboard sent output displayed terminal run downloaded program enter odt prompt server machine see message telling connected automatically machine selected previously downloaded executable press ltreturn times prompt appears get prompt seems program already running client enter key sequence backslash character followed ltcontrol repeatedly responds correct prompt enter b prompt boot client load xinu executable memory machine start program typing g pressing example using instructions sun download prog using front end hushpuppy using backend fishstick downloading file prog sent xk bytes download completed note x line sent xk bytes number sun odt using front end hushpuppy using backend fishstick using dev ttyx note x line using dev ttyx device name m b eeprom boot device boot le using ip address booting tftp server downloaded x bytes tftp server note x line number g point xinu start program begin execution return hushpuppy press ltcontrol c ends odt session causes connection front end hushpuppy broken pressing ltcontrol c cause xinu client stop executing program may continue executing odt exited b ltcontrol c machine released sun target machine begins behaving strangely may need reset reset connect using odt command shown odt prompt enter k letter k followed space number press casue client reset perform self test load downloaded program memory two switches program options commonly used odt m h switch purpose mmachine name causes odt connect user terminal sun named machine name odt following download automatically use selected download m switch used h allows remain reserved another also used example odt mfishstick h access fishstick keep reservation computers already reserved normally downloading using odt connect one xinu client releases reservations busers list xinu client users command busers lists currently reserved login name user using target machine example sun busers fishstick idle time mins class sun reserved ershanno frenchfry idly time mins class sun reserved wjhicks contents program development example editor used create source files sample program compiled using xcc command download xinu operating system sun system call getc used read characters form terminal c source program include ltconf h main char c c getc console printf c n c end sample program program compiled using xcc sun xcc prog c prog c records records sun output file absolute object image sun download sun odt using fishstick b eeprom boot device boot le using ip address booting tftp server downloaded bytes tftp server g program executes letter typed press ltcontrol c release target machine return hushpuppy remember ending odt session halt programs may executing target machine contents working xinu adding commands xinu shell put command home xinu src sys shell usercmds home path directory originally uncompressed untared file makefile home xinu src sys shell add userofil line compile new command line look something like userofil usercmds ascdate o usercmds x cat o usercmds x cp o usercmds x date o usercmds x echo o usercmds x mount o usercmds x mv o usercmds x rls o usercmds x rm o usercmds x sleep o usercmds x unmou o usercmds x close o usercmds x kill o usercmds commands o run make home xinu src sys shell usercmds make necessary object files see using make xinu cmd h add function name command list externs externs list look like added command extern int x bpool x cat x close x conf x cp x creat x date x devs x dg x echo x exit x help x kill x mem x mount x mv x net x ps x reboot x rf x rls x rm x routes x sleep x snap x unmou x uptime x x fmdump x run x pgstats x printpgtbl x vmem command add line define cmds shell knows run type command first piece info command shell recognize quotes followed comma second thing boolean variable determines whether command builtin unsure implications regards xinu set false third thing name function called type command shell prompt cmds line looks like define cmds bpool false x bpool cat false x cat close false x close conf false x conf cp false x cp create false x creat ruptime false x uptime sleep false x sleep snap false x snap time false x date unmount false x unmou uptime false x uptime false x vmem false x vmem false x help command false command note adding commands usercmds make sure name function name file absolutely necessary long function run given command typed shell corresponds function think running link setup cmd h file function following structure command command stdin stdout stderr nargs args int stdin stdout stderr nargs char args function would saved file called command c using make xinu make needs run xinu directory create downloadable file run sun special script already written specific task called makeall located following directory home xinu src sys execute probably tell shell script located since directory path directory makeall located line execute would sun makeall getting copy xinu get copy xinu click get copy tared compressed file untar unzip file need following uncompress file sun uncompress xinu tar z untar file sun tar xvf xinu tar create three directories docs programs xinu source code located xinu changed described trouble shooting osl trouble xcc command xcc creates temporary object files current directory compiling c programs assembling xx programs temporary files names source files except o suffix therefore possible compile two modules base name name excluding suffix directory read c read resulting object files name trouble download hushpuppy responds download request suns available must wait someone releases target machine currently use trouble odt refuses respond point expecting odt prompt press backlash ltcontrol multiple times see prompt start odt session another user program still running client use key sequence described abort program boot normally ltcontrol c return hushpuppy login another terminal kill odt process ask operator stack overflow suns osl bit machines need twice much memory strore addresses data bit lsi computers used volume douglas comer book example programs textbook use xinu system call create spawn new processes double triple stack sizes given book programs sure process enough memory process runs stack space xinu reply error message panic current process stack overflow report problems lab equipment problem persists particular machine report sending mail ops use another mail sent ops goes operators first one read message correct problem comments sugestions document please send email earl shannon ershanno hushpuppy csc ncsu edu bill hicks wjhicks hushpuppy csc ncsu edu last update version
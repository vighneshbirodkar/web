date thu nov gmt server ncsa content type text html last modified thu oct gmt content length cs lecture cs introduction data structuresfall course email address cs cs wisc edu course home page http www cs wisc edu cs cs html instructor yannis ioannidis office computer sciences office hours tuesday thursday office phone email address yannis cs wisc edu home page http www cs wisc edu yannis yannis html contents news teaching assistants lecture information c language text grading exams course schedule assignment programming assignments late policy cheating help program grading style external documentation internal documentation using unix vi program development cycle news assignment assignment ready midterm statistics interesting exam statistics section max min median mean old midterm sample old midterm available help preparation midterm assignment assignment ready notes o notation binary search notes o notation binary search available want print either one open file menu ghostview window shows document choose print menu item women computer science female faculty graduate students undergraduates formed group called wics women computer science one group goals encourage women become computer science majors women class would like talk someone majoring computer science graduate studies computer science women would like extra help classwork see suzan computer science grad student office hours email make appointment suzan e mail address stodder cs wisc edu office hours tuesday thursday room assignment assignment ready town first week classes town vldb conference jim larus give lectures class september th teaching assistants people listed teaching assistants tas course grading homework assigments happy answer questions assignments aspect course giving trouble note tas assigned specific sections chin tang chin office computer sciences office hours monday tuesday pm friday office phone email address cchin cs wisc edu home page http www cs wisc edu cchin cchin html wei zhang office computer sciences office hours wednesday thursday sunday pm office phone email address weiz cs wisc edu home page http www cs wisc edu weiz weiz html lecture information lecture tuesday thursday computer sciences statistics c language cs taught using c programming language required programming assignments c didn choose c make life difficult people become fluent c think far superior c pascal use c growing tremendously field odds ever write another program course ends able write c statement true pascal c also widely available initial startup period productive c c go take computer science courses exceptions required use c courses text text book course data abstraction problem solving c walls mirrors frank m carrano isbn well written text covers material course also includes lot c separate text language necessary lectures often always following cs lecture notes fall david j dewitt notes actually considerably complete simple lecture notes still short true text book little narrative text exercises etc recommended additional source may want purchase notes available doit documentation desk near dayton street entrance computer sciences building w dayton st first experience unix need information activating account logging creating editing manipulating files compiling running debugging programs handout cs available doit information desk dewitt notes available contains key information find invaluable see also help section mentioned lectures often follow dewitt notes although may supplement handouts course semester nonetheless responsible material covered lecture exams based lecture material reading assignments notes course assignments grading one two evening exams course semester final exam five programming assignments exams determine final grade approximately equal weight one programming assignments count exams exam tuesday october nd pm pm chemistry exam tba final exam wednesday december th pm pm place tba course schedule following list topics covered course detailed scheduled provided later semester topic dewitt notes walls mirrors introduction administration general familiarity basic stuff c lecture app app c functions lecture app pointers lecture app records dynamic storage lecture app lists lecture lists lecture binary search o notation advanced lists lecture advanced lists lecture stacks lecture queues lecture hashing lecture hashing lecture recursion evening exam lecture trees lecture trees lecture binary trees sort search lecture avl trees avl trees graphs lecture graphs lecture graphs lecture graphs lecture sorting lecture thanksgiving sorting lecture sorting lecture announced assignment absolute necessity get grade f bring photograph picture st birthday one boy girl scout trip summer color black white size etc grade given without photo programming assignments proficiency programming language pascal c c fortran introductory level assumed equivalent uw madison prerequisite course cs assignments must done c designated machines machine rooms first floor cs building encourage use machines prefer use home computer may certain restrictions must c compiler home machine must log university account often read email get copies data files finally require turn c program electronically via email work home must make provisions download programs university account make sure compile run g compiler sparcstations often use electronic mail notify students changes assignments hints programs etc assume read electronic mail send late policy late assignment accepted assignments must turned exactly due order avoid lateness caused machine loads coincident due dates several classes etc simply sure get started right away assignment things certain go wrong wait last minute start exceptions must approved need good excuse get trouble see soon possible cheating computer science department takes hard line stance cheating welcome communicate design algorithms data structures sharing code also expected learn understand obey computer systems lab policies governing computer accounts help problems course work programs please let know early semester possible office hours policies need help debugging program best way get help visit one cs ta office hours taking along current hard copy program office hours intended time re explain concepts presented class still confused answer specific questions course material encourage use email reliable way contact problems read respond email several times daily almost every day week program grading programs graded following criteria correctness program behave correctly normally typical input program behave stated project specifications clarity program easy read understand see notes style information clarity robustness correct behavior extreme unusual situations program handle situations reasonable logical manner simply blow quality test data test data program demonstrate facets program capabilities including unusual cases efficiency avoid unnecessarily inefficient algorithms constructs however efficiency never pursued expense clarity modularity program modular make effective use parameters completeness incorporate information program need sort extra paper documentation generality program general possible subject consideration efficiency clarity avoid arbitrary limitations bound size complexity input whenever possible limitations necessary expressed defined constants near top program easily changed numeric literals appear program values likely change style use meaningful identifier names use consistent naming scheme identifier names suggested convention follows int variable name int function name int argument const int defined constant enum enumtype value value class classname put multiple statements single line skip lines functional groups code use clear consistent indentation style see dewitt notes suggested style indent continued statements loops etc line label meaningfully e g done external documentation included long comment beginning program addressed typical user someone wants know superficially program works include full name student id beginning comment give general description program tell use program call format data give limitations bugs special features assumptions made describe negative well positive aspects program include negatives assume unaware information included assignment problem description need repeated may briefly summarized first point statement referring user assignment document sufficient note applies problem description internal documentation four main types internal documentation headers comments headers functions classes major data structures describe purpose assumptions parameters main outline algorithms use declarations comments next declaration variable data member provide extra information conveyed identifier name name variable tell much possible without making long additional information supplied comment example int top index last element added stack use comments explain parameters well local variables within segments code tricky opaque sections code avoided sometimes necessary cases comment help reader understand going segments code comments clarify top level outline algorithm using unix vi many people working unix first time find takes time become comfortable particularly true previous programming experience pascal using macpascal macintosh strongly urge put time early semester become comfortable unix time may painful time well spent also may wish attend unix tutorial held rooms comp sci two sessions following days tba want pick copy cs go program development cycle program development cycle unix environment edit program vi program c compile program g wall g program c compilation errors continue run program inputfile outputfile look output vi outputfile outputfile errors break tired continue print listing take home pr program c inputfile outputfile lpr goto home debug program gdb run quit re done turn result submission instruction given later yannis cs wisc edu mon aug cdt
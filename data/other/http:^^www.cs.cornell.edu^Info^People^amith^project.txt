mime version server cern date sunday dec gmt content type text html content length last modified saturday aug gmt image video transition fx rivl image video transition fx rivl jose luis fernandez valerie j ohm amith yamasani october overview rivl language extension tcl tk manipulating images video sequences comes set primitives fade rotate overlay etc purpose project extend set primitives use creating complex transitional effects two images video sequences deliverables set primitives create transitional effects two images one image creating sequence intermediate images effects would include flip deform squish peel fold melt bounce squish morph transitional effects video sequences milestones study implementation rivl understand internal representation images video sequences work simpler transitional effects flip melt peel get effects working single image transition two images algorithms modified work video sequences implementation effects like fold squish deform work images video sequences test functions extensively optimize maximum speed time permits create simple interface accept points two images use points references morphing one image documentation parts could done concurrently coding testing technical overview effects flip basically shearing operation fixed line either two axes parameters would position orientation fulcrum image angle flip image case flipping video frames would processed one one angle increasing gradually melt image seems melt liquid flow sight would involve generating random smooth wave shearing image wave wave would also change shape gradually doesn look like curtain falling fold effect simulates folding piece paper image folded determined parameters function image folded opaque piece paper transparent one peel real cool effect like peeling sheet paper placed another one even video sequence peeled expose another sequence direction peeling specified parameter effect could extended rolling away like scroll squish squishing image would cause get compressed bulge middle bounce squish variant squishing little springy involves shearing image unevenly applying sine function shear gradually increasing amplitude sine wave deform deforming image would involve squeezing rectangular image nonrectangular area could quadrilateral oval first image would resized dimensions fit bounding rectangle destination shape would sheared fit actual shape effects one video sequence gets transformed next sequence fills background
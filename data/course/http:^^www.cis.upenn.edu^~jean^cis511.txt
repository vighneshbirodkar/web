server netscape communications date wednesday nov gmt last modified friday aug gmt content length content type text html cis handout cis summer introduction theory computation course information may coordinates moore instructor jean h gallier mre jean saul office hours noon monday wednesday noon tuesday teaching assistant shiann liang chern slchern saul cis upenn edu office hours tuesday thursday newsgroup upenn cis cis textbook required introduction automata theory languages computation j e hopcroft j d ullman addison wesley also recommended theory computation d wood wiley grades homework assignments take home final problem sets homework homework homework course notes basics language theory dfa cross product construction subset algorithm labeled graphs regular expressions node elimination algorithm nerode myhill theorem minimal dfa context free grammars context free languages parse trees ogden lemma context free languages pdas turing machines partial recursive functions r e sets phrase structure grammars brief description course provides introduction theory computation treatment mathematical point view computer science roughly speaking theory computation consists three overlapping subareas formal languages automata computability recursive function theory complexity theory course focus mostly applications programming natural language specification parsing top bottom parsing emphasized topics include basics language theory alphabets strings concatenation languages operations languages including kleene deterministic finite automata dfa cross product construction nondeterministic finite automata nfa nfa dfa subset algorithm rabin scott labeled directed graphs nfa dfa regular languages regular expressions regular expressions nfa nfa regular expressions node elimination right invariant equivalence relations nerode myhill characterization theorem pumping lemma regular languages state equivalence minimal dfa fractals languages glimpse context free grammars context free languages leftmost derivations rightmost derivations parse trees universality leftmost derivations cleaning context free grammars e rules chain rules chomsky normal form right linear grammars regular languages eliminating useless productions greibach normal form tree domains gorn trees parse trees strong pumping lemma context free languages ogden lemma pushdown automata pda instantaneous descriptions acceptance modes dpda deterministic pda context free grammars pda pda context free grammars glimpse lr parsing generalities computability models computation turing machines ram programs flowchart sequential form primitive recursive functions recursive partial recursive functions recursively enumerable languages recursive languages equivalence ram computable turing computable functions equivalence turing computable functions partial recursive functions phrase structure grammars type languages type grammars context sensitive grammars monotonic grammars linear bounded automata published jean gallier
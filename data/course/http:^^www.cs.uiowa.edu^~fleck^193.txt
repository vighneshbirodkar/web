date wed nov gmt server ncsa content type text html fall course announcement fall course announcement c logic programming instructor arthur c fleck time place mwf mlh text sterling shapiro art prolog nd ed mit press course overview goal logic programming allow us specify properties correct solution problem must possess automatically deduce solution without programming unique paradigm suitable many non numeric applications connections variety areas computer science including automatic theorem proving deductive database various ai applications natural language processing expert systems knowledge representation principal focus course semantics pragmatics prolog programming aptness logic programming general background formal prerequisites c c assumed prior knowledge logic programming required necessary background course topics developed assumed student experience several programming languages especially recursion familiar concept please note undergraduate majors select course one two advanced cs courses required b degree course involve conceptual project work projects modest size use prolog possibly logic languages implementations obtained tentative listing indicates range topics possible provide complete treatment topics touched briefly tenative topic list overview prolog philosophy logic programming substitutions unification horn clause logic proof theory resolution model theory semantics computability prolog semantics procedural semantics wam warren abstract machine code logic programming vs prolog programming arithmetic occur check cut assert retract higher order features e g call findall negation cwa naf difference lists logic grammars translation prolog clauses programming language natural language analysis unifying functional logic programming equational logic rewriting systems narrowing web information logic programming see www logic programming page
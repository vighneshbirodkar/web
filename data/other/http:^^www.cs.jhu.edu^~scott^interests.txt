date wed jan gmt server ncsa last modified fri dec gmt content type text html content length scott smith research interests scott smith research interests large body important foundational research done area programming language semantics goal practical application work full featured programming languages languages features memories object orientedness rich notions type exceptions concurrency theory include products rich theory equivalence programs well logics programs three reasons line research important first obviously allows full featured languages unambiguously specified remove flaws design believe ever able prove programs correct certainly able prove language designs sound second semantic approach effectively used clean inconsistencies language design provide compiler writers programmers concrete notions program equivalence logical assertions programs clarify activities lastly topic interests novel ideas language design analysis effectively pursued framework possible carefully develop ideas extremely small languages scale something possible working compiler must always objective big challenges remaining beyond scaling existing results include modelling dynamic systems dynamically allocate new memory objects open systems system computation occurring locally object oriented systems active research areas constrained types object oriented programming languages main research interest area constrained typing constrained types particularly interesting naturally generalize hindley milner type inference form based subtyping instead type equality types inferred expressive appropriately type binary methods object oriented programming languages oopsla paper introduces constrained types examples full technical details see mfps paper details work may found hopkins objects group home page distributed object oriented programming another project involved concerns distributed concurrent object oriented computation project performed collaboration gul agha ian mason carolyn talcott features accomplished thus far rigorous reworking actor model computation operational semantics executions given fair executions considered unfair executions never arise practice observational equivalence methods proving observational equivalence presence fairness defined explicit dynamic modeling external agents interactions latter two believe key contributions little current research addresses issues paper topic less active research areas semantics typed object oriented programming developing sound semantics typed notions inheritence long standing research problem believe state critical component oop thus directly model objects state current research typing oop purely functional languages although gives good first approximation problem enough progress made arena time work directly language state paper lisp symbolic computation represents final statement topic towards complete operational semantics aim project accomplish degree unification operational denotational approaches programming language semantics recasting classic denotational concepts inside purely operational framework concepts include notions ordering directed set complete partial order monotonicity continuity least fixed point principle finite element omega algebraicity fixed point induction purpose approach give full faithful semantics languages denotational semantics fails date approach developed functional languages preliminary extensions languages memories shown possibilities problem finite elements languages memories currently open however paper topic asynchronous digital circuit synthesis collaboration amy zwarico defined formal language specifying asynchronous digital circuits based hoare csp verified translation circuits hardware devices collections gates translation proven correct defining formal operational notion equivalence incrementally translating specification circuit small steps preserve equivalence numerous informal arguments correctness similar synthesis methods exist work first complete rigorous proof correctness method features work include following translation defined set rewrite rules broken five phases new notion translational equivalence defined state translation preserves meaning language changing fair executions considered gates inherently fair first work circuit theory consider fairness paper topic
mime version server cern date sunday nov gmt content type text html content length last modified tuesday may gmt multimatlab multimatlab matlab multiple processors anne e trefethen cornell theory center aet tc cornell eduhttp www tc cornell edu anne vijay menon computer science department cornell university vsm cs cornell eduhttp www cs cornell edu info people vsm chi chao chang computer science department cornell university chichao cs cornell eduhttp www cs cornell edu info people chichao chichao html grzegorz j czajkowski computer science department cornell university grzes cs cornell eduhttp www cs cornell edu info people grzes grzes html chris myerscornell theory center myers tc cornell eduhttp www tc cornell edu cserg myers lloyd n trefethen computer science department cornell university lnt cs cornell eduhttp www cs cornell edu home lnt abstract matlab commercial product mathworks inc become one principal languages desktop scientific computing system described enables one run matlab conveniently multiple processors using short matlab style commands like eval send recv bcast min sum user operating within one matlab session start matlab processes machines pass commands data various processes fashion maintains matlab traditional user friendliness multi processor graphics also supported system currently runs mpich ibm sp network unix workstations extensions planned networks pcs multimatlab potentially useful education parallel programming prototyping parallel algorithms fast convenient execution easily parallelizable numerical computations multiple processors keywords matlab multimatlab sp message passing mpi mpich introduction popularity matlab matlab high level language problem solving environment mathematical scientific calculations originated late attempt cleve moler provide interactive access fortran linear algebra software packages eispack linpack soon programming language emerged programs conventionally extension m called m files containing dozens high level commands svd singular value decomposition fft fast fourier transform roots polynomial zerofinding graphical commands built language company called mathworks inc formed moler john little based natick massachusetts beginning matlab proved greatly appealing users numerical analysis signal processing communities united states took quickly followed groups scientists engineers u abroad roughly speaking number matlab users doubled year since according mathworks currently users fifty countries figure continues increase rapidly many scientific engineering communities matlab become dominant language desktop numerical computing least six reasons matlab success identified first exceptionally user friendly intuitive syntax favoring brevity simplicity turns without compressed interfere intelligibility second high quality underlying numerical programs result matlab intimate ties beginning numerical analysis research community third powerful user friendly graphics fourth high level language often makes possible carry computations line two matlab would require dozens hundreds lines fortran c ability link fortran c programs also provided fifth matlab easy extensibility via packages m files known toolboxes many toolboxes produced years mathworks others covering application areas optimization signal processing fuzzy logic partial differential equations mathematical finance finally perhaps interesting reason matlab success may beginning whole language built around real complex vectors matrices including sparse matrices fundamental data type computer scientists involved numerical computation limitation may seem narrow capricious proved extraordinarily fruitful probably fair say one three four important developments numerical computation past decade emergence matlab preferred language tens thousands leading scientists engineers single vs multiple processors curiously one principal developments past decade orthogonal one move single multiple processors new generation researchers practitioners grown accustomed principle high performance computing means multi processor computing phenomenon attested success supercomputing conferences development emergence matlab disjoint events matlab remains language tied single processor originally matlab conceived educational aid tool prototyping algorithms would translated real language justifications point view presumably matlab capabilities limited interpreted could achieve performance compiled language years however force arguments diminished much matlab software available matlab capabilities hardly called narrow anymore performance many users find degradation speed factor made improvement programming ease factor matlab one effortlessly modifies model plots new variable reformulates problem interactive fashion rapid real time exploration rarely feasible fortran c thus increasingly matlab become language real computing scientists engineers one sense remained matlab system education prototyping one wants take advantage multiple processors one must switch languages experts many participating conference habit others less familiar rapidly changing complexities high performance computing remain tied matlab desktops isolated trend towards multiprocessors vision multimatlab project bridge gap think user finds computing happily matlab frustrated time takes rerun program six different boundary conditions dozen different parameter choices hundred different initial guesses user problems might solved system makes convenient spawn matlab processes multiple processors parallel computer network workstations pcs many cases needs communication processors rather small convenience spreading problem across machines collecting results numerically graphically paramount multimatlab project exploring one approach making kind computing possible outset aim fine grained parallelism peak performance kind needed grand challenge problems computational science instead following philosophy made matlab successful require reasonable efficiency put premium ease use key principle matlab home grown facsimile would little chance keeping ever expanding features commercial product must run multiple processors vision user must able learn enough five minutes become intrigued system begin use using multimatlab start nproc eval id multimatlab command begins initial upper case letter illustrate system used describing implementation suppose first author sitting workstation theory center connected node ibm sp running matlab time decides start matlab five new processors types start matlab started five additional processors taken predetermined list perhaps second author sitting machine connected cornell computer science department network types start gemini orion rigel castor pollux matlab started five processors names indicated names could repeated case multiple matlab processes would started single processor either case processes started message returned multimatlab processes running total number processors subsequently accessed multimatlab command nproc standard multimatlab command executing commands one processors eval user types eval sqrt matlab command sqrt executed six processors result six repetitions interesting hand command eval id calls multimatlab command id processors running command returns number current process integer nproc running nodes might give result ans ans ans ans ans ans ordering numbers arbitrary since processors synchronized output sent master process soon ready good idea type eval format compact beginning keep output various processes condensed possible command eval id id might produce ans ans ans ans ans ans examples keeping orientation toward spmd programming command passed eval executed matlab processes alternatively one select subset processes passing two arguments eval command first vector process ids thus eval cond hilb id might return ans e ans e condition numbers hilbert matrices dimensions eval quad exp id id might return ans ans ans integrals ex n n n note double quote used obtain string within string calling matlab command quad gives hint high level power available characteristic matlab case adaptive numerical quadrature carried compute desired integral matlab users accustomed treating problems like integration zerofinding minimization computation eigenvalues routine matters handled silently appropriate single word commands none examples costly enough use multiple processors serve much purpose easy devise examples suppose want find spectral radii maximum absolute values eigenvalues six matrices dimension command eval max abs eig randn trick get six copies number since random number generators deliver identical results processors preceding eigenvalue computation eval randn seed id however leads result desired ans ans ans ans ans ans spectral radius n n random matrix approximately square root n large n typical experiment example might run seconds six thin nodes sp elapsed time would six times greater one used loop single machine course monte carlo experiments like one always easiest examples embarrassingly parallel computations simplicity examples call eval explicit matlab command argument string applications however user want execute program m file rather single line text command eval filename achieves effect put get far communicated processes except send screen output master process course nontrivial multimatlab system depends communication one form communication implemented puts gets executable solely master matlab process example command put sends matrix master process processes optional argument permits name changed destination command get b gets matrix b back process master send recv probe barrier general point point communication accomplished send receive commands executed matlab processes example sequence x pi pi send x eval recv passes message containing vector master process process leading output optional argument added recv specify source another optional argument may added send recv specify message tag ensure sends receives properly matched aid error checking command probe run process optional source process number message tag returns true message arrived indicated source indicated tag otherwise false spmd programs built upon send recv commands typically program contains else commands specify different actions different processes example suppose m file cycle m consists following program id first process send send id elseif id nproc last process receive double recv else middle processes receive double send recv send id end process creates variable value sends process process receives message doubles value sends along process six processors command eval cycle produces output processes run asynchronously since send command executed corresponding recv completed proper sequence computations final value guaranteed long nodes functioning alternatively multimatlab command available explicit synchronization command barrier returns called process bcast min max sum although send takes vector processor ids destination list underlying idea point point communication efficient communication multiple processes well greater convenience programmer multimatlab also various commands collective communication commands must evaluated simultaneously processes bcast command used broadcast matrix one process processes using tree structured algorithm example eval bcast id returns number processes bcast much efficient corresponding send recv kind tree algorithm used various computations reduce data many processes one example commands min max sum compute vectors obtained reducing data copies vector matrix located processors thus command eval sum id nproc executed six processes return vector process first argument omitted result returned broadcast processes higher level multimatlab commands multimatlab commands described far represent communication primitives used message passing paradigm programming one aims project however provide also interface higher level building routines hiding much message passing possible taking data parallel approach simplistic fashion developed number routines distribute collect allow user distribute matrix collect set matrices one large matrix functions operate using mask indicates processors hold portions matrix allows us also develop routines shift copy useful data parallel computing keeping communication abstract level additional geometry routines grid coord also constructed allow user create grid processors dimensions provide powerful tool sophisticated parallel coding optional argument communication routines allows communication within given set nodes example along column row grid give details facilities development multiprocessor graphics one great strengths matlab graphics primary goal multimatlab project ensure strength carries multiprocessor computations many applications user find convenient compute multiple processors produce plots master process sending data necessary equally often however may desirable produce plots distributed fashion sent user screen particularly useful one wishes monitor progress computations several processors graphically found following simple method useful mentioned many calculations geometric flavor divide easily say four eight subdomains assigned corresponding set processors set matlab figure window process arrange grid screen easily done using standard matlab handle graphics commands expect shortly develop multimatlab commands purpose integrated grid operations mentioned earlier figure shows example kind computing case grid windows particular example computed pseudospectra matrix known grcar matrix easy application multimatlab since computation requires large number floating point operations singular value decompositions dimension minimal communication global minimum maximum data min max panels scale another kind application might benefit kind graphics would follows suppose wish solve wave equation explicit finite difference scheme watch waves bounce around computational domain straightforward matter divide computation grid processors figure communicating one row column boundary data adjacent processors step waves seen propagate one window another kind visualization convenient interactive experimentation higher quality plots produced selected time steps necessary sending data single processor second computed example illustrates use multiple figure windows monitoring process numerical optimization matlab contains powerful programs minimization functions several variables one original programs fminu unfortunately programs generally find local minima global ones one requires global minimum customary run search multiple times distinct initial points many cases might well taken random sufficiently many trials leading single smallest minimum found one acquires confidence global minimum found cost confidence may considerable computing time problem easily parallelizable next figure shows case distributed four processors function f x y two variables constructed many local minima one global minimum value taken origin four processors optimization carried twenty random initial points result displayed corresponding figure window straight line initial guess converged value background curves contours objective function f x y note three windows smallest value obtained f x y whereas fourth window found global minimum f x y examples set grid windows one processor alternative might desirable sometimes multiple matlab processes draw one common window arrangement possible within xwindows example however possible within multimatlab present figure window id read property current version matlab cannot set reset user implementation multimatlab multimatlab built upon mpi message passing interface highly functional portable message passing standard brief description system put together system written using mpich popular freely available implementation mpi developed argonne national laboratory mississippi state university particular multimatlab uses p communication layer within mpich allowing run heterogeneous network workstations building upon mpich believe developed portable extensible system anyone freely get copy software run many systems versions mpich beginning become available run pcs running windows expect soon experiment multimatlab platforms multimatlab start command builds p process group file remote hosts either explicitly specified user taken default list initializes mpich matlab processes started remote hosts process iterates simple loop waiting executing commands received user interactive matlab process user may use quit command shut slaves exit multimatlab additionally user quits matlab multimatlab session slaves automatically shut one limitation mpi designed particular kind interactive use running program cannot spawn additional processes consequence limitation multimatlab running multiple processors possible add processors list except quitting starting expected limitation mpi removed extension mpi development known mpi user level multimatlab consists collection commands send example command written c file called send c interfaced matlab via standard matlab fortran c c interface system known mex within mpi many variants sends receives defined multimatlab currently built upon standard send receive variants employ buffered communication messages synchronous communication large ones underlying mpi sends receives blocking operations ensure data overwritten multimatlab programmer semantics recv blocking send non blocking higher level multimatlab commands usually built higher level mpi commands example bcast min max sum built mpi collective communication routines grid coord built mpi routines support cartesian topologies stressed multimatlab allows mpi routines direct access matlab data result multimatlab incur extra copying costs mpich reasonable expect efficiency comparable experiments show indeed approximately case results typical experiment size matrix round trip latency doubles milliseconds mpich multimatlab table compares round trip latencies multimatlab code equivalent c code using mpich reveals multimatlab add overhead mpich timings obtained ibm sp using high performance switch occurs matlab performs memory allocation received matrices might possible alleviate problem maintaining list preallocated buffers pursued idea related work many people must thought parallelizing matlab years according moler essay isn parallel matlab published mathworks newsletter involved one earliest attempts mid intel ipsc course great deal happened distributed computing since first experiments carried e trefethen making use fortran wrapper based ibm message passing environment mpl ran matlab multiple nodes ibm sp impressed power system certain fluid mechanics calculations experience ultimately led persuading mathworks support us initiating present project aware seven projects undertaken elsewhere share goals capabilities multimatlab shall briefly describe longest standing related project dating conlab concurrent laboratory system k gstr m others university ume sweden conlab fully independent system matlab like notation extends matlab language control structures functions explicit parallelism conlab programs compiled c code message passing library picl node computations done using lapack group center supercomputing research development university illinois developed falcon fast array language computation programming environment facilitates translation matlab code fortran falcon employs compile time run time inference mechanisms determine variable properties type structure size although falcon directly generate parallel code future aim project annotate generated fortran code directives parallelization data distribution parallelizing fortran compiler polaris may use directives generate parallel code another project technion israel matcom matcom consists matlab c translator associated c matrix class overloaded operators present matcom translates matlab serial c one might hope build distributed c matrix class underneath would adhere interface existing matrix class project known alpha bridge developed alpha data parallel systems ltd edinburgh scotland originally system known matlab transputer bridge group ran matlab like language parallel node transputer alpha bridge system enhancement idea high performance risc processors linked transputer network reduced matlab like interpreter runs node network control master matlab process running pc fifth project undertaken far cornell integrated sensors inc isi utica ny consulting company close links us air force rome laboratories matlab code translated c code parallel library routines project product aims executing matlab style programs parallel real time control related applications final two projects shall mention though fully developed closest concept one system built group universities rostock wismar germany system matlab run various nodes network unix workstations message passing communication via authors system psi ipc based unix sockets finally parallel toolbox system developed originally graduate students pauca liu hollingsworth martinez wake forest university north carolina system based upon message passing system known pvm parallel toolbox level indirection present multimatlab matlab master process slaves pvm process known pt engine daemon besides handling spawning new processes pt engine daemon also filters input output sending error codes pt error daemon logs error messages file summarizing various projects main thing said involve original implementations matlab like language rather use existing matlab system good reasons one aim high performance investigation ideal parallel matlab like system might look like disadvantage existing matlab product present widely used extensive capabilities may unrealistic inefficient try duplicate instead decision build upon matlab produce prototype users try extension current work rather alternative mentioned approach also followed rostock wismar wake forest university projects using pvm another message passing system rather mpi conclusions multimatlab summarized words run matlab processes multiple processors full access usual capabilities toolboxes processes communicate via simple matlab style commands built mpi message passing details hidden far possible user master slave spmd paradigms implemented attention paid multiprocessor graphics happens without changes matlab architecture indeed access matlab source code straightforward matter install current software network unix workstations sp system provided nodes licensed run matlab shared file system expect extensions networks pcs running windows based appropriate implementations mpi far behind hope make research code publicly available near future announce event na net electronic distribution list elsewhere based reactions users far think multimatlab prove appealing many people enhancing power computations educational device teaching message passing ideas parallel algorithms gives matlab users easy access message passing parallel efficiency always high might achieved many applications surprisingly good hope address questions performance detail forthcoming technical report multimatlab means final form evolving project various improvements functionality example areas collective communications higher level abstractions development current system also needs improvement area robustness respect various kinds errors documentation guided development process several projects underway multimatlab used colleagues scientific computations mentioned text several projects related multimatlab pursued institutions including conlab falcon parallel toolbox others though details emerge next years course yet clear believe authors systems join us expecting inevitable matlab world soon take step single multiple processors references w blume et al effective automatic parallelization polaris international journal parallel programming may l de rose et al falcon environment development scientific libraries applications proc first intl workshop knowledge based systems re use program libraries sophia antipolis france november l de rose et al falcon matlab interactive restructuring compiler languages compilers parallel computing pp springer verlag august p drakenberg p jacobson b k gstr m conlab compiler distributed memory multicomputer r f sincovec et al eds proc sixth siam conf parallel proc sci comp v pp g geist et al picl portable instrumented communication library tech rep ornl tm oak ridge natl lab w gropp e lusk n doss skjellum high performance portable implementation mpi message passing interface standard parallel computing appear w gropp e lusk skjellum using mpi mit press j hollingsworth k liu paul pauca parallel toolbox matlab pt v manual reference pages wake forest university integrated sensors inc home page http www sensors com p jacobson b k gstr m m r nnar algorithm development distributed memory multicomputers using conlab scientific programming v pp j kadlec n nakhaee alpha bridge parallel processing matlab second mathworks conference matcom march release http techunix technion ac il yak matcom html message passing interface forum mpi message passing interface standard intl j supercomputer applics v c moler isn parallel matlab mathworks newsletter spring pawletta pawletta w drewelow distributed parallel simulation interactive environment preprint university rostock germany pawletta pawletta w drewelow comparison parallel simulation techniques matlab psi simulation news europe v pp l n trefethen pseudospectra matrices d f griffiths g watson numerical analysis longman pp authors anne trefethen associate director scientific computational support cornell theory center worked thinking machines inc one developers connection machine scientific software library vijay menon interested parallelizing compilers phd student keshav pingali computer science department cornell chi chao chang greg czajkowski interested runtime systems phd students thorsten von eicken computer science department cornell chris myers research scientist cornell theory center research interests condensed matter physics scientific computing nick trefethen professor department computer science cornell using matlab since research interests numerical analysis applied mathematics acknowledgments advice comments concerning multimatlab project paper grateful toby driscoll bill gropp xiaoming liu cleve moler barry smith steve vavasis thorsten von eicken research supported part mathworks inc conducted part using resources cornell theory center receives major funding national science foundation nsf new york state additional support defence advanced research projects agency darpa national center research resources national institutes health nih ibm corporation members center corporate partnership program support provided nsf grant dms doe grant de fgo er l n trefethen nsf grant ccr support menon pingali arpa grant n support czajkowski von eicken doctoral fellowship brazilian research council chang
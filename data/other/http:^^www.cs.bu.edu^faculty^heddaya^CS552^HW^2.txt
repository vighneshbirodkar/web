date tue jan gmt server ncsa content type text html bu cas cs operating systems homework bu cas cs operating systems fall heddaya homework due fri extended mon read review paper operating systems following list publications review one page long one third devoted critique original paper see reviewing guidelines acm transactions computer systems proceedings acm symposium operating systems principles available special issues operating systems review acm transactions programming languages systems acm computing surveys ieee transactions software engineering ieee transactions computers proceedings ieee international conference distributed computing systems tanenbaum tanenbaum note definition tanenbaum p wrong although explanation correct design os special purpose computer controls various components car system would consist cpu ram multiple sensors speed gas pedal position brake pedal position proximity objects road etc multiple actuators fuel flow fuel air mixture brakes transmission etc multiple displays gauges various kinds assume function controlcar implements one step successive approximation control algorithm given set sensor values controlcar returns approximation actuator parameter values also optionally given previous approximation output input returns better approximation assume controlcar user program running system invoking proper times correct inputs task special purpose os os would observe constraints imposed physical properties various components car driving convenience importantly necessity maintain safety human passengers physical properties actuators dictate maximum allowable rate change actuator values physical properties system handled function controlcar however os still needs maintain basic constraints driving convenience includes issues delay pressing gas pedal beginning acceleration imperceptible say ms safety dictates certain functions important others places time limits allowable response times example driver depresses brake pedal brakes must applied within ms example general requirement os use best approximations actuator values obtained successive calls controlcar without violating important requirements main design decision os whether adopt software architecture based polling interrupts perhaps hybrid part design specify hardware configuration example system run os need produce full hardware design system suffices draw block diagram point hardware features os requires formulate constraints os deal e g timing constraints priority constraints terms system sketch software structure os use variety diagrams block structure control flow data flow execution trace diagrams briefly explain os works would take substitute different implementations controlcar created maintained abdelsalam heddaya
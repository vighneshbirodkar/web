date tue jan gmt server ncsa content type text html last modified sun aug gmt content length lecture lecture programming languages mishra g programming languages pl b mishra new york university lecture slide ada programming language language survey countess ada augusta lovelace first programmer hacker babbage analytical engine relatively new programming language developed dod currently language approved dod software project developed reduce high cost designing writing maintaining dod software major items software embedded systems primary purpose control incorporated larger systems large software lines code long lived systems years continuously evolving slide design history holwg high order language working group established investigate problems developing common language dod list requirements strawman woodenman tinman ironman revised ironman finally steelman design competition winner jean ichbiah cii honeywell bull ada iso standard analysis technical queries arg ada rapporteur group resulted ais ada issues dod ansi established ada x project feb ada core language specialized annexes slide quick overview ada strong typing scalar composite access private derived representation specification standard control constructs structured language pascalish subprograms procedures functions program structuring facilities packages generics polymorphisms extends concept type functional abstractions exceptions separate compilation tasking rendezvous slide quick overview ada object oriented programming program libraries replaces ada flat structure hierarchy visibility control program extension without recompilation interfacing graphical user interface gui program call back tasking static monitor slide ada type system programmer defined types set values applicable set operations set properties accessible via attributes type definition type identifier type definition type binding variable type attributes name attribute identifier slide examples type day mon tue wed thu fri sat sun enumeration type today day tomorrow day current day day hours worked array day first day last integer today fri tomorrow day succ today current day day first day last loop end loop slide primitive scalar types discrete types enumeration types ii character type iii boolean types iv integer types real types fixed point types ii floating point types note integer real types together form numeric types integer predefined integer types system min int system max int operation arithmetic operations logical operations slide discrete types note characters boolean predefined enumeration types characters ascii characters b c booleans false true discrete types ordered false true discrete type values used indexing iteration loops attributes discrete types e g pos position number suit pos hearts val inverse pos suit val hearts succ pred first last slide real type floating point accuracy fixed relative error bound type weight digits values accuracy digits fixed point accuracy fixed relative error bound type voltage delta range values accuracy least fine attributes fx fixed point fx delta fx large fl floating point mantissa b digits fl digits fl mantissa fl emax fl small fl large fl epsilon slide derived type specific type constraints e g range constraints scalar examples subtype byte size integer range subtype caps character range z subtype identifier parent type range constraint object declaration x y constant integer range abs n identifier mutability type constraint init value range constraint tested runtime current input caps slide assignment statement x y types must match type name structure ada uses name equivalence type checking compile time type mismatch program considered illegal subtype constraints compatibility condition type x type y constraint checking run time violation raises constraint exception program illegal slide examples subtype natural integer range integer last integer b float c natural d integer range integer last b illegal integer b type conversion legal c legal d legal c integer b legal c d constraint exception c constraint exception slide arrays arrays ada fixed size type may unconstrained definition bounds must given object declaration elements subtype permits assignment equality testing slicing subtype natural integer range integer last type short string array character type string array natural range character name string slide array assignment assigning array b b legal type type b number elements b b copied positionally otherwise constraint error exception raised declare string b string begin b end array attributes slide array indexing slicing array indexing string array slicing d arrays array object concatenation opn array aggregates type sym tab array character range integer table sym tab c table c b table c b others slide records records ada heterogeneous components need type fields accessed component names e g car car make variant records tag discriminant fields cannot changed run time permits assignment equality testing type car make ford gm honda subtype car year integer range type car make car make year car year end record car car slide records contd records may nested initialized declaration record b may assigned record provided type b car b record aggregates car car car car gm make gm year slide variant records similar pascal variant records except type declaration defines template object declared discriminant value must supplied type vehicle tag car truck type vehicle tag vehicle tag record year model year case tag car colors color scheme truck axles natural end case end record truck vehicle truck refrigerator vehicle illegal may one discriminant must discrete types discriminant used uninitialized constraint type buffer length natural record pool string length end record slide access types allow manipulation pointers allow control object creation type string ptr access string type string ptr access string p q string ptr p string ptr p new string p new string constraint error p new string illegal p new string ok p bud q new string mud p q p q new creates new object designated access type slide recursive types type node incomplete declaration type node ptr access node type node record datum character next node ptr end record slide generalized access types inherent access declared objects objects created allocators type int ptr access integer ip int ptr aliased integer ip access note designated variable must marked aliased access attribute applicable object whose lifetime least access type avoids dangling reference problem type const int ptr access constant integer cip const int ptr c aliased constant integer cip c access access restricted read slide control structures assignment statements discrim b c table j table j vector conditional statements end case others null elsif end case else end slide control structures iteration clause iteration statements basic loop loop statements repeated end loop iteration clause execution basic loop terminates iteration completed loop exit statement executed sum sum loop reverse loop sum sum sum sum end loop end loop sum sum loop loop sum sum exit sum sum end loop end loop last slide complete ada program o package procedure temperature conversion use o package convert temp fahrenheit celsius fahrenheit temp celsius temp float begin get fahrenheit temp celsius temp fahrenheit temp put celsius temp end temperature conversion end lecture bud mishra thursday october
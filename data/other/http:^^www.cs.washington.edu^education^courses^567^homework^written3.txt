date mon dec gmt server ncsa content type text html cse homework assignment cse principles digital systems design carl ebeling fall homework distributed friday oct due monday oct class problems involving verilog code hand code simulation log least part really long synthesis problems hand printout circuit schematic generated generate kernels following expression using rectangle covering method f ace acg bce bcg ade adg bde bdg minimize following expression using multi level logic cost expression implemented directly gates gates inputs literals minimize circuit terms literals use rectangle method find interesting kernel cube divisors remember time factor function create new expression new rectangle covering table x adeg cdeg afg hi bdeg cfg bfg look two verilog implementations comparator projects lis cse verilog examples comparator simulate using verilog simulator verilog exe compare tb v trick use comparator verilog module construct min max circuit min max module two bit inputs b two bit outputs large small large larger b small smaller simulate circuit validate behavior use min max circuit implement sorting network sorts four numbers simulate validate behavior synthesize circuit expression problem using synopsys directions synthesis synopsys give circuit found synthesize bit comparator module compare v try different opimization settings including defaults best circuit come try synthesizing bit comparator using synopsys well guide results fiddling different timing cost constraints ebeling cs washington edu
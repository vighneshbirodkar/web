date tue nov gmt server ncsa content type text html last modified wed aug gmt content length lecture notes chapter data structures chapter data structures data structures common theme programming space vs time tradeoff space memory space time time execute program often possible write program executes fast wastes utilizes memory utilizes little memory executes quite slow data structures make memory useage efficient inefficient data structures discuss arrays stacks queues order arrays array implementation important assembly languages concept arrays array data structure might want built properties arrays element size char byte integer word elements stored contiguously first element stored smallest memory address whole trick assembly language allocate correct amount space array address tells location element memory thought array giant array bits bytes words picture needed element numbering starts element number address byte unique address byte addressing mips many machines sal access memory array access element byte memory m address refers element contents address m byte numbered address st byte memory important address m contents byte address m address refers element contents address m word byte address st th byte memory common byte addressibility address words word address defined byte address smallest byte also machines designed word addressibility words numbered unique addresses sal declarations arrays within memory allocate portion memory single variable worth allocating array within memory variablename type initvalue numelements type like byte word float numelements numbering always starts initvalue value given element array new directive name space numberofbytes space way allocating space bytes within memory give initial value note type data within space cannot inferred example arrayname byte character elements numbered initialized name space bytes memory example calculate address element byte character elements array array char pascal digit
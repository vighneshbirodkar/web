date mon nov gmt server ncsa content type text html last modified thu apr gmt content length cs section program program grading program due date wednesday grade final grade text covered chp problem description suppose ta cs introductory problem solving one credit pass fail course graded four programming assignments save time computing final grades class decide write computer program help data student class stored two files first file contains name id number student second file contains id number assignment scores student program read two files write table third results file showing student name id number average final grade typical file processing problem non interactive user type anything keyboard necessary input comes files already disk user also see results screen results file also written directly disk file processing programs difficult debug non interactive hard determine exactly error occurr assignment non trivial would strongly suggest starting soon possible student data file format name id number student stored single line student data file following format column data variable type name character id number character example clark kent gareth bestor created example student data file use test program called r public bestor cs students txt may want print file check program producing correct results assignment scores file format programming assignment scores student stored single line scores data file first item line student id number followed four real numbers one assignment following format column data variable type id number character assignment real assignment real assignment real assignment real example created example assignment scores file use called r public bestor cs scores txt may want print file also results file purpose program write table results file summarizing assignment scores final grades student note table printed screen table must show name id number assignment scores average final grade every student averages displayed rounded two decimal places may display information format like resulting table must neat columns lining everything appropriately labelled example name id number prog prog prog prog avg grade clark kent pass gareth bestor pass program design program first open results file write preliminary table headings open student data file read first student must open read assignment scores file one line time find scores student finding assignment scores compute average final pass fail grade final grade given fail avg finally write everything student results file appropriate columns finished processing first student read next student student data file process way continue processing students way reach end student data file notes search assignment scores file find scores particular student must first open file read first line id number line matches id number student looking found id number match ignore line read next one find one matches find match close scores file re open later search next student students listed student data file one corresponding line assignment scores file e always find match eventually know ahead time many students class e know length either file debugging help debug program print messages screen whenever anything significant happens example read student student data file print name id number also read line scores file print student id number whether matches one looking useful debugging technique help track bugs program crashes example read student clark kent read scores student read scores student found student computing average grade writing results file read student gareth bestor read scores student found student computing average grade writing results file demo program compiled version solution available reference called r public bestor cs program exe may copy solution directory run see sort debugging messages displayed results file look like encourage use solution check output program obviously use generate output hand run program confirm skeleton program skeleton file solution available get started called r public bestor cs program copy skeleton directory use basis writing program skeleton contains overall structure program lots comments indicating different sections program add appropriate statements spaces provided complete documentation skeleton intended give head start program show sort programming style aiming hand hand assignment online copying fortran source code file e g program compiled executable file e g program exe handin directory also hand printed copy fortran source code file results file screen output program run two example files gradesheet following gradesheet used grade assignment please take close look make sure everything required note graded correct output two files provided handing must run program files check program gives results solution correct output correctly display student name id number assignment scores average final grade correct debugging messages implementation correctly read student data file correctly read scores data file correctly write results file correct use else end statement correct use end loop correct use format statement meaningful variable names indenting neatness documentation program description variable definitions total copyright copy gareth bestor bestor cs wisc edu last modified april
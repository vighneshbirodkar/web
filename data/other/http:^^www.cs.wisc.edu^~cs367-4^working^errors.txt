date tue nov gmt server ncsa content type text html last modified fri sep gmt content length common c programming errors common c programming errors page list common c coding errors legal c code unexpected behavior suggestions list please send email skrentny cs wisc edu common errors ordered following categories c basics control structures basic data structures functions c basics case isn case isn case c case sensitive different capitalizations used make different identifiers convention follow uses allcaps constants initial cap type names lower case variable names typedef float case const case case case case case dividing division time operands division op integral types e integers operation becomes whole number division rather fractional division must change one operands using type casting real number e g float double get fractional division code displays int j float k j cout something true nothing false nonzero value means logical true whereas false g compiler provides bool type values true false booleans since supported preferred use type rather enumerated boolean type shown text integers simple example see bool cc use enumerated type include boolean h shown text may get compiler warning message ignored inner cities may inadvertent locals variables created defined destroyed fall scope many places variables defined unintentionally within code block limits variables scope int cout leading zeros confusing numbers least one leading zeros treated octal e base decimal e base code displays int j cout character values enclosed single quotes whereas strings enclosed double quotes terminated null character code give syntax error may control structures equal probably common error using assignment op rather equality op since assignment often legal equality comparison desired error may create syntax error ever use assignment equality would expected comment code say assignment intentional apples oranges oops intentional like equality comparisons logical logical must use appropriate symbol doubled space greatest greater great sequence comparisons e made compare two things time must join comparisons using logical conditions may look good evaluate false compounding problem single statement follows body control structures unless compound statements using statement block good practice always use apples oranges cout break break break statement must follow every case switch statement unless intend flow next case good practice even put break last case switch menu choice case intentional flow next case case add item accidental flow next case case d intentional flow next case case d delete item break good practice bodyless loop misplaced semicolon behead loop examples loops null body due extra semicolon compiler won complain scoping counters scoping rules loops changed new ansi rules generating many warning messages programs mix old new styles sometimes results syntax errors detail see code example recommend following eliminate problems loop counters used outside loop body defined outside loop int j j loop counters used inside loop body defined loop manner shown defines two local counters m n used inside loop int m n m using old style defining two loop counters may give syntax errors avoided notice second int vvv int m int n m basic data structures start indexing array indices always begin example creates array elements first index last index int error last index bounds nothing prevent indexing beyond bounds array except perhaps program may misbehave intermittently even crash unfortunately compiler doesn verify indices range programs compile bad indices j like element elements multidimensional arrays accessed j however j legal comma operator evaluates operand results value right hand operand means j j access element two dimensional array intended arrays unlike data types e g int char structs arrays default passed functions reference returned function using return statement classes end semicolon forget end class definitions semicolon class example functions mismatched arguments formal arguments listed function header prototype must match order number type mismatch may get syntax error compiler undefined symbol error linker additionally reference constant arguments must match arguing parentheses even function takes arguments must still include calling function well prototype function header leaving parentheses may cause syntax error function name refers function address example shows void display int main display oops doesn call function int display cout arrays cause troubles see copyright copy james d skrentny skrentny cs wisc edu
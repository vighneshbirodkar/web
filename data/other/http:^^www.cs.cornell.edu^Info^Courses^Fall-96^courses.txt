mime version server cern date sunday nov gmt content type text html content length last modified friday sep gmt cornell cs course home pages fall course home pages fall links home pages number cs courses fall many cases class notes problem sets course information available although may available registered members course course home pages courses taught previous semesters found using links bottom page cs introduction computer programming introduction elementary computer programming concepts emphasis techniques problem analysis development algorithms programs subject course programming particular programming language principal programming language c course presume previous programming experience programming assignments tested run interactive stand alone microcomputers standard version com college level mathematics assumed cs b introduction computer programming introduction elementary computer programming concepts emphasis techniques problem analysis development algorithms programs subject course programming particular programming language principal programming language c course presume previous programming experience programming assignments tested run interactive stand alone microcomputers alternative version com emphasizing examples applications involving continuous mathematics including trigonometry calculus cs computers programming intermediate programming high level language introduction computer science topics include program development proofs program correctness program structure recursion abstract data types object oriented programming data structures analysis algorithms java gofer principal programming languages cs structure interpretation computer programs introduction programming languages computer science topics covered include functional programming including recursive higher order functions object oriented programming analysis understanding algorithms correctness programs several substantial sized programming projects done using dylan dynamic object oriented programming language aim course expose students wide range interesting challenging concepts computing using programming tool cs discrete structures covers mathematical aspects programming computing topics chosen following mathematical induction logical proof propositional predicate calculus combinatorics discrete mathematics covering manipulation sums recurrence relations generating function techniques basic number theory sets functions relations partially ordered sets graphs cs introduction digital systems computer organization web course material includes course info lecture notes homeworks project info hopefully even lecture videos topics covered course include representation information machine assembly languages particular powerpc processor organization interrupts o memory hierarchies combinatorial sequential circuits data path control unit design rtl microprogramming cs programming languages software engineering introduction programming languages tools methods used modern software development programming methodologies modularity data abstraction object oriented programming programming tools software libraries interface definition languages general techniques complemented programming experience cs data structures lists trees graphs arrays forms data structure implementation relationship language data structure emphasizing abstract data types dynamic storage allocation memory management detailed study searching sorting methods analysis determine efficient algorithm given situation cs systems programming operating systems introduction logical design systems programs emphasis multiprogrammed operating systems topics include process synchronization deadlock memory management input output methods information sharing protection security file systems impact network distributed computing environments operating systems also discussed fast paced subject requiring constant attention cs foundations artificial intelligence challenging introduction major subareas current research directions artificial intelligence topics include knowledge representation search problem solving natural language processing vision robotics logic deduction planning machine learning cs automata computability theory introduction modern theory computing automata theory formal languages effective computability faster moving deeper version cs credit given corrective transfers cs cs encouraged first weeks instruction cs advanced database systems cs advanced database systems intended give students solid background design development database management systems dbms dbms one sense giant application program surprisingly many principles behind development use database research community also active always new problems addressed explosive amounts data people wish access course forms essential background anyone wants become systems engineer database development company b become informed user database systems c become database systems researcher d develop systems domain manipulate large amounts data e find teller machine really works number advanced fundamental dbms concepts covered although intended introductory course discussion various topics begin quick review basic material terms workload course involves two exams small survey paper c programming project see http www cs cornell edu info people praveen details cs advanced programming languages study programming paradigms functional imperative concurrent logic programming models programming languages including lambda calculus type systems polymorphism modules object oriented constructs program transformations programming logic applications programming methodology cs multimedia systems hardware software issues involved computer manipulation audio video images topics include media capture representation compression editing processing storage transportation special emphasis processing digital video including algorithms special effects automatic extraction content applications parallel architectures video processing cs analysis algorithms methodology developing efficient algorithms primarily graph theoretic problems understanding inherent complexity natural problems via polynomial time algorithms randomized algorithms np completeness randomized reducibilities additional topics parallel algorithms efficient data structures information previous semesters information previous semesters may retained surprised certain links work fall spring summer fall spring summer
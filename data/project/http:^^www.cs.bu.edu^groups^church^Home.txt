date wed nov gmt server ncsa content type text html last modified sun aug gmt church project functional programming language using intersection types church project functional programming language using intersection types church project boston based project designing implementing ml like functional programming language input language currently based rank intersection types typed intermediate language intersection union product sum recursive types overview language intersection types basis type system proposed functional language matter research limit adjust intersection types fit implementation needs polymorphism provided intersection types different universal quantifier polymorphism ml like languages typically use restriction latter particular restriction intersection types rank shown flexible enough provide elegant solutions several well known problems caused universal quantifier polymorphism ml like languages started implementation core language input uses type inference rank intersection types hope flexibility demonstrated add new features core language pointers resources seminar schedule technical reports bibliography project organization project organized weekly seminar design meetings implementation effort seminar implementation driven project members summarize research reports literature directly relevant implementation joe wells coordinates seminar compiler church language implemented standard ml new jersey computers boston university computer science department bob muller coordinates implementation sometimes seminar time used working meeting sometimes working meetings scheduled times project participation church project based boston active participants boston university boston college harvard university wellesley college new participants time work project attend seminar welcome information send e mail bob muller joe wells project name church project named memory alonzo church died month project began
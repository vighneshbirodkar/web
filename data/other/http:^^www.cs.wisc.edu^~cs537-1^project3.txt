date tue nov gmt server ncsa content type text html last modified thu oct gmt content length cs programming assignment iii cs programming assignment iii cpu scheduling due october start class contents introduction running simulator system overview program modification files coding experiments report grading handing introduction program written simulates short term scheduler allows experiment various scheduling policies assignment measure analyze performance several policies modifying simulation program necessary running simulator current version program simulates round robin rr scheduling constructed allow easy modification scheduling policies program expects following command line java proj v data file quantum proj name main class v vv etc starts verbose mode debugging verbose mode causes simulator print debugging output screen v command line greater verbosity starts trace mode trace mode causes simulator maintain record significant events data file name file containing trace data used simulation quantum length time slice used round robin scheduling system overview simulator essentially consists jobs devices schedulers coordinated single loop code job customer services process needs use system resources execution device represents resource system simulation devices available job cpu disk also clock device pseudo device interrupts whenever new job arrives system scheduler coordinates access device queues jobs waiting use device choose job next access overall execution simulator occurs like jobs arrive jobarrival device entered system job lifetime consists alternating periods using cpu called burst performing o main loop responsible moving jobs around system sends scheduler takes next job scheduler starts stops jobs running device disk scheduler cpu scheduler decide job next run respective devices also buffer jobs waiting run yet given access clock device used enable preemption later would like detailed description system necessary assignment either read comments code click program modification project going focusing almost exclusively cpu scheduler object shown provided simulator performs round robin rr scheduling create separate versions simulator implement cpu scheduling algorithms described modify one copy program simulate shortest job first sjf algorithm described section text next process run one smallest burst use fcfs break ties simulation cheat looking burst length process deciding process run next real system information available scheduler policy non preemptive newly arriving processes affect currently running process modify another copy program implement preemptive version sjf called shortest remaining time first srtf algorithm currently running process one least time left current burst final version program modify sjf algorithm use predicted burst length call policy predicted shortest job first psjf predict burst length using exponential average measured lengths previous cpu bursts formula follows tn atn tn predicted burst length past measurement actual burst length formula says predicted value next burst length tn dependent upon last measured burst length tn last predicted burst length tn weight previous two measurements calculating new prediction contained contribute equally last measured burst time used predict next burst time experiment different values section implement psjf modify job class record little information four versions simulation program finished original rr one sjf one srtf one psjf files files need found cs public src include files simulator data file makefile copy files one directories type make run round robin version simulator coding easiest way attack assignment modify copy provided round robin scheduler cp rrscheduler java sjfscheduler java forget change occurrences rrscheduler sjfscheduler copy makefile also change following line file sim java scheduler used simulator instead default sim java cpuscheduler new rrscheduler becomes cpuscheduler new sjfscheduler methods rrscheduler modify assignment include boolean add job timeleft adds new job wanting service second parameter amount cpu time remaining job currently using cpu next o finish cpu currently idle method return true scheduler would like preempt current job job remove returns job scheduler would like run next removes queue boolean reschedule int timeleft returns true reason stop current process start another called mainloop clock interrupt essential implementing preemption returns true mainloop take current running process cpu return cpu queue calling add ask another job run calling remove add timeleft parameter amount cpu time remaining current burst currently running job job running may also need look job class one useful job method int nextburst returns burst time remaining experiments compare performance four scheduling algorithms also compare performance various values parameters quantum rr psjf note quantum large rr becomes first come first served fcfs quantum rr approximates processor sharing ps compare behavior performance policies discover strengths weaknesses compare performance results observe predictions discussed class book must supply quantitative data support conclusions approach portion assignment would approach laboratory assignment physics course use scientific method hypotheses confirm reject based behaviors observed well planned organized experimentation give careful thought correct choice parameters programs try trial runs various parameters print results go home think results preliminary results help decide better parameters second round trials remember quantity quality data dictates quality experiments program printing statistics would like see feel free modify produce better output may find additional statistics reporting code help explain behavior observe report prepare report describing results experiments approach report would approach physics laboratory experiment report carefully describe experiments results showed different scheduling policies want see correlation experiments run conclusions draw must supply quantitative data support conclusions report three typewritten pages excluding tables graphs etc grading grade determined follows report experiments conclusions presentation implementation correctness style documentation must work two person groups project handing bring report java files modified additions clearly detailed code separate file class day project due also create four directories hand folder one scheduler versions directory place copy files needed run particular scheduler java files trace file well redirected copy output one execution short readme file containing names partner placed hand folder hand directories project found cs public handin project always points deducted code fails satisfy minimal criteria comments structure specified hand directions project copyright marvin solomon rights reserved
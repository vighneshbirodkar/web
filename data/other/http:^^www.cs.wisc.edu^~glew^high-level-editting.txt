date tue nov gmt server ncsa content type text html last modified thu sep gmt content length glew high level editting glew high level editting long time interest higher level editting operations normal programming languages hardware design hdls e g mit programmer apprentice web page serve achor thoughts issue particular record scenarios could apply semantic split common operation involves spliting variable parameter e g need edit gnu emacs dynamic abbreviations package provide completion end line instead end word unfortunately package presently single variable abbreviationregexp using two different contexts dtermine symbol looking determine expansion need split regexp control capabilities separately unfortunately way without creating complete copy call tree several dozen functions course create copy changes original propagate copy unless succeed subverting original implementation reimplement terms refined split semantics recursive parameter application noticed possible hleo high level editting operation maintaining getnumber package package relies recursion provide context sensitive number parser accepts numeric formats recognizer limited knowledge syntax recurses top level recognizer handle variants thus obtaining modularity easy extensibility initially calling tree looked bit like dgetnumber dgetnumberlist numeric formats like decimal terminal calls recursion expression formats like recurses dgetnumber address sets toplevelrecognizer dgetnumber address calls dgetnumberlist dgetnumber sets toplevelrecognizer dgetnumber calls dgetnumberlist dgetnumberlist toplevelrecognizer dgetnumber f toplevelrecognizer numeric formats like decimal terminal calls recursion f toplevelrecognizer expression formats like recurses toplevelrecognizer either dgetnumber depending usage handle subcomponents expression operator recognized therefore high level editting operation calling tree take instances explicitly named operation value x make refer parameter passed along paths calling tree similarly reverse operation may occasionally useful interactive query framework would help well completed edit hand took six hours complicated fact semantic split type needed done incomplete type checking function parameters c compiler using emphasizes point something asa simple describe took excessively long time attention detail could automated hidden recursive parameters specific example arose wanted pass hidden state useful one lower functions calling tree appropriate make extra info explicit parameter information interest upper level function set lower level function receives none intervening levels functions care passed e want transparently communicate something two different levels calling hierarchy without affecting minimally affecting intermediate layers typical naive solution global variable mp safe best solution pass hidden information parameter intermediate levels addition creating parameter also need create data types hide passed furthermore quite likely need multiple different instances communication desirable create generic data hiding mechanism call tree message passing mechanism handle several messages transparently functions calling tree might generic parameter callingtreemessagelist would composite object e g list messages source destination addresses etc high level routine might something like call generic call tree placing message specialized subfunction variety receiver might need extra info standard call parameters scan callingtreemessagelist see header u g l glew public html rcs high level editting html v glew exp
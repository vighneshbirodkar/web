date tue nov gmt server ncsa content type text html last modified thu oct gmt content length computer sciences courses computer sciences courses general information courses courses numbered may taken undergraduate credit courses numbered may taken either undergraduate graduate students courses numbered intended graduate students undergraduates allowed take courses numbered permission obtained dean office courses offered less every two years marked infrequently offered students count taking classes planning schedules tentative timetables upcoming semesters available world wide web pages current semester offerings many computer sciences courses available additional information many cross listed courses found via college engineering department mathematics www home pages introduction computer programming cr course designed give engineering students introduction computer programming language fortran c cover elementary concepts variable type control structures loops arrays prereq advanced high school mathematics open fr using computers cr introduction use computers programs basic emphasis productivity tools word processing spreadsheets graphics telecommunications consideration societal impacts computers intended computer sciences majors prereq minimum mathematical competency two years high school math open fr algebraic language programming cr construction algorithms problem solving instruction experience use least one procedure oriented language e g pascal fortran survey languages advanced programming techniques prereq advanced high school mathematical preparation college work mathematics statistics logic consent instructor open fr problem solving using computers cr gives engineering students introduction computer analytical skills use subsequent course work professional development discusses several methods using computers solve problems including elementary fortran c programming techniques use spreadsheets symbolic manipulation languages software packages techniques illustrated using sample problems drawn elementary engineering emphasis introduction algorithms use specific tools illustrate methods prereq math elementary knowledge fortran c pascal digital systems fundamentals cr also ece logic components boolean algebra combinational logic analysis synthesis synchronous asynchronous sequential logic analysis design digital subsystems computer organization design prereq cs equivalent open students egr classification machine organization basic systems cr also ece introduction current system structures control communication memories processors o devices projects involve detailed study use specific small computer hardware software system prereq cs consent instructor open fr introduction database management systems cr design use application database management systems role database management system corporate decision making tool entity relationship relational data models database design file structures data independence integrity privacy security application development role database administrator students use several database management systems students may receive credit cs prereq cs consent instructor introduction data structures cr study data structures specification application implementation stacks queues trees important structures application garbage collection dynamic storage allocation sorting searching symbol tables arithmetic expressions emphasis development analysis efficient algorithms including use structured programming methodology prereq cs pascal equivalent technology computer based business systems cr also bus overview computers attendant technology implications technology large scale computer based information systems topics include hardware system software program development files data communications prereq bus cs equivalent experience consent instructor introduction numerical methods cr interpolation solution linear nonlinear systems equations approximate integration differentiation numerical solution ordinary differential equations prereq math cs equivalent knowledge matrix algebra introduction combinatorial optimization cr also math ie exact heuristic methods key combinatorial optimization problems shortest path maximum flow problems traveling salesman problem techniques include problem specific methods general approaches branch bound genetic algorithms simulated annealing neural networks prereq math cs consent instructor computer graphics cr also ece principles computational geometry computer graphics application homogeneous coordinates projective geometry d curve surface representations data structures geometric databases wire frame solid geometric representations graphic o device characteristics cost considerations programming exercises projects based applications prereq cs math consent instructor artificial intelligence programming languages tools cr symbolic computation lisp programming prolog programming knowledge representation languages based logic objects frames rules symbolic pattern matching automatic inferencing reasoning techniques special purpose languages computer architectures artificial intelligence applications prereq cs infrequently offered introduction combinatorics cr also math stat problems enumeration distribution arrangement inclusion exclusion principle generating functions linear recurrence relations combinatorial identities graph coloring problems finite designs systems distinct representatives matching problems graphs potential applications social biological physical sciences puzzles emphasis problem solving prereq math consent instructor mathematics computer science cr program correctness termination invariants pre post conditions axiomatic semantics representing time space requirements programs summations recurrences generating functions exact asymptotic solutions analysis algorithms sorting searching data structure traversal prereq cs math consent instructor infrequently offered numerical linear algebra cr also math direct iterative solution linear nonlinear systems eigenproblems lu symmetric lu factorization complexity stability conditioning nonlinear systems iterative methods linear systems qr factorization least squares eigenproblems local global methods prereq math equivalent cs equivalent numerical analysis cr also math polynomial forms divided differences polynomial interpolation polynomial approximation uniform approximation chebyshev polynomials least squares approximation orthogonal polynomials splines b splines spline approximation numerical differentiation integration numerical methods solving initial boundary value problems ordinary differential equations prereq math equivalent cs equivalent introduction theoretical computer science cr survey basic concepts theory including context free context sensitive languages regular sets finite pushdown automata turing machines undecidable problems complexity respect time space np completeness reducibilities prereq cs math consent instructor linear programming methods cr also ie math stat real linear algebra polyhedral cones theorems alternative matrices formulation linear programs duality theory solvability simplex method related methods efficient computer solution perturbation sensitivity analysis applications extensions game theory linear economic models quadratic programming prereq math consent instructor advanced linear programming cr ugrad cr grad also ie review linear programming polynomial time methods linear programming quadratic programs linear complementarity problems related solution techniques solution sets continuity properties error bounds linear inequalities programs parallel algorithms linear quadratic programs prereq cs equivalent cs equivalent consent instructor infrequently offered theory applications pattern recognition cr also ece pattern recognition systems components decision theories classification discriminant functions supervised unsupervised training clustering feature extraction dimensional reduction sequential hierarchical classification applications training feature extraction decision rules engineering problems prereq ece math consent instructor image processing cr also ece mathematical representation continuous digital images models image degradation picture enhancement restoration segmentation coding pattern recognition tomography prereq ece consent instructor introduction programming languages compilers cr ugrad cr grad introduction theory practice compiler design comparison features several programming languages implications implementation techniques several programming projects required prereq cs either cs introduction operating systems cr ugrad cr grad input output hardware interrupt handling properties magnetic tapes discs drums associative memories virtual address translation techniques batch processing time sharing real time systems scheduling resource allocation modular software systems performance measurement system evaluation prereq cs introduction theory design programming languages cr design theory programming languages procedural object oriented functional logic paradigms serial concurrent programming execution models formal specification techniques prereq cs introduction artificial intelligence cr ugrad cr grad principles knowledge based search techniques automatic deduction knowledge representation using predicate logic semantic networks connectionist networks frames rules applications problem solving expert systems game playing vision natural language understanding learning robotics lisp programming prereq cs natural language computer cr course covers basic techniques tools natural language processing generative grammars parsing dictionary construction semantic networks generation text knowledge base natural language interfaces machine translation prereq cs consent instructor computer systems modeling fundamentals cr introduction basic tools applications modeling analysis computer systems fundamentals network flow graphs graph models computation stochastic models computer system performance network delay analysis capacity planning reachability analysis deadlock detection distributed systems markov chains elementary queueing theory basic concepts queueing network models associated analyses prereq math cs computers society cr also social studies effect scientific technological change social economic organization historical examples comparison examples computer effect consideration possible uses computer systems social change would influence choices present prereq junior standing infrequently offered introduction computer architecture cr design computer systems components processor design instruction set design addressing control structures microprogramming memory management caches memory hierarchies interrupts o structures prereq ece cs cs ece co req cs introduction computational geometry cr also ie introduction fundamental geometric computations algorithms use solving engineering scientific problems computer representations simple geometric objects paradigms algorithm design applications areas engineering analysis design manufacturing biology statistics sciences prereq cs equivalent math equivalent consent instructor expert systems design implementation cr design expert knowledge bases choice appropriate representation knowledge base structure connection databases knowledge acquisition possible knowledge sources logical analysis formalization consistency adequate checking inference engine construction tailoring choice control inferencing strategies handling uncertain knowledge achieving efficiency display dialog design implementation explanation capabilities evaluation knowledge engineering environments languages prereq cs infrequently offered database management systems design implementation cr ugrad cr grad database management system different data models currently used structure logical view database relational hierarchical network hands experience relational network based database systems implementation techniques database systems file organization query processing concurrency control rollback recovery integrity consistency view implementation prereq cs introduction algorithms cr survey important useful algorithms sorting searching pattern matching graph manipulation geometry cryptography paradigms algorithm design techniques efficient implementation prereq cs math consent instructor undergraduate topics computing cr prereq consent instructor introduction computer networks cr architecture components computer communications networks protocol concepts standards osi reference model network protocol architecture examples internet iso ccitt sna decnet public data networks local area networks gateways internetworking transport application protocols prereq cs senior honors thesis cr per sem prereq honors candidacy consent instructor senior thesis cr per sem year course must taken get credit prereq consent instructor directed study cr prereq junior senior standing consent instructor programming languages compilers cr design implementation compilers modern programming languages emphasis tools compiler construction prereq cs compiler construction cr techniques implementation compilers sophisticated programming languages prereq cs co req cs consent instructor infrequently offered advanced topics programming languages compilers cr advanced topics compiling programming languages design advanced parsing techniques automatic syntactic error correction local global code optimization attribute grammars programming language design issues data control abstractions specification verification high level languages prereq cs principles programming languages cr introduction principles advanced programming languages programming language theory topics include lambda calculus functional languages polymorphic functions type inference structural induction lazy evaluation operational semantics denotational semantics axiomatic semantics prereq cs consent instructor mathematical techniques analysis algorithms cr techniques quantitative analysis algorithms charging arguments amortization probabilistic methods adversary information lower bounds use methods combinatorics complex analysis asymptotics obtaining precise analyses quicksort chained hashing algorithms prereq cs knowledge complex variables level math infrequently offered finite difference methods cr development finite difference methods initial boundary value problems hyperbolic parabolic elliptic partial differential equations analysis accuracy stability difference schemes direct iterative methods solving elliptic difference schemes applications science engineering prereq cs math equivalent consent instructor numerical analysis differential equations cr analysis numerical methods ordinary differential equations single step multistep methods stiff equations introduction galerkin methods collocation least squares etc analysis methods solution large sparse systems boundary value problems prereq graduate standing consent instructor numerical functional analysis cr per sem also math fundamentals normed spaces linear operators analysis nonlinear operators existence iterative methods solutions linear nonlinear operator equations error estimation variational theory minimization problems monotonicity theory development abstract tools application general analysis numerical methods problems differential integral equations prereq cs math consent instructor cs infrequently offered network flows cr also ie optimization problems techniques networks including single multi commodity network flow critical path facilities location problems theory totally unimodular matrices relationship network optimization prereq cs consent instructor integer programming cr also ie formulation integer programming problems characterization optimization problems representable integer mixed integer programs degree difficulty classes integer programs relation structure feasible sets optimality conditions branch bound cutting plane decomposition methods obtaining solutions approximating solutions prereq cs consent instructor dynamic programming associated topics cr also ie generalized optimization model discrete continuous state spaces deterministic stochastic transition functions multistage decision processes functional equations successive approximation function policy spaces relationship linear programming acyclic networks markovian decision processes solution methods computational problems associated topics applications calculus variations feedback control processes optimal trajectories inventory maintenance policies stopping rules prereq cs ie math cs math computer programming consent instructor infrequently offered nonlinear programming theory applications cr also ie stat separation theorems properties convex sets finite dimensional spaces formulation nonlinear programming problems saddle point lagrangian optimality criteria convex nonlinear programs duality theorems convex programs first second order kuhn tucker stationary point theory differentiable non convex programs perturbation sensitivity analysis applications extensions prereq familiarity basic mathematical analysis e g math either math consent instructor advanced nonlinear programming cr also ie conjugate convex functions fenchel rockafellar duality monotone operators subdifferentials advanced methods nonconvex problems variational principles generalized gradients degree index arguments multivalued ordinary differential equations applications economics operations research prereq cs consent instructor nonlinear programming algorithms cr also ie rigorous description convergence proofs various nonlinear programming algorithms emphasis algorithms important proved converge practical unification classes algorithms convergence rates student code test one algorithms described course prereq consent instructor advanced artificial intelligence cr learning hypothesis formation knowledge acquisition deductive inductive inference systems reasoning techniques involving time nonmonotonic reasoning spatial reasoning truth maintenance systems planning strategies prereq cs infrequently offered topics artificial intelligence cr advanced topics artificial intelligence variable content course may repeated number times credit prereq consent instructor infrequently offered computational methods large sparse systems cr also math ece sparse matrices engineering science sparsity preservation numerical error control transversal algorithms tarjan algorithm tinney algorithms minimum degree banding nested dissection frontal methods linear nonlinear equation solving compensation sparse vector methods iterative methods ode pde applications prereq cs consent instructor advanced operating systems cr advanced topics operating systems including process communication resource allocation multiprocess network operating systems kernel philosophies fault tolerant systems virtual machines high level language systems verifiability proof techniques prereq cs consent instructor computer system performance evaluation modeling cr statistical techniques computer system performance evaluation measurement system selection tuning strategies deterministic probabilistic models process scheduling resource allocation analytic simulation models computer systems systematic study system architectures prereq math cs consent instructor distributed systems cr basic concepts distributed programming distributed file systems atomic actions fault tolerance transactions program data replication recovery distributed machine architectures security authentication load balancing process migration distributed debugging distributed performance measurement distributed simulation techniques distributed applications correctness considerations proof systems prereq cs consent instructor infrequently offered advanced computer networks cr advanced topics computer communications networks congestion flow control routing rate based protocols high speed interfaces technologies metropolitan area networks fast packet switching technologies advanced applications network services name service authentication resource location prereq cs advanced computer systems analysis techniques cr advanced analytical modeling techniques performance analysis computer systems including discrete parameter embedded markov chains m g queues stochastic petri nets queueing networks renewal theory sample path analysis application areas include high performance computer architectures databases operating system resource allocation policies prereq cs consent instructor real time computing systems cr also ece introduction unique issues design analysis computer systems real time applications hardware software support guaranteeing timeliness without failures resource management time constrained communication scheduling imprecise computations real time kernels case studies prereq cs consent instructor advanced computer architecture cr also ece advanced techniques computer design parallel processing pipelining multiprocessors multi computers networks high performance machines special purpose processors data flow architecture prereq ece cs cs vlsi systems design cr also ece overview mos devices circuits introduction integrated circuit fabrication topological design data flow control interactive graphics layout circuit simulation system timing organizational architectural considerations alternative implementation approaches design project prereq ece ece cs cs ece consent instructor computer aided design vlsi cr also ece broad introduction computer aided design tools vlsi emphasizing implementation algorithms data structures topics covered design styles layout editors symbolic compaction module generators placement routing automatic synthesis design rule checking circuit extraction simulation verification prereq cs good programming skills cs cs strongly recommended infrequently offered advanced computer architecture cr also ece parallel algorithms principles parallelism detection vectorizing compilers interconnection networks simd mimd machines processor synchronization data coherence multis dataflow machines special purpose processors prereq cs consent instructor machine learning cr computational approaches learning including inductive inference explanation based learning analogical learning connectionism formal models means learn algorithms learning comparison evaluation learning algorithms cognitive modeling relevant psychological results prereq cs deduction problem solving computer cr study evaluation programs use automated deduction solve problems variants prolog constraint logic programming parallel prologs deductive database systems resolution theorem provers verification systems boyer moore prover prereq cs deduction problem solving computer cr critical study evaluation programs man computer interactive systems play games chess bridge go solve problems puzzles prove theorems various mathematical domains different kinds languages including natural language usable problem formulation solution planning testing prereq cs consent instructor infrequently offered topics database management systems cr implementation database management systems impact new technology database management systems back end database computers distributed database management systems concurrency control query execution distributed centralized systems implementation multiple user views roll back recovery mechanisms database translation prereq cs consent instructor perceptual recognition cr high level perceptual processing computer recognition complex objects scenes advanced computer vision systems relation living visual system algorithm structured multi computer architectures perception binocular multi modal vision recognition tracking moving objects learning perceptual systems perceptual motor control robots prereq cs consent instructor infrequently offered computer vision cr fundamentals image analysis computer vision image acquisition geometry image enhancement recovery physical scene characteristics shape techniques segmentation perceptual organization representation description two dimensional three dimensional objects shape analysis texture analysis goal directed model based systems parallel algorithms special purpose architectures prereq cs graph theory cr theory graphs including adjacency incidence matrices planarity hamiltonian circuits euler formula directed graphs trees efficiency known algorithms performing various operations graphs prereq cs either cs consent instructor infrequently offered computational linguistics cr also ling tools techniques literature computational linguistics applications artificial intelligence cognitive science topics include syntactic semantic parsing natural language understanding text generation machine translation speech recognition production prereq cs linguistics consent instructor problems computational linguistics cr per sem also ling current research computational linguistics coupled original directed research prereq cs consent instructor infrequently offered robot motion planning cr also ece unified view geometric algorithmic computational issues automatic motion planning motion mobile robots arm manipulators complex environment planning complete information configuration space connectivity graphs computational complexity partial information algorithm convergence topological issues effect system kinematics relation sensing media algorithm efficiency prereq math equivalent consent instructor data models languages cr study database programming languages topics include logic based languages embedded query languages object oriented languages coverage types persistence inheritance object identity data models implementation issues case studies actual systems languages prereq cs consent instructor advanced algorithms data structures cr algorithms graph manipulation geometry matrix multiplication string processing information retrieval etc mathematical models analyses lower bounds probabilistic distributed parallel algorithms advanced data structures prereq cs master thesis cr students writing master thesis project prereq master candidate master research cr pre master students research projects prereq master candidate models formalisms computation cr models computation turing machines recursive functions church thesis undecidable problems degrees unsolvability denotational semantics logic programs applications automata formal languages program verification programming languages complexity prereq cs arithmetic algorithms cr design implementation analysis algorithms exact arithmetic arbitrarily large integers gaussian integers rational numbers algorithms modular arithmetic internal arithmetic algorithms integer greatest common divisor calculation factorization classical modern algorithms prereq math cs consent instructor infrequently offered algebraic algorithms cr per sem also math algorithms arithmetic operations multivariate polynomials integral rational finite field coefficients polynomials remainder sequences subresultants algorithms multivariate polynomial resultant greatest common divisor calculation arithmetic operations multivariate rational functions algorithms exact linear algebra systems polynomial coefficients exact calculation real complex zeros polynomials algorithms factorization polynomials irreducibles calculations real algebraic numbers quantifier elimination real closed fields operations formal power series prereq cs math consent instructor infrequently offered transcendental function algorithms cr also math formalism function class representations canonical normal forms diophantine sets relation recursively enumerable sets richardson theorem lindemann theorems canonical normal form algorithms fundamental operations polynomials rational functions gaussian integer coefficients fundamental operations various subclasses elementary transcendental functions indefinite integration rational functions differential fields liouville integration theory risch integration algorithm prereq cs consent instructor infrequently offered theory automata formal languages cr advanced treatment results concerning finite automata regular sets context free context sensitive languages turing machines extensions models multi head multi tape probabilistic machines comparison models applications programming language design prereq cs abstract concrete complexity theory cr study computation limited resources time space etc complexity hierarchies structure p np pspace co np strong np completeness isomorphism completeness relativized complexity abstract complexity probabilistic complexity lower bounds time space tradeoffs pebbling alternation prereq cs infrequently offered topics numerical analysis cr also math topic selected advanced areas variable content course may repeated number times credit prereq consent instructor infrequently offered topics computing cr topics selected advanced areas variable content course may repeated number times credit prereq consent instructor infrequently offered topics theoretical computer science cr advanced topics algorithms complexity models computation discussed seminar format exact topic varies prereq consent instructor infrequently offered numerical methods ordinary differential equations cr per sem also math initial value problems boundary value problems systems nonlinear ordinary differential equations convergence stability computational procedures topics chosen design general computer programs variational problems prereq cs math consent instructor infrequently offered numerical methods partial differential equations cr per sem also math initial value problems systems partial differential equations boundary value problems stability convergence iterative methods applications classical problems mathematical physics prereq cs consent instructor infrequently offered matrix theory numerical analysis cr also math methods determining exclusion inclusion regions eigenvalues nxn matrix variational methods eigenvalues qr lr algorithms perron frobenius theory positive matrices error analysis numerical methods computations linear algebra prereq cs consent instructor infrequently offered approximation theory cr also math interpolation approximation means interpolation uniform approximation best approximation approximation normed linear spaces spline functions orthogonal polynomials degree approximation computational procedures prereq consent instructor pre dissertator research cr prereq post master pre dissertator status dissertation cr prereq dissertator status independent study research cr prereq dissertator status non credit seminars nine research areas department run advanced non credit seminar graduate students visitors faculty members within outside department present latest research discuss recently published papers seminars give graduate students opportunity learn current research problems get valuable feedback research also fall department runs distinguished lecturer series leading researchers subfield computer science visit visitors give two lectures one general computer science audience second specialized talk targeted toward researchers given subfield recent topics programming languages computing theory operating systems machine learning page automatically created send comments ferris cs wisc edu
date mon nov gmt server ncsa content type text html last modified tue feb gmt content length cs problem set university wisconsin madison computer sciences department cs spring bart miller problem set problem hired wisconsin department transportation computerize traffic control way intersection pictured east west street one way westbound north south street two way rules intersection car process arriving intersection call procedure enter indir outdir indir outdir parameters whose value one defined constants north south east west parameter indir direction enter intersection outdir direction leave intersection procedure returns safe proceed intersection leaving intersection car process must call procedure leave outdir outdir defined cars proceed straight make legal turns u turns illegal cars waiting north east directions proceed time safely cars waiting north east directions cannot safely proceed time must alternate prevents starvation east west street single lane north south street two lanes one either direction write code enter leave procedures assume supplied already written procedure called drivethroughtheintersection idea long procedure takes execute write three versions program three programs use c first program written using semaphores synchronization mechanism assume car process define global variables including semaphores used initialized write code cars use second program written using monitors use c monitor classes done lecture assume car process first describe monitor used cars monitor describe data maintained monitor initial values also describe procedures within monitor used synchronization last describe code cars use call monitors etc properly synchronized procedures enter leave probably monitor else rule difficult obey enter leave probably call procedures within monitor monitors third program written using messages assume processes communicating via messages processes shared memory mail box unique name character string like bart hithere three communications primitives send receive createmailbox send operation looks like send const char mailboxname const char contents mailboxname string naming destination mail box might want use names waitqueue trafficcop contents anything want send message send operation block assume error cases like unknown mail box handled send know message queued mail box receive operation looks like receive const char mailboxname char contents mailboxname string naming mail box receive operation blocks message gets delivered message already available message arrives receiver blocked receive returns receive returns contents gets filled contents sent message create operation looks like createmailbox const char mailboxname mailboxname string naming newly created mail box mail box names must unique design code executed process first two programs assume car process may also create extra processes find useful problem given system binary semaphores declare variables class binsem perform constructor binp binv methods variables using binary semaphores implement general semaphores system define new class called gensem write code constructor genp genv methods problem important aspect multiprocessing using multiple processes concurrently compute single problem mind write c program uses four processes multiply two matrices b store result matrix c heart program procedure called matrixmult row column multiples row row times column column b stores c row column assume matrices memory global processes synchronization mechanisms primitives need solution last modified fri feb cst bart
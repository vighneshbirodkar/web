date wed jan gmt server ncsa content type text html smalltalk quiz sample solution many questions number reasonable solutions ve tried pick ones clean somewhat efficient overly tricky haven actually typed code tried run apologize advance typos max anumber self anumber iftrue self iffalse anumber b isbigger acollection self size acollection size c isnumeric self elem elem isnumber iffalse false true d numoccurances anobject counter counter self elem elem anobject iftrue counter counter counter e sumsquares acollection sum sum self isnumeric iffalse self error non numeric collection self elem sum sum elem elem sum looking discussion clearly articulated two main points one copy class variable shared instances class instance class gets private copy instance variable distinction shared non shared variables big idea secondary idea class variables accessible may read written class instance methods instance variables accessed instance methods thus limited visibility b account instance methods serviceaccount self subclassresponsibility checkingaccount instance methods serviceaccount self assessservicecharge savingsaccount instance methods serviceaccount self payinterest collection instance methods serviceaccounts self acct acct serviceaccount c showdifference returns instance variables class variable b someclass new b someclass new access b access implement add used approach based double dispatching kind thing usually actually done smalltalk standard library number solutions perfectly fine based sending isnumber isinteger iscomplex message argument add class defintion number subclass complexnumber instancevariablename real imaginary classvariablename category magnitude numbers complex number class methods new self real imaginary real anumber imaginary anothernumber super new real anumber imaginary anothernumber complex number instance methods real anumber imaginary anothernumber real anumber imaginary anothernumber self real real imaginary imaginary add anumber anumber addwithcomplex self addwithcomplex acomplexnumber first version add method looked like r r self real acomplexnumber real self imaginary acomplexnumber imaginary self class real r imaginary multiply acomplexnumber really d double dispatching r r self real acomplexnumber real self imaginary acomplexnumber imaginary self real acomplexnumber imaginary self imaginary acomplexnumber real self class real r imaginary number instance methods addwithcomplex acomplexnumber complexnumber real self imaginary add acomplexnumber cse webmaster cs washington edu
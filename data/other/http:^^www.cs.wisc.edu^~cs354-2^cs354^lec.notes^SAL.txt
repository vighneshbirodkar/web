date tue nov gmt server ncsa content type text html last modified fri aug gmt content length lecture notes chapter sal chapter sal sal motivation sal hiding details mal mips asm lang purpose sal code look like hll code make student transition easier introducing one level abstraction order postpone discussion several topics hll sal assembly machine code hll statement maps sal instructions sal instruction maps mal instructions course actually one layer students given hll sal mal tal mips risc machine code sal subset functionality high level languages records structures formal arrays see chapter implementation required programming language declarations arithmetic operations conditional execution else looping control structures communication w user write statement sal one instruction declaration per line comments anything line following comments may span lines declarations give information much memory space needed assign name memory space sal basic types integer float real character build types example boolean really integer defined values pascal var variablename type c type variablename sal variablename type value type word integer byte character float real floating point value optional gives variable initial value examples flag word counter word variable word e float uservalue byte letter byte useful rules one declaration per line default initial value directives way give information assembler directives start period examples byte word float data identifies start declaration section data section program text identifies instructions text section program asciiz string n places string memory null terminates string ascii new string places string memory without null termination arithmetic operations sal pascal c move x y x y x y add x y z x y z x y z sub x y z x y z x y z mul x y z x y z x y z div x y z x y div z x y z rem x y z x y mod z x y z notes operation result depends type variables cannot increase number operands y z immediates examples move count mult product mult mult add sum addend note instructions implement boolean functions cover yet conditional execution sometimes instruction set instructions executed sometimes shouldn hll simplest form go always discouraged pascal else conditional go condition statement else statement c else condition statement else statement sal ifs gotos sal pascal b label goto label bltz x label x goto label blez x label x goto label beqz x label x goto label bnez x label x goto label beq x y label x y goto label bne x y label x y goto label blt x y label x y goto label ble x y label x y goto label example pascal else count begin mod count count count end bad style pascal count count count sal blez count endwhile rem count sub count count b endwhile next program instruction goes repeat loop example pascal statement expression true repeat b b c statement expression true expression false exit loop b b sal repeat bge b secondif add secondif ble b sub bne repeat loop example pascal count
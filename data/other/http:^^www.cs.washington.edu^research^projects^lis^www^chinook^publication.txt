date tue dec gmt server ncsa content type text html chinook paper list chinook paper list abstracts chinook overview cob pai chou ross b ortega gaetano borriello chinook hardware software co synthesis system international symposium system synthesis cannes france september also appears uw cse tech report embedded systems becoming commonplace designed larger numbers designers ever tighter constraints design time unfortunately computer aided design tools embedded systems kept pace trends still fundamentally identical used twenty years ago chinook co synthesis system development university washington addresses automation time consuming error prone tasks embedded controller design namely synthesis interface hardware software needed integrate system components migration functions processors custom logic co simulation system specifications synthesis paper describe principal elements chinook system discuss application variety embedded designs bco gaetano borriello pai chou ross b ortega embedded system co design towards portability rapid integration hardware software co design m g sami g de micheli eds kluwer aacademic publishers ever increasing performance capacity microprocessors programmable logic devices digital systems designed embedded systems designing systems requires skills software hardware engineers frequently due interface two groups design options fully explored unfortunately embedded system design tools support separation design responsibilities design data thereby exacerbating problem principal issues design process require attention proper evaluation design tradeoffs portability design specifications integration system components rapid prototyping resulting design chapter discuss approach issues believe lead new generation embedded system design tools permit designers fully explore design space attain higher confidence appropriateness designs one first steps direction embodied chinook co synthesis system development university washington addresses automation time consuming error prone tasks embedded controller design namely synthesis interface hardware software needed integrate system components migration functions processors custom logic co simulation system specifications synthesis although others exemplified many contributions volume looked virtually issues chinook approach different focus design space exploration hopefully mature embedded system designer assistant interface synthesis cob b pai chou ross b ortega gaetano borriello interface co synthesis techniques embedded systems proceedings ieee acm international conference computer aided design san jose ca november pp key aspect synthesis embedded systems automatic integration system components entails derivation hardware software interfaces bind elements together permit communicate correctly efficiently without automatic synthesis interfaces designers able fully simulate evaluate systems frequently discouraged exploring design space different hardware software partitions practical concerns mandate minimizing changes late design cycle thus leading costly implementations necessary paper presents set techniques form basis comprehensive solution synthesis hardware software interfaces software drivers glue logic generated connect processors peripheral devices hardware co processors communication interfaces meeting bandwidth performance requirements use examples set devices communicate infrared local communications network highlighting video wrist watch display explain techniques need design space exploration tools embedded systems cob pai chou ross ortega gaetano borriello synthesis hardware software interface microcontroller based systems proceedings ieee acm international conference computer aided design santa clara ca november pp microcontroller based systems require design hardware software interface enables software running microcontroller control external devices interface consists sequential logic physically connects devices microcontroller software drivers allow code access device functions paper presents method automatically synthesizing hardware software interface using recursive algorithm practical examples used demonstrate utility method results indicate synthesized circuit driver code comparable generated human designers new tool used higher level synthesis tools evaluate partitionings system hardware software components wb e walkup g borriello interface timing verification application synthesis st design automation conference proceedings june fundamental timing analysis problem verification synthesis interface logic circuitry determination allowable time separations skews interface events given timing constraints circuit propagation delays skews used verify timing properties determine allowable propagation delays logic synthesis paper presents algorithm provides tighter skew bounds better asymptotic running time previous methods shows apply method synthesis tasks wb b e walkup g borriello automatic synthesis device drivers hardware software co design university washington department computer science technical report automatically synthesizing device drivers hardware software needed interface device processor important element hardware software co design driver software consists sequences instructions needed processor control interactions device driver hardware consists digital logic necessary physically connect devices generate signal events meeting timing constraints describe approach begins device specifications form timing state diagrams determines signals controlled directly software require indirect control intervening hardware minimizing hardware requires solving simultaneous scheduling partitioning problem whose goal limit number wires whose events directly generated processor software show even simplest version problem np hard discuss heuristic solution work well practical situations scheduling cwb pai chou elizabeth walkup gaetano borriello scheduling issues co synthesis reactive real time systems ieee micro august pp also appeared technical report dept computer science engineering university washington seattle wa many embedded control applications must respect intricate timing requirements interactions external environment constraints derived response time rate execution low level signaling requirements currently systems designed ad hoc manner many tools assume designer already finalized scheduling schedulers make simplifying assumptions often cannot handle general timing constraints paper discuss scheduling issues must addressed co synthesis tools embedded systems outline possible approaches problems perspective based experience chinook hardware software co synthesis system reactive real time systems currently development university washington chinook initially targeting embedded applications without operating system support high level specification device library chinook synthesizes interface hardware software program realize design cb pai chou gaetano borriello interval scheduling fine grained code scheduling embedded systems dac june central problem embedded system co synthesis generation software low level o scheduling still remains manual task existing coarse grained real time scheduling algorithms applicable assume fixed delays even though run times often variable incur much overhead solve problem present new static ordering technique called interval scheduling meeting general timing constraints fine grained variable delay operations without using run time executive cb pai chou gaetano borriello software scheduling co synthesis reactive real time systems proceedings design automation conference san diego ca june pp existing software scheduling techniques limit functions implemented software restricted class timing constraints particular coarse grained uniform periodic behavior practice however many systems change o behavior response inputs environment paper considers one class systems called reactive real time systems timing requirements include sequencing rate response time constraints present static non preemptive fine grained software scheduling algorithm meet constraints algorithm suitable control dominated embedded systems hard real time constraints part core hardware software co synthesis system last updated mon nov pst
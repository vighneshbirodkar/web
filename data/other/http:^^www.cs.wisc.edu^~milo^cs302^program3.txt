date mon nov gmt server ncsa content type text html last modified fri sep gmt content length program cs fall section cs fall section algebraic language programming c instructor milo m martin milo cs wisc edu program due friday october objective give student experience working writing functions program description due great cash register program wrote restaurant earned quite reputation skills high demand large hardware distributor r nails contracted write program replace old cash register program even greater challenge restaurant number added complications first price customer pays nail decreases quantity ordered increases described detail second warehouse finite number nails stock program must allow operator place order one type nail stock cost ordering number one type nail calculated quantity ordered base price nail nails customer orders less customer pays per nail discount schedule follows first regular price next discount next discount discount example price items cents piece would cents cents note user orders particular item one point later orders item given discount ordered r nails sells four types nails chart item number description base cost per nail quantity hand warehouse item item description cost per nail number warehouse nails nails nails nails customers order box nails box regardless size similar last program need prompt user order keep track many item ordered loop user asks bill display final bill however program requires prompt user item number quantity ordered may design menu bill formats previous assignment dollar amounts must formatted decimal places constants variables used appropriate input checked make sure valid input valid tell user re prompt user input statements apply programs code provided since object assignment give practice using functions provided basic framework main function build functions upon job complete functions fill program perform desired operations must use following code main function modifications code header comments go include ltiostream h gt const int true const int false function prototypes go int main int choice item number int quantity quantity ordered int num ord num ord cumulative number item ordered int num ord num ord prompt user get input print menu num ord num ord num ord num ord choice get choice quantity get quantity process order place order choice quantity num ord num ord num ord num ord keep going true ask user want continue display bill summarizing items ordered print bill num ord num ord num ord num ord functions write following list functions must write assignment procedures require call value parameters others need use call reference parameters figure many types parameters print menu function print menu current subtotal including tax calculate subtotal function compute subtotal including tax items ordered far calculate price function called calculate subtotal take two arguments quantity ordered particular item price item computes cost using rules program description get choice function prompt user item number must ensure return value legitimate item number user enters invalid choice error message printed user reprompted new number get quantity function prompt user quantity order must ensure return value legitimate quantity remember user enter number nails desired number must divisible valid since nails come item packages user enters invalid choice error message printed user reprompted new number place order function attempt place order adjusting appropriate num ordx total quantity item requested greater stock hand much possible order filled informative stock message displayed message display item stock quantity order reduced ordering item causes available stock drop items descriptive low item message printed along appropriate item number keep going function ask user whether would like continue ordering items could ask user want print bill either way return true loop executed false otherwise true false integer constants included code main print bill function print number item ordered items customer ordered zero subtotal final total adding tax way similar last program turn program working print sample runs program output file demonstrate ordering quantities items various discount levels calculated orders exceed available items stock orders cause stock low message displayed example two requests item handled properly one large request always submit print outs source code sample program runs submit electronic copy source code executable described previously created dave burnett milo martin dan yao
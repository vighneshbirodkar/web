mime version server cern date sunday nov gmt content type text html content length last modified sunday sep gmt tt cs lecture concepts last lecture types user defined functions applicative order substitution recursion concepts lecture specifications reading teitelbaum section specifications specification contract producer consumers example electrical outlets specification put two pieces metal appropriate shape outlet get volts hz specification details consumer assume component producer power company must deliver think specification legally binding contract power company generates power part specification hydro power coal hamsters treadmills software specifications functions software components software producers implementors consumers clients defining function implementor using function client function specification consists signature correctness specification exp x n x n n int exp int x int n return n exp x n x signature function taking two int returning int correctness specification n exp x n yield xn signatures number parameters function takes together types type result returns signature note body function doesn affect signature function application number type arguments must match signature exp wrongexp hello wrongprintf exp wrong correctness specifications correctness specification states function without saying x n n consists precondition postcondition distinction clearer weeks precondition restricts permissible arguments e g n postcondition describes result terms arguments e g xn general correctness specification states arguments function application satisfy precondition application yield value satisfies postcondition e g n exp x n yield xn precondition satisfied result defined e anything diverge e g exp x n diverges n exp exp exp exp exp exp exp exp exp function never called arguments satisfy precondition conditional expression non strict evaluating exp never calls exp exp exp exp implementations many implementations satisfy given specification x int fourth int x return x x x x x int fourth int x return square square x x int fourth int x return exp x specification describe implementation implementor freedom change specifications vital design large programs use mathematical functions use arbitrary mathematical functions specification sure mathematical functions well defined arguments permitted precondition e g minor flaw x n n xn defined x n correction x n n x n x n n x n x counting id int count int lo int hi int id return lo hi id count lo hi id example count count count count count count count count count count count sum squares lo lo hi int sumsquares int lo int hi return lo hi square lo sumsquares lo hi example sumsquares factorial lo lo hi int multintegers int lo int hi return lo hi lo multintegers lo hi example multintegers n n int factorial int n return multintegers n
server netscape communications date wednesday nov gmt last modified tuesday nov gmt content length content type text html cse handout cse fall automata computability complexity course information august coordinates towne mo fr instructor jean h gallier mre jean saul office hours mon wed pm thurs pm teaching assistant david parkes towne dparkes unagi office hours mon wed pm textbook required introduction formal languages automata peter linz d c heath co also recommended introduction automata theory languages computation j e hopcroft j d ullman addison wesley grades homework assignments intermediate exam h closed book wed october intermediate exam h closed book mid november final exam problem sets homework homework homework transparencies notes basics language theory dfa cross product construction nfa labeled directed graphs regular expressions myhill nerode theorem state equivalence minimization dfa context free grammars context free languages slides context free grammars context free languages notes brief description course provides introduction theory computation treatment mathematical point view computer science roughly speaking theory computation consists three overlapping subareas formal languages automata computability recursive function theory complexity theory course focus mostly applications programming natural language specification recognition particular compiler construction emphasized topics include basics language theory alphabets strings concatenation languages operations languages including kleene deterministic finite automata dfa cross product construction nondeterministic finite automata nfa nfa dfa subset algorithm rabin scott labeled directed graphs nfa dfa regular languages regular expressions regular expressions nfa nfa regular expressions node elimination myhill nerode theorem state equivalence minimal dfa pumping lemma regular languages fractals languages glimpse context free grammars context free languages leftmost derivations rightmost derivations parse trees universality leftmost derivations cleaning context free grammars e rules chain rules chomsky normal form right linear grammars regular languages eliminating useless productions greibach normal form tree domains gorn trees parse trees pumping lemma context free languages pushdown automata pda instantaneous descriptions acceptance modes dpda deterministic pda context free grammars pda pda context free grammars glimpse lr parsing generalities computability models computation turing machines ram programs flowchart sequential form primitive recursive functions recursive partial recursive functions recursively enumerable languages recursive languages equivalence ram computable turing computable functions equivalence turing computable functions partial recursive functions phrase structure grammars type languages type grammars context sensitive grammars monotonic grammars linear bounded automata published jean gallier
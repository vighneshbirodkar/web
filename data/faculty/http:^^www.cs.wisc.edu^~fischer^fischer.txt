date thu nov gmt server ncsa content type text html last modified fri sep gmt content length home page charles n fischer nbsp nbsp nbsp nbsp nbsp nbspcharles n fischer nbsp nbsp nbsp nbsp nbsp nbspprofessor computer sciences nbsp nbsp nbsp nbsp nbsp nbspuniversity wisconsin computer sciences department university wisconsin w dayton st madison wi telephone messages fax email fischer cs wisc edu teaching semester m teaching cs graduate course compilers spring ll teaching cs undergraduate course compilers research research interests focus compiler design implementation recently ve interested best exploit enormous capabilities provided modern computer architectures issues students investigated include code scheduling important avoid unnecessary pipeline delays investigated issues optimally scheduling arithmetic expressions dominant model global procedure level register allocation graph coloring best model maybe models explicitly quantify likelihood benefit register residence attractive careful register allocation vital generating code unnecessary loads stores must avoided ultimate register allocation interprocedural register allocation procedures program analyzed studied interprocedural allocation models optimally allocate register among procedures polynomial time approach seems effective practice anyone codes c c knows easy make mistakes errors involving pointers array indices especially common studied ways automatically check pointer array operations run time shared memory multiprocessor workstations using one processor run program another monitor program possible routinely check programs execute little apparent slowdown recent publications minimum cost interprocedural register allocation steven m kurlander charles n fischer popl rd acm sigplan sigact symposium principles programming languages january low cost concurrent checking pointer array accesses c programs harish patil charles n fischer appear software practice experience demand driven register allocation todd proebsting charles n fischer appear acm transactions programming languages systems efficient instruction scheduling delayed load architectures steven m kurlander todd proebsting charles n fischer acm transactions programming languages systems vol zero cost range splitting steven m kurlander charles n fischer sigplan conference programming language design implementation june activities new completely revised second edition crafting compiler co authored ron cytron richard j leblanc jr almost complete published benjamin cummings look soon better bookstores everywhere short communications editor acm transactions programming languages systems toplas education ph d cornell university parsing context free languages parallel environments supervised john h williams ph d students donn r milton syntactic specification analysis attributed grammars july bruce r rowland semantic attribute evaluation syntactic analysis july stephen k skedzielewski definition use attribute reevaluation attributed grammars september bernard dion locally least cost error correctors context free context sensitive parsers december mahadevan ganapathi retargetable code generation optimization using attribute grammars november vimal begwami new approach attribute evaluation error correction compilers august jon mauney least cost syntactic error correction using extended right context january gregory f johnson context sensitive attribute flow august anil pal generating execution facilities integrated programming environments december william h winsborough automatic transparent parallelization logic programs compile time august g venkatesh framework specification implementation program analysis algorithms august todd proebsting code generation techniques august steve kurlander approaches interprocedural register allocation january harish patil efficient program monitoring techniques june
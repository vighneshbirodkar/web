date thu nov gmt server ncsa content type text html last modified thu oct gmt content length cs introduction operating systems fall cs introduction operating systemssection fall instructor marvin solomon office computer sciences office hours tr office phone email address solomon cs wisc edu ta rob mellencamp office computer sciences office hours mwf office phone email address mellen cs wisc edu news watch space latest updates oct answers midterm exam summary scores available detailed breakdown grade distribution also available oct specification project avaiable oct due date project moved thursday oct typographical errors notes deadlock avoidance corrected importantly array called d places m others called m places popular demand old midterm exam available look warning take example large grain salt exam long time ago course used different text covered topics different order semester midterm likely quite different oct time place midterm exam determined room comp sci pm october oct specification project avaiable oct discussion issues presented class day available oct summary grades project available oct electronic hand directions program posted oct procedure givefork algorithm project specification contain call notify web page corrected show sept ve fixed two bugs project specification one minor one important first caused introduction paragraph slightly garbled thanks jake dawley carr pointing one second line omitted sample code algorithm programming details section create threadscheduler start threadscheduler sched new threadscheduler sched start specified correctly later section threadscheduler details section web page fixed thanks liping zhang one sept test data files project available directory cs public src contains three data files java class reading file cs public src graph java contains definition class graph described project specification file cs public src petersoncyclic graph contains peterson graph shown project specification mentioned initial placement forks acyclic file cs public src petersonacyclic graph contains peterson graph acyclic initial placement forks file cs public src star graph contains star topology one central philosopher sharing forks nine others sept todd jenner pointed two typos specification project forks numbers read forks numbers eat maxthink replaced maxeat online version corrected thanks todd sept mistake java tutorial notes section strings two argument version string substring second argument offset end substring number characters string notes corrected thanks franco tung fai chan pointing sept occasionally send urgent messages directly mailing list students registered course archive messages sent list web receiving messages think send mail solomon cs wisc edu specification project avaiable received requests makefiles java sample makefile cs public src makefile copy file working directory java source files remember use separate directory project edit described comments type make compile run program make classes compile without running sept notes handing assignment simulating preemptive multitasking solaris computers added sept java tutorial finished finished going get section threads find helpful hints structure project aware weekly seminar operating systems networking meeting mondays first seminar semester monday th check colloquia seminars web page details sept java book finally available university bookstore sept beginnings java tutorial available sept use java cs department unix workstations must create file named cshrc local home directory containing one line set path path java bin make change take effect either type source cshrc local simply log log back sept specification project ready sept unix orientation sessions new unix users scheduled following times tues thurs sept pm pm room cs mon thurs sept pm room cs last updated wed sep cdt contents news summary lecture information text projects grading course schedule lecture notes summary cs intended general introduction techniques used implement operating systems related kinds systems software among topics covered process management creation synchronization communication processor scheduling deadlock prevention avoidance recovery main memory management virtual memory management swapping paging segmentation page replacement algorithms control disks input output devices file system structure implementation protection security lecture information lecture tuesday thursday computer sciences statistics discussion wednesday psychology discussion section optional least important lectures primary focus wednesday meetings topics related projects including introduction java programming language time also available answering questions regarding points raised lectures text text required modern operating systems andrew tanenbaum prentice hall strongly recommended java programming language ken arnold james gosling addison wesley online references lots additional helpful materials java available web following references collected locally fast access java tutorial java language specification java api documentation watch spot additional links web projects five programming projects java programming language sun sparcstation workstations running solaris dialect unix operating system provided use may use computer access implements java programming language however use computer sciences department computers responsible transferring required data sets software packages computer first assignment easy get acquainted exercise designed help become familiar computing environment java language subsequent projects involve process synchronization processor scheduling disk scheduling file system implementation first project students required work pairs members pair receive grade project feel free discuss projects anyone must share code anyone partner cheating vigorously punished enough said assignments due beginning class m date indicated entire semester three late days credit use late days different assignments e g one day three assignments three days one assignment late days may used last assignment java students taking course familiar c java choose java several arguments favor java congenial programming environment runtime errors bad subscripts null pointers uninitialized variables cause exceptions caught language runtime rather mysterious crashes random behavior java strings much easier use char arrays garbage collected storage management extremely handy java trendy java caught faster new language history many reasons java growing popularity little way use course discuss issues class byproduct course knowledge java becoming quite marketable commodity java operating system features built particular first widely used programming language language level support concurrency threads synchronization monitors hand switching new programming language always bit dislocating fortunately excellent resources available ease transition java programming language arnold gosling amazingly good neither introductory programming primer authors assume already know program reference manual although reference manual available online readable introduction language takes way getting started everything need write quite sophisticated programs java book available university bookstore strongly encouraged buy also gathered variety resources together including nice online tutorial java programming reference manual standard class libraries using grading midterm final exam count grade midterm evening wednesday october pm room computer sciences statistics final scheduled timetable tuesday december p m first programming project getting started count grade remaining four projects count course schedule following schedule tentative may updated later semester check back frequently sept introduction chapter sept oct processes synchronization processor scheduling chapters sept project due learning java oct project due synchronization oct nov memory management virtual memory chapter oct project due cpu scheduling oct midterm exam room comp sci nov dec o devices file systems chapters nov project due disk scheduling dec protection security sections dec project due file systems dec final exam lecture notes introduction history os bottom view top view course outline java c programmers processes synchronization using processes process use processes creating processes process states synchronization race conditions semaphores bounded buffer problem dining philosophers monitors messages deadlock terminology deadlock detection deadlock recovery deadlock prevention deadlock avoidance implementing processes implementing monitors implementing semaphores implementing critical sections short term scheduling memory management allocating main memory algorithms memory management compaction garbage collection swapping paging disks come solomon cs wisc edu thu oct cst copyright marvin solomon rights reserved
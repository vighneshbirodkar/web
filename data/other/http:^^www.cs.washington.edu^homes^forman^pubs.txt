date tue dec gmt server ncsa content type text html last modified wed oct gmt content length george forman publications george forman publications survey challenges mobile computing john zahorjan ieee computer journal vol pp april postscript technical report version abstract technical challenges mobile computing must surmount achieve potential hardly trivial challenges designing software mobile computing systems quite different involved design software today stationary networked systems authors focus issues pertinent software designers without delving lower level details hardware realization mobile computers look promising approaches investigation also consider limitations many issues dealt stem three essential properties mobile computing communication mobility portability course special purpose systems may avoid design pressures without certain desirable properties instance portability would less concern mobile computers installed dashboards cars hand held mobile computers however authors concentrate goal large scale hand held mobile computing way reveal wide assortment issues zpl vs hpf comparison performance programming style l snyder r anderson b chamberlain choi e lewis c lin w weathersby submitted publication postscript abstract paper compares two data parallel languages zpl hpf terms programming style performance results show eight programs number standard benchmark suites zpl generally outperforms hpf zpl expresses problems higher levels abstraction yielding programs shorter less error prone easier maintain zpl better performance comes cleaner expression computation compiler extract parallelism easily ariadne debugger scalable application event based abstraction j cuny hough j kundu c lin l snyder d stemple acm onr workshop parallel distributed debugging san diego ca usa june sigplan notices vol pp dec abstract massively parallel computations difficult debug event based behavioral abstraction provides mechanism managing volume data allowing users specify models intended program behavior automatically compared actual program behavior transformations logical time ameliorate difficulties coping asynchrony allowing users see behavior variety temporal perspectives previously combined features debugger automatically constructed animations user defined abstract events logical time however debugger always provide sufficient feedback effectively scale massive parallelism address problems new debugger called ariadne ariadne uses simple language specify behavioral abstractions patterns events logical time patterns detected traces program behavior collections small finite state recognizers allow substantive feedback match failures george h forman gforman hpl hp com home page mail finger map weather cs dept uw live picture generated wed oct pdt
date tue dec gmt server ncsa content type text html last modified tue nov gmt content length persistent programming languages best worlds next contents persistent programming languages best worlds rex jakobovits department computer science engineering fr university washington seattle washington rough draft abstract integration databases programming langauges motivated two directions database community requires flexible powerful way modeling world whereas programming language community wants convenience reliable efficient means enabling entities persist program invocations traditionally query facilities provided database users computationally complete precluding arbitrarily complex processing data furthermore support primitive data types making inappropriate modeling certain real world applications processing must done line host language translation database language results impedence mismatch problem one solution extend existing programming language notion persistence enabling seamlessly interact storage manager paper survey efforts issues involved focusing primarily persistent object oriented languages contents integrating databases programming languages programming language perspective database perspective overcoming impedence mismatch problem milestones persistent programming langauge development comparison relational databases case study two object oriented databases transparent persistence declarative query facility collections iterators constraints active databases triggers triggers perpetual triggers intra object vs inter object triggers eager vs lazy computation triggers constraints systems misc features object oriented database systems mandatory features optional features swizzling referential integrity versioning object oriented systems beta procol constraint based imperative languages constraints object identity kaleidoscope adding transactions kaleidoscope techniques integration summary persistent prolog motivation issues expert systems prolog could use persistence database interface prolog translation sql prolog meta translation mimer back end prolog references document rex jakobovits tue nov pst
date mon dec gmt server ncsa content type text html cse summary cse principles digital systems design carl ebeling fall catalog data principles logic design combinational sequential circuits structured design methods digital system components clocking methodologies arithmetic circuits memories hardware description languages logic sequential synthesis synthesis simulation tools implementation alternative vlsi processor architecture application specific computation prerequisites working knowledge boolean algebra finite state machines familiarity department computing environment unix x course goals provide depth understanding digital systems design including specification synthesis implementation facilities making extensive use computer aided design cad tools designing implementing digital circuits tools installed sun workstations northwest laboratory integrated systems lis mostly located sieg accessible x terminal may find advantageous work take advantage manuals reference texts knowledge students cad tools cad tools allow us design implement substantial hardware projects reasonable amount time also provide hands experience state art design tools incorporate synthesis algorithms covered class tools introduced first half course basic concepts covered used heavily design project verilog verilog text based hardware description language allows structural behavioral descriptions course concentrates structural design introduces behavioral descriptions synthesis cadence tools used simulate verilog descriptions synopsys synopsys synthesis tools used synthesize implementations verilog descriptions course uses synopsys investigate synthesis process well turn key synthesis implementing final project assignments weekly assignments labs first half quarter give experience concepts using second half quarter design project introduce cad tools project substantial part course revolves around team design large hardware systems project team design complete project using schematics verilog specification verilog xl simulation synopsys tools synthesis xilinx fpgas implementation design projects past included tetris player ethernet interface cache monitor dna sequence matching quarter designing hardware implement image processing algorithm haven decided algorithm yet examples include compression filtering edge detection etc using prototyping board containing several fpgas ram plugs alpha workstation via pci bus image downloaded board ram transformed hardware compressed filtered image uploaded alpha project well defined students able explore different options based performance cost well possibilities color images video collaborative learning well known students learn lot given chance second week assign everyone teams three four students work together homework assignments project member team responsible performance team members entire team must understand solution contribute part talk works detail later quizzes exams short challenging quiz every friday end class cover material covered wednesday compensation mid term exam final exam two hour comprehensive examination given regularly scheduled final exam time quizzes final exam open book open notes grading course grade roughly determined follows assignments homework laboratory quizzes project final exam participation intangibles ebeling cs washington edu
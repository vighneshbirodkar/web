date wed jan gmt server ncsa content type text html bad programming programming practices avoid executive summary dave grove bad things turned homework following features unmarked global variables global variables must clearly declared top file must names begin end asterisks also must comment explaining variables must global mixing parameter passing styles lisp allows positional keyword rest optional various combinations options passing parameters function use positional function parameters unless want need sometimes omit parameter case use keyword parameters mix parameter passing conventions within function use rest unless extremely good reason use optional nested defuns lisp allows define one function inside another example defun main function args let local variable process args args defun helper function x function local variable processing creates global binding helper function therefore case global side effect well documented never put defun inside defun lambda macro allows create local unnamed functions fly declaring initializing us accustomed programming c pascal used idea declaring variables beginning function initializint later example might write ugly ugly ugly ugly ugly defun count symbols nested list let car nil declarations cdr nil symbols car nil symbols cdr nil cond null nested list setf symbols car setf car car nested list symbolp car setf symbols car listp car setf symbols car count symbols car setf symbols cdr count symbols cdr nested list symbols car symbols cdr really bad lisp style need pre declare set variables better way write let different clauses cond separate cases us many cases carefully allows fewer conditionals local variables defun count symbols nested list cond null nested list let car car nested list symbols rest count symbols cdr nested list cond symbolp car symbols rest listp car count symbols car symbols rest symbols rest another version uses conditional assignment variable open debate whether good style purely lisp like three personally find little hard read defun count symbols nested list cond null nested list let car car nested list symbols car cond symbolp car listp car count symbols car symbols car count symbols cdr nested list mixing side effects computation functions written either compute result perform side effect like o avoid writing functions substantial ammounts computation produce result interesting side efftects cse webmaster cs washington edu last update pm
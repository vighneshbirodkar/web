mime version server cern date sunday nov gmt content type text html content length last modified wednesday oct gmt rdz cs b lecture concepts last lecture simple expressions programs call assignment statements evaluation examples concepts lecture compound statements scoping rules blocks declarations fun else iteration break fencepost errors handout sample prelim questions prelim notes review session sunday prelim monday pm coverage everything detailed questions stack model closed book closed notes mostly benefit bring writing implement stress memorization forgive minor syntactic errors room assignments l upson b m z phillips miss prelim make exams oral guaranteed easier real one compound statements another kind c statement ve actually seen already hadn given name curly braces least far sort like begin end pascal syntax open curly brace statements closed curly brace x y square x compound expression include declaration statements must appear beginning e statement declaration statement example declaration int y y square x scoping rules nasty example write code like void main int x x int x x printf d x rule simple figure x intended look outwards line find x add stack model little ugly won won use feature anything complicated cs b seen compound statements conditional statements often involve compound statementsif test thenstatement else elsestatement test expression thenstatement elsestatement statement good practice use compound statements conditional statements makes code much easier read else seen compound statements hint case usually involve declarations fun else actually need use else ifif x y x printf d lead totally unreadable code especially nest statements x y z x y else z reasonable way multiway conditional statementsif test statement else test statement else test statement else defaultstatement personally find incredibly readable sometimes necessary iteration today ll mostly cover syntax iteration c ll examples use section iteration involves executing part program repeatedly recursion easiest way iteration whilewhile expression statement typically statement compound statement semantics evaluate expression false zero re done statement true non zero evaluate statement evaluate statement examplevoid countdown int count count printf d count count count printf blastoff void main start countdown start printf d start example also shows subtle important property stack model note test expression never statement run forever get statement early count printf d count nasa goofed return count count break statements suppose instead getting entire countdown function merely want get statement nasa didn goof astronauts got impatient decided blast countdown finished good way bad way re going teach good way break statement terminates statementvoid countdown int count count printf d count count count astronauts bored count break printf blastoff nested statements allows unreadable code created world enough without folks contributing small example x x x y abs x y break test z break rule break statement terminates smallest statement encloses iteration stack model far stack model concerned iteration primitives aren much different conditional statements simply manipulate program counter primitives sometimes called control flow primitives fencepost errors iteration also recursion becomes easy make fencepost errors suppose want build fence need install posts apart many fenceposts need void nastybug int count count count count count something count kind bug hard find general
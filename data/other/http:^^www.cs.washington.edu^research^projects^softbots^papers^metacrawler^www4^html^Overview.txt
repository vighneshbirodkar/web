date tue dec gmt server ncsa content type text html multi service search comparison using metacrawler multi service search comparison using metacrawler erik selberg oren etzioni abstract standard web search services though useful far ideal dozen different search services currently existence unique interface database covering different portion web result users forced repeatedly try retry queries across different services furthermore services return many responses irrelevant outdated unavailable forcing user manually sift responses searching useful information paper presents metacrawler fielded web service represents next level information food chain metacrawler provides single central interface web document searching upon receiving query metacrawler posts query multiple search services parallel collates returned references loads references verify existence ensure contain relevant information metacrawler sufficiently lightweight reside user machine facilitates customization privacy sophisticated filtering references metacrawler also serves tool comparison diverse search services using metacrawler data present consumer reports evaluation six web search services galaxy infoseek lycos open text webcrawler yahoo addition also report commonly submitted queries metacrawler keywords metacrawler www world wide web search multi service multi threaded parallel comparison introduction web search services lycos webcrawler proven useful popular web grows number variety search services increasing well examples include yahoo net directory harvest home page search service query image content service virtual tourist directory organized geographic regions since service provides incomplete snapshot web users forced try retry queries across different indices find appropriate responses process querying multiple services quite tedious service idiosyncratic interface user forced learn services return many responses irrelevant outdated unavailable forcing user manually sift responses searching useful information paper presents metacrawler search service attempts address problems outlined premises underlying metacrawler following single search service sufficient table shows single service able return references followed users many references returned services irrelevant removed user better able express query table shows references returned removed user supplies expressive query low quality references detected removed fairly quickly table shows average references verified well minutes simple collation ranking takes seconds features used web population metacrawler receiving queries per week number growing shown figure metacrawler log facilitates objective evaluation comparison underlying search services tables detail trade offs services example lycos returns followed references service yet webcrawler fastest taking average seconds return answers queries metacrawler logs also reveal people search wide variety information h robins zyx music common queries related sex pornography account total queries submitted metacrawler shown table nearly half queries submitted unique remainder paper organized follows design implementation metacrawler described section experiments validate premises described section discuss related work section ideas future work potential impact appear section conclude section metacrawler metacrawler free search service used locating information available world wide web metacrawler interface similar webcrawler open text allows users enter search string query returns page click able references hits pages available web however internal architecture metacrawler radically different search services standard web searching consists three activities indexing web new updated pages process demands substantial cpu network resources storage web pages retrieved index typically requires large amount disk space retrieval pages matching user queries services amounts returning ranked list page references stored index standard search services create store index web well retrieve information index unlike services metacrawler meta service uses internal database instead relies external search services provide information necessary fulfill user queries insight separating retrieval pages indexing storing lightweight application metacrawler access multiple databases thus provide larger number potentially higher quality references search service tied single database another advantage metacrawler depend upon implementation existence one search service indexing mechanism necessary web typically done using automated robots spiders may necessarily best choice however underlying architecture search services used metacrawler unimportant long central complete search service several partial search services exist metacrawler provide benefit accessing simultaneously collating results metacrawler prototype publicly accessible since july steadily growing popularity logging upwards queries per week increasing metacrawler currently accesses six services galaxy infoseek lycos open text webcrawler yahoo works follows given query metacrawler submit query every search service knows parallel services return list references www pages hits upon receiving hits every service metacrawler collates results merging hits returned duplicate hits listed service returned hit acknowledged expert user supplied sorting options applied time optionally metacrawler verify information existence loading reference metacrawler loaded reference able re score page using supplementary query syntax supplied user metacrawler finished processing hits user presented page consisting sorted list references reference contains click able hypertext link reference followed local page context available confidence score verified keywords actual url reference word search query automatically boldfaced may determine references followed click able link returned user points reference script logs reference followed refers user browser correct url querying many services simply collating results return results one service cost presenting user irrelevant references metacrawler designed increase number hits relevance hits returned metacrawler yields higher proportion relevant hits using powerful query syntax well expert options users easily instruct metacrawler determine quality returned references query syntax used specifies required non desired words well words appear phrase expert options allow users rank hits physical location user country well logical locality internet domain user interface giving user web form added expressive power easy presenting user form would facilitate actually using novel features metacrawler proved challenge strove balance simple search form expressive one keeping mind interface issues mentioned service providers early designs focused syntax queries several additional options improving result syntax similar infoseek query syntax parentheses used define phrases plus sign designated required word minus designated non desired word example search john cleese naturally requiring john cleese appear together syntax required unwieldy john cleese surprisingly discovered users attempted use syntax often introduced subtle syntactical errors causing resulting search produce entirely irrelevant set hits current design reduced need extra syntax instead ask user select type search three options search words phrase treat query text single phrase attempt match phrase pages retrieved e g four score seven years ago search words attempt find word query text somewhere retrieved pages equivalent logical search words attempt find word query text retrieved pages equivalent logical older syntax still supported although advertised prominently main search page save minus sign widely used element query syntax since changed search page new design number malformed requests dropped significantly addition query entry box maintain various expert options activated via menus metacrawler currently uses two menus provide extra expressiveness first describes coarse grain locality options user continent country internet domain well options select specific continent second menu describes sundry internet domain types e g edu com etc options allow users better describe looking terms believe relevant information client server design current search services amortize cost indexing storing pages hundreds thousands retrievals per day order field maximal number retrievals services devote minimal effort responding individual query increases server capacity quickly gobbled increases pages indexed queries per day result little time sophisticated analysis filtering post processing responses queries decoupling retrieval pages indexing storage metacrawler able spend time performing sophisticated analysis pages returned metacrawler retrieves data spending time indexing storing thus metacrawler relatively lightweight prototype written c comes lines code including comments need massive disk storage maintain index need massive cpu network resources services require consequently metacrawler client could reside comfortably individual user machine individualized metacrawler client accesses multiple web search services number advantages first user machine bears load post processing analysis returned references given extra time post processing quite sophisticated example metacrawler could divide references clusters based similarity could engage secondary search following references related pages determine potential interest second processing customized user taste needs example user may choose filter advertisements parents may try block x rated pages third metacrawler could support scheduled queries e g new today seattle mariners storing results previous queries user machine metacrawler focus output new updated pages finally pay per query services metacrawler programmed selective query policies e g go cheapest service first even compute optimal service querying sequence organizations may choose institutional metacrawler enhanced caching capabilities presumption people within organization want examine many pages cache could also facilitate local annotations creating collaborative filtering information exchange environment sort described elsewhere finally prototype metacrawler depends good underlying services metacrawler client would future underlying service may choose block metacrawler requests easily identified however would nearly impossible distinguish queries issued metacrawler client versus queries made directly person common usage one frequently asked questions regarding search internet people searching table summarizes top ten repeated queries total queries made july september query top ten related sex however combined top ten queries amount queries total queries queries repeated table top ten queries issued metacrawler query times issued sex erotica nude porn penthouse pornography erotic porno adult playboy times issued lists number times corresponding query issued july sept note query sexually related combined total amounts less total queries processed metacrawler also queries issued unique evaluation metacrawler released publicly july averages percentages presented paper based completed queries starting july ending september except reference open text based completed queries starting september open text added metacrawler repertoire log results seven days omitted due service changing output format causing service return references metacrawler even though service available metacrawler currently running dec alpha osf first hypothesis confirmed deployed metacrawler sending queries parallel collating results useful confirm used metric references followed page hits returned metacrawler contained relevant information calculated percentage references followed users search services table demonstrates need using multiple services lycos return plurality hits followed share last month recorded slightly followed references came five services skeptical readers may argue service providers could invest resources provide comprehensive indices web however recent studies indicate rate web expansion change makes complete index virtually impossible table market shares followed references followed jul sept followed sept lycos webcrawler infoseek galaxy open text n yahoo table shows percentage service total followed references references returned two services included service columns sum table demonstrates user restricts queries single service miss relevant references analyzed data determine added features metacrawler helping users metric used number references pruned table shows average number references removed advanced option table effect features removing irrelevant hits feature hits removed syntax dead expert table shows percentage hits removed particular feature used syntax refers queries removed due sophisticated query syntax e g minus undesired words dead refers unavailable inaccessible pages expert refers hits removed due restriction references origins using syntax required non desired words typically reduces number returned results detecting dead pages allowed removal another finally expert options successful removing unwanted references features used conjunction returned references removed metacrawler benchmarks shown metacrawler improves quality results returned user performance cost table shows average times per query differentiating metacrawler simply collate results verify well table average time metacrawler return results wall clock time user time system time lag time collated verified times measured seconds wall clock time total time taken average query broken user system lag time user time time taken metacrawler program system time time taken operating system lag time time taken pages downloaded network table shows metacrawler finished relatively quickly average time return collated results little seconds longer slowest service shown table expected given percentage time service times causes metacrawler wait full minute returning results pleased times reported verification initial prototype typically took five minutes perform verification recently began caching retrieved pages three hours found caching reduces average verification time nearly one half confident time reduced aggressive caching well improvements thread management used metacrawler since metacrawler publicly announced daily access count growing linear rate also pleased increased use user options figure plots data points weeks beginning july september feature use week shows number queries metacrawler advanced features verification used figure queries per week july sept search service comparison addition validating claims metacrawler logs also allow us present consumer reports style comparison search services evaluate service using three metrics coverage many hits returned average relevance hits returned actually followed users performance long service take often time coverage given pre set maximum number hits returned service measured percentage references returned well references unique service returned thus returned unique shows average service returns maximum allowed hits unique tables details findings terms raw content shows default parameters open text returns maximum hits allowed nearly hits unique lycos webcrawler follow also returning slightly hits unique yahoo particularly poor performance total hits metric surprising us included yahoo hypothesis people search subjects mariners baseball yahoo excels however turned hypothesis incorrect people tended use metacrawler search nuggets information ken griffey hand injury yahoo index type information thus shows poor content presumably topic searches go yahoo directly although service returns mostly unique references clear whether references useful unique references necessarily unique service database another service could return reference given different query string table returned references service max hits returned ave hits returned maximum allowed open text lycos webcrawler galaxy infoseek yahoo first column shows percentage maximum hits allowed service returned percentage calculated dividing average hits returned maximum allowed service shown second column percentage measure many hits service provide given pre set maximum metacrawler used different maximum values services internal maximum values others would either accept certain maximums none table unique references service unique hits returned galaxy yahoo lycos webcrawler open text infoseek table shows percentage references service returned unique service relevance measure relevance two metrics used first service returning references people follow shown table second metric percent references returned service people following table summarizes calculations shows nearly references returned infoseek followed lycos open text webcrawler follow hits followed data two caveats first relevant information people may list references example people wish see many links home page may search name calculate number second caveat numbers may skewed number hits returned service thus infoseek nearly results followed total references returned infoseek followed compared references followed contributed lycos average hits examined table relevance returned hits service hits returned followed total hits followed infoseek lycos open text webcrawler yahoo galaxy table shows percentage followed hits service references returned multiple services counted multiple times column shows actual number references followed service numbers queries except open text queries performance finally measure service response time table summarizes findings surprising although disappointing find average times vary seconds percent time services timed services except open text newest presumably still going growing pains one explanation length times taken services majority requests peak hours thus results naturally skewed towards times services loaded times non peak hours much lower table performance services ave time sec timed webcrawler infoseek open text yahoo lycos galaxy table shows average time seconds taken service fulfill query second column gives percent time service would time fail return hits one minute related work unifying several databases one interface far novel many companies pls lexis nexis verity invested several years substantial capital creating systems handle integrate heterogeneous databases likewise emergence many internet search services many different efforts create single interfaces sundry databases perhaps widely distributed cusi configurable unified search index large form allows users select one service time query service also several services much like cusi one search page w search engine list unfortunately user many services lists choose parallelism collation user must submit queries service individually although task made easier form interfaces various services one page harvest system many similarities metacrawler however rather using existing databases post processing information returned harvest uses gatherers index information brokers provide different interfaces extract information however harvest may many different interfaces many different internal services still search service like lycos webcrawler instead meta service like metacrawler also parallel web search services sun microsystems supports primitive service ibm recently announced infomarket rather integrating similar services different coverage integrates quite different services dejanews usenet news search service mckinley clone yahoo editorial ratings various pages addition open text yahoo closest work metacrawler savvysearch independently created multi threaded search service released may savvysearch larger repertoire search services although www resource services roget thesaurus savvysearch main focus categorizing users queries sending appropriate subset known services like metacrawler internet softbot meta service leverages existing services collates results softbot enables human user state wants accomplished softbot attempts disambiguate request dynamically determine satisfy utilizing wide range internet services unlike metacrawler focuses indices keyword queries softbot accesses structured services netfind databases inspec softbot explicitly represents semantics services enabling chain together multiple services response user request softbot utilizes automatic planning technology dynamically generate appropriate sequence service accesses metacrawler softbot rely radically different technologies vision driving systems seek provide expressive integrated interface internet services future work investigating metacrawler scale use new services particular importance collate results returned different types internet indices usenet news web pages also important determining useful methods interacting specialized databases internet movie database information requested obviously located special purpose databases make sense query every service investigating methods enable metacrawler determine services return relevant data based solely query text data provided user future design existing metacrawler prototype cause substantial network load attempts verify large number pages one query problem multiple queries occurring time cause system network bog however emergence universally portable internet friendly languages java magic cap load problems lessened users machines take workload needed perform individual query discussed section javacrawler prototype next generation metacrawler written java supports features already present metacrawler however instead users running queries one central service user local copy javacrawler uses copy directly send queries services load caused verification taken user machine rather central server added benefit inserting downloaded pages local cache making retrieval pages nearly instantaneous javacrawler loaded automatically metacrawler home page visited java compatible browser impact search service providers anticipate wide range meta services like metacrawler emerge next years however uncertain relationship meta services search service providers envision relationship hinge form information economy used service providers takes discuss two different models charge per access charge per access model service providers benefit access database infoseek already taken model commercial service infoseek financially rewarded regardless sends query commercial database many databases web also use model metacrawler fits well model since service providers benefit access added exposure generated metacrawler advantage model creates implicit sanity check claims paper makes use features order metacrawler meta service survive economy must charge per transaction underlying services metacrawler turn pay service information thus users must willing pay premium service voting pocketbook determine features truly desirable advertising advertising model service providers benefit sponsors turn gain benefit exposure provided service nearly major search services charge users directly adopted model many unrelated services heavily accessed model providers relationship metacrawler become problematic metacrawler filters away superfluous information advertisements one promising method ensure profitable co existence use provider created interfaces providers could create interface metacrawler access service addition returning relevant hits also returns appropriate advertisement another solution involves metacrawler accepting advertisements forming profit sharing relationship service providers currently investigating methods mutually beneficial co existence service providers conclusions paper presented metacrawler meta service web searching additional features designed return references higher quality standard search services demonstrated users follow references reported variety different search services confirming single service sufficient table due expressive power metacrawler interface metacrawler able automatically determine hits returned discarded finally performance benchmarks usage logs also show features provided metacrawler reasonably fast actually used practice metacrawler provides consumer reports sorts web searchers individual service data extracted metacrawler logs compelling evidence concerning quality service comparing services using query text recording links users follow able evaluate services user point view far know first quantitatively compare search services used metacrawler large sample authentic user queries possible metacrawler features could integrated search services others intrinsic meta services definition meta service provide coverage gained using multiple services also argued earlier client side meta services offer user site customizations absorb load caused post processing search results finally features belong control search services purely pragmatic reasons example commercial search services become available tools emerge select services use basis cost impartial meta service metacrawler avoids conflict interest would arise tool offered one commercial services new web services constantly created number variety services grows natural group existing services one umbrella metacrawler goes merely organizing services creating integrated meta service moves interface associated computational load closer user believe trend moving information food chain continue metacrawler one first popular meta services many follow acknowledgments research presented paper could accomplished without help many individuals would like thank mary kaye rodgers editing assistance putting late nights ruth etzioni ellen spertus provided comments earlier draft dan weld rich segal keith golden george forman donald chinn vocal active testing early prototypes metacrawler craig horman nancy johnson burr extremely helpful patient dealing ran amok lara lewis helpful finding references upon demand internet softbot group provided early insight desirable features metacrawler brian bershad hank levy contributed ideas relating impact metacrawler could web ken waln aided early development form patches www c library lou montulli helped later development unlocking secrets nph scripts netscape caching metacrawler development supported gifts us west rockwell international palo alto research etzioni softbot research supported office naval research grant j national science foundation grant iri references infoseek corporation infoseek home page url http www infoseek com william cross one internet search page url http www albany net wcross srch html daniel dreilinger savvy search home page url http www cs colostate edu dreiling smartform html daniel dreilinger integrating heterogeneous www search engines url ftp savvy report ps gz may einet galaxy home page url http galaxy einet net galaxy html c mic bowman et al harvest scalable customizable discovery access system technical report cu cs department computer science university colorado boulder colorado march url http harvest cs colorado edu harvest papers html michael schwartz et al www home pages harvest broker url http town hall org harvest brokers www home pages o etzioni d weld softbot based interface internet cacm july url http www cs washington edu research softbots david filo jerry yang yahoo home page url http www yahoo com james gosling henry mcgilton java language environment white paper url http java sun com whitepaper javawhitepaper html ibm inc infomarket search home page url http www infomkt ibm com ibm inc query image content home page url http wwwqbic almaden ibm com qbic qbic html martijn koster robots web threat treat connexions april lexis nexis lexis nexis communication center url http www lexis nexis com michael mauldin lycos home page url http lycos cs cmu edu michael l mauldin john r r leavitt web agent related research center machine translation proceedings signidr v mclean virginia august max metral helpful online music recommendation service url http rg media mit edu ringo ringo html nexor cusi configurable universal search interface url http pubweb nexor co uk public cusi cusi html university geneva w search engines url http cuiwww unige ch meta index html open text inc open text web index home page url http www opentext com omw f omw html personal library software inc personal library software home page url http www pls com brian pinkerton webcrawler home page url http webcrawler com brian pinkerton finding people want experiences webcrawler proceedings second world wide web conference mosaic web chicago il usa october brandon plewe virtual tourist home page url http wings buffalo edu world daniel sears guide codewarrior magic mpw development release url http www genmagic com magiccapdocs codewarriormagic introduction html may dejanews research service dejanews home page url http www dejanews com sun microsystems inc multithreaded query page url http www sun com cgi bin show search mtquery index body internet movie database team internet movie database url http www msstate edu mckinley group inc magellan mckinley internet directory url http www mckinley com verity inc verity home page url http www verity com authors erik selberg selberg cs washington edu http www cs washington edu homes selberg department computer science engineering box university washington seattle wa erik selberg pursuing ph d computer science university washington primary research area involves world wide web search although also interests regarding system performance security well multi agent coordination planning april created metacrawler parallel web search meta service graduated carnegie mellon university double major computer science logic received first allen newell award excellence undergraduate research oren etzioni etzioni cs washington edu http www cs washington edu homes etzioni department computer science engineering box university washington seattle wa oren etzioni received bachelor degree computer science harvard university june ph d carnegie mellon university january joined university washington assistant professor computer science engineering february fall launched internet softbots project etzioni received nsf young investigator award etzioni chosen one finalists discover awards technological innovation computer software work internet softbots research interests include software agents machine learning human computer interaction document multi service search comparison using metacrawler document generated using latex html translator version fri jan copyright nikos drakos computer based learning unit university leeds command line arguments latex html split www final tex translation initiated erik selberg mon oct pdt erik selberg mon oct pdt
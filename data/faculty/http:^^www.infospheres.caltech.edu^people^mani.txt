date wed nov gmt server apache content type text html k mani chandy k mani chandy page birthday gift mani students snail mail computer science california institute technology pasadena ca secretary diane goodfellow diane cs caltech edu fax projects archetypes archetypes parallel sequential programming plus electronic textbook viewing selecting caltech infospheres project projects formal methods practical applications distributed information collaboration web java internet compositional c parallel programming language based c compositional systems research group center research parallel computation projects formal methods practical applications compositional systems distributed computing corba sdl multicast opendoc unity fortran m parallel programming language based fortran infosphere infrastructure research project distributed programming layer using web java internet problem solving environments specially suited environments enable scientists solve complex problems current students caltech joe kiniry berna massingill adam rifkin paul g sivilotti eve schooler dan zimmerman former students caltech ulla binau phd peter carlin bs ms peter hofstee phd rohit khare bs svetlana kryukova bs ms k rustan m leino phd rajit manohar ms john thornley phd courses caltech cs abc computer algorithms units offered design analysis proofs correctness computer programs program specification methods proving program correctness computational complexity np completeness models parallel concurrent distributed computation searching sorting string matching graph geometric algebraic matrix algorithms linear programming heuristic search discrete event simulation algorithms distributed systems part third term spent studying applications one branch science engineering cs abc distributed computation laboratory units prerequisites cs equivalent laboratory course deals applications systematic design methods theories reasoning correctness performance concurrent programs theories include temporal logics computational complexity analysis probabilistic models statistics discrete event simulation first two terms require program development carried individually groups two third term larger project carried team concurrent programs developed using object oriented languages methods single address space multiple address space systems user interface designs considered within narrow scope designing reliable concurrent systems include human interaction aspects communication protocols static mobile systems distributed operating systems fault tolerant systems studied focus systematic design achieve reliability performance course structured around programming projects using tools limited java world wide web unix processes pipes sockets tcp ip multicast protocols object request brokers corba c extensions cc discrete event simulation packages given alternate years page maintained adam rifkin joseph kiniry last modified thursday aug pdt
date tue nov gmt server ncsa content type text html last modified wed sep gmt content length assignment handout cs assignment introduction c due date time thursday october pm introduction purpose first programming assignment provide experience unix using editor vi emacs simple c programming using gnu c compiler g debugger gdb provided partially written fully specified c program job complete thoroughly test program specifically program implements abstract data type adt handling bounded integer sequence intsequence job intsequence adt represent sequence integers stroring numbers array integers internal representation consists current length sequence plus statically sized array integers hold sequence current contents intsequence type supports five operations takes integer sequence first argument void clear intsequence seq void append intsequence seq int value int length intsequence seq void printn intsequence seq int number void sort intsequence seq clear operation initializes reinitializes sequence empty contain zero elements append operation puts new value end sequence length operation returns number elements currently sequence printn operation prints first n values sequence n number values argument operation sort operation sorts integers sequence ascending order make job simple clear possible provided three files intseq h intseq c prog c file intseq h contains complete c specification adt edit file file prog c contains complete main routine serves test driver adt implementation edit either job make copy file intseq c contains stubbed functions adt operations add actual implementation code debug test code using gdb driver routine prog c provided small set test data files add test cases find important cases files fail exercise sort write sorting function use simple sorting scheme known insertion sort algorithm sorts array data stepping array element time keeping everything left current element sorted understand approach works think array laid left element right element n assuming array contains n elements algorithm steps array left right step current element copied array inserted appropriate place sorted subarray left position copied inserting element requires elements greater values element slide one position right make space efficiency hint tasks finding appropriate insertion point current element sliding greater elements right combined done scanning left position current element copied sliding element one space right value exceeds current element insertion point known spot open either find lesser value bump left end array turn must turn copy source files including intseq c files needed compile program file named readme explains exactly compile files executable program run listing test cases everything must turned electronically paper copies acceptable created directory student turn assignment following command copies file student handin directory cp filename cs public handin prog username replace filename name file want submit replace username login name remember late assignments accepted thus important start working soon finish time however partially finished programs far better programs sure turn whatever ve done even finish assignment however finishing problem anyone first programming assignment finish assignment simple warm exercise seriously re think decision take course remaining assignments considerably challenging finding using files files cs live directory u c cs public html three c files provide test data files subdirectory directory called assign make copy file modifying intseq c assignment subdirectory home directory make subdirectory purpose go private subdirectory home directory cd private create subdirectory mkdir assign cd cd assign copy code file cp cs public html assign intseq c two files create links files e g ln cs public html assign intseq h always using definitions initial test data files everyone else
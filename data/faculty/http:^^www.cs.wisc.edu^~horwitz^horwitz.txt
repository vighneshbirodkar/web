date thu nov gmt server ncsa content type text html last modified mon nov gmt content length susan b horwitz susan b horwitz professor computer sciences department university wisconsin madison west dayton street madison wi usa e mail horwitz cs wisc edu telephone secretary department fax ph d cornell university research interests language based programming environments program slicing differencing merging static analysis programs interprocedural dataflow analysis research summary work mainly involves design implementation language based programming tools help programmers problems like understanding existing programs work would affected proposed modifications understanding textual structural semantic differences two versions program retesting program changing combining pieces old programs produce new program certain semantic guarantees work involved use program representation called program dependence graph pdg operation called slicing also working new algorithms precise interprocedural dataflow analysis previous work interprocedural dataflow analysis mainly concentrated either efficient algorithms specific individual problems necessarily efficient algorithms general class problems thomas reps mooly sagiv developed implemented new algorithm efficient applies large class problems recent publications m shapiro horwitz fast accurate flow insensitive points analysis appear conference record twenty fourth acm symposium principles programming languages paris france january horwitz reps m sagiv demand interprocedural dataflow analysis proceedings acm sigsoft symposium foundations software engineering washington dc october m sagiv reps horwitz precise interprocedural dataflow analysis applications constant propagation proceedings sixth international joint conference theory practice software development aarhus denmark may reps m sagiv horwitz precise interprocedural dataflow analysis via graph reachability conference record twenty second acm symposium principles programming languages san francisco ca january bates horwitz incremental program testing using program dependence graphs conference record twentieth acm symposium principles programming languages charleston sc january horwitz reps use program dependence graphs software engineering proceedings fourteenth international conference software engineering melbourne australia may horwitz identifying semantic textual differences two versions program proceedings sigplan conference programming language design implementation white plains ny june teaching cs
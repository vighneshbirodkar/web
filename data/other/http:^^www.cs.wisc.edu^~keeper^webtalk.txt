date tue nov gmt server ncsa content type text html last modified fri may gmt content length world wide web specification issues world wide web specification issues steven fought may sources w o official specifications internet rfcs drafts www newsgroups experience personal experience working web related programs years webmaster caltech inception november august implemented database search entry tools using forms installed web software packages available unix followed web newsgroups beginning currently webmaster uw cs origins world wide web conceived tim berners lee others cern designed foster communication high energy physicists first specification called hypertextual system tim berners lee w o asked design system would allow physicists different parts world collaborate projects share information using internet decided existing tools weren adequate berners lee decided use hypertextual model set solve number problems posed model first problem hypertext system need way point information objects carry pointer instead object solution uniform resource identifier uri specification general specification makes possible point document anywhere uniform resource locators uris uri specification defines way encapsulate name registered namespace label namespace producing member universal set words uri specification defines superset existing possible namespaces namespace given label incorporated uri space properties uris extensible new naming schemes easily added complete possible encode naming scheme printable uris encoded bit ascii designed least partially human understandable communicable parts uri specification uris consist two parts prefix indicates namespace referenced followed colon string format defined function prefix extensibility requirement met ability register new unique prefixes completeness requirement met ability encode binary information string following prefix base instance printability requirement left implementation specific namespace encodings special considerations reserved characters uris reserved escape character non bit ascii characters reserved characters used uris easily reserved delimiter hierarchical set substrings reserved used characters indicate current previous level hierarchy respectively reserved separate uri fragment identifier reserved delimit boundary uri queryable object reserved shorthand notation space real signs must encoded reserved use special significance within specific namespaces relative uris reserving allowed specification relative uris work much like relative paths filesystem relative uri found uri containing document used reference construct new full uri following semantics partial uri starts number slashes parent uri searched first occurrence number slashes relative uri substituted remaining part parent provided greater number consecutive slashes remaining part parent within result occurrences xxx recursively removed xxx complete path elements examples relative uri substitutions parent uri http www b c d e f following partial uris result listed full uris g http www b c d e g g http www g g http g g http www b c d g g h g h note using parent uri http www b c d e would yield results second problem pointing documents uri specification need able point existing documents available web solution uniform resource locator url specifications one supported internet protocol examples ftp ftp ftp cs wisc edu condor telnet telnet keeper notquite spacely cs wisc edu http http spacely cs wisc edu home html side note work urn specification working group ietf attempting define uniform resource name specification urns meant persistent objects regardless machine server configurations changed urns solve problem urls dns solves ip numbers third problem pointers document objects need place put solution html hypertext markup language design features html defined sgml document type definition allowing easy processing html sgml parsers structural markup simple quick render lookahead human readable editable special tools needed create html documents html beyond scope talk side note multimedia mime original web browsers used extension file determine type method several disadvantages single extension may used one kind file file extensions generally carry enough information allow identification file format human everyone agree file extensions map types files fix problem parts existing mime multipurpose internet mail extensions system integrated web clients servers mime works document transmitted assigned mime type server mailer assignment often made based file extension assignment made locally user make sure appropriate type defined mime type description contents file file received browser uses mime type find appropriate viewer file mime features new mime types added time official organization exists register distribute mime types several implementations either end mime system exist many different architectures fourth problem transfer documents author user solution hypertext transfer protocol http simple summary features http would ignore serious changes role precipitated changes www tools chronological summary changes http features interesting http original features purpose first version http distributed widely request could made get url url http url prefix stripped document pointed url would returned browser http designed deliver documents lowest amount overhead possible ftp perform function requires costly login process http stateless protocol berners lee saw document would transferred read link would followed another document possibly server advantage keeping socket open http document typing cgi next version http designed fix number problems previous versions add new features major change addition document typing using mime related headers addition methods included addition get method head get returns headers put allows data sent server stored supplied url widely used post creates new object based data sent linked object specified supplied url link links object specified object widely used unlink removes link information object important methods put used conjunction common gateway interface common gateway interface cgi forms forms specification creating fill form within html document browser implements forms responsible packing information special format form submitted sending specified url cgi specification script http server url url accessed script run output sent client used conjunction forms set scripts carry dialogue client interesting note http stateless cgi scripts often play tricks ensure state conversation stored document returned client problems caused inlined documents development mosaic one programmers marc andreesen decided wanted add support displaying pictures inside documents every decision made andreesen new netscape communications company since designed quick dirty solution served needs caused significant problems could blame people rather find way encapsulating picture document decided general model browser perform additional request picture changed model berners lee originally envisioned created performance problems caused overhead forming tcp socket proposed solutions inlining problem two proposed solutions problem inlined documents include multiple get method http require two sockets created one original document supporting documents http ng based top session protocol architecture allows multiple low level virtual connections encoded top one socket socket could kept open browser finished server http proposed additions protocol additions include support advanced applications encryption sensitive data care taken ensure protocol extensible
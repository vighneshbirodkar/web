date wed jan gmt server ncsa content type text html cse laboratory assignment cse advanced logic design ted kehl fall lab programming pals plds distributed oct due ta option objectives completing lab know program pals plds construct debug sequential circuits pld programming abel file describing simple bit counter upcount abl class directory program pld instructions furnished beginning class implement function use clock generator provide clock input use switches provide inputs pld leds observe outputs intel c pld pin configuration input clk input vpp inputs input output module upcount title simple bit counter enable reset following line needed synario upcount device e clk pin clock q q q pin istype reg counter outputs en pin counter enable signal reset pin counter reset signal output q q q bit number equations output clk clk reset output else en output output else output output const n test vectors clk reset en output c x reset c increment c hold c increment c increment c increment c increment c hold c increment c increment c increment const repeat n c increment const c increment c increment c increment c increment c x reset end upcount completed testing counter modify abel program make counter count well adding another input specifies whether counter count next clock edge remember modify test vectors appropriately programming pld create new project double click virtual device bring dialog box asking kind device want switch choose standard plds eo tells synario create jed file pld programmer programs pin pld provided lab kit create new source within main synario program asked type source specify abel hdl file enter module name file name new abel file copy netscape mosaic source code provided paste copied text synario editor containing new abel file synario might stick abel code editor automatically project simply delete code paste able save new abel file return main synario environment click eo double click jedec file compiles successfully get jedec format file jed suffix copy jed file msdos floppy disk blow fuses follow directions given lab stephen lee tasks program pld implement counter modify abel program implement counter use switches leds inputs outputs debounced push button switch provide clock signal single step pushing switch ii constructing circuit need plds keypad lcd screen potentiometer constrast control schmidt triggers resistors capacitors switch debouncing clock provided pulse generator remember pulser output open collector need pull resistor kohm work fine course ll need trusty logic probe debouncing switches keypad nine wires one column one row common wire connected ground common connection switches column keypad column wires wires total key pressed corresponding column row wires connected common signal see figure therefore keypad called wires active low key pressed others pulled high resistor connections v debounce type switch keypad single pole single throw spst require special analog circuit consisting resistor capacitor schmitt trigger ls connect pull resistors capacitors eight outputs keypad shown figure top next page sizes devices chosen rc time constant approximately ms enough eliminate bounce even inexpensive keypad switches test keypad logic probe key pressed two switches closed thereby shorting two capacitors ground quickly discharging makes output schmitt trigger inverters immediately go high switches momentarily disconnect capacitor start recharging slowly due large rc time constant time constant longer bounce time won enough time charge capacitor enough trip schmitt trigger output stay high internal hysteresis schmitt trigger prevent switching input gets high switch let go enough time capacitor eventually charge v output schmitt triggers low also note row column wires corresponding depressed key may change value time lcd details documentation lcd display distributed lab also excellent faq describing lcd module accompanying figure character set also article physics lcd displays text file collection likely complete lucid data sheet details parts available ttl data book online motorola data book server construct circuit phases first build keypad decoder synchronizer transmitter receiving end first build portion fsm reset display print character possibly hard wired initially finally transmitter make sure transmitter working plugging together see values transmitted run clock hz able make progress week perhaps even complete circuit cover use logic analyzer debug sequential circuits next lab real problems might want wait hand dueta option demonstrate counter using switches leds ta sign abel listing abel program listing test results equations pld pinout ted cs washington edu
date wed nov gmt server apache content type text html content length last modified tue nov gmt c fall indiana university computer science department c programming languages fall general information overview textbooks syllabus assignments tools advise grading administrivia course evaluation general information instructor christopher chris haynes email chaynes indiana edu associate instructor gustavo gomez email ggomezes cs indiana edu credit hours requirements c prerequisite c pre corequisite lecture section meets tuesday thursday p p lh discussion sections section meets monday p p se section meets wednesday p p li office hours tuesday p lh f chris haynes p lh f chris haynes thursday lh gustavo gomez p lh f chris haynes p lh f chris haynes local newsgroup ac c web url http www cs indiana edu classes c catalog description systematic approach programming languages relationships among languages properties features languages computer environment necessary use languages overview course provides introduction foundations programming languages allowing thorough understanding programming language semantics critical implementation characteristics provides basis best choice use existing languages well language design interpreters language processing programs used throughout present essential elements programming languages precise analytic manner extensive use interpreters course also develops skill meta linguistic abstraction powerful programming paradigm thoroughly understand programming languages topic necessary variety models views varying levels abstraction course employ range models high level almost mathematical semantics low level almost assembly language emphasize connections levels scheme used meta programming language throughout course course fundamentals basis programming languages scheme special attention given modeling semantics java language via series type checkers interpreters slide presentation available condensed form summarizes points others topics include induction recursion scope direct semantics interpreters continuation passing style continuation semantics interpreter imperative form stack architecture static dynamic semantics object oriented programming object oriented run time architecture materials required essentials programming languages friedman wand haynes text known hereafter eopl available three big textbook bookstores aristotle u bookstore may get cheaper find grad undergrad student taken c c willing part recommended little schemer friedman felleisen also available bookstores couple copies reserve swain hall library little lisper older similar materials may required semester materials announced class made available white rabbit indiana near kirkwood cost dollars cover copying costs syllabus read indicated material week week begins expected understand material first reading read first much better prepared class discussion sections read material first two weeks first week much review material java made available later links list lecture scripts week september re introduction scheme eopl preface chapter chapter section chapter section week september static properties programs eopl remainder chapters week september quiz imperative programming chapter sections simple interpreters eopl chapter section week september local binding procedures assignment eopl sections week september recursion dynamic scope eopl rest chapter weeks october continuation passing style eopl chapter sections week october cps rules eopl chapter sections first exam week october representation independent interpreter continuations records reified continuations eopl sections first class continuations exception handling week october imperative form control stack architecture eopl sections thoroughly week november environment stack architecture eopl rest chapter general information responsible code details paramater passing eopl chapter responsible material involving arrays week november second exam introduction object oriented programming java eopl section week november java programming tutorial static methods java type checker interpreter week november thanksgiving break week december object oriented programming java style eopl section general information also emphasis importance virtual member functions c illustrated virtual c week december advanced java topics classes attendance discussion sections mandatory usually problem set problems given beginning discussion section class broken small groups solve problems ai leading discussion section go groups answering questions asking questions work done far class material answers questions progress problems given discussion section count toward final grade lectures may also conducted manner lectures present material found book miss class assignments part assignments handed email automatic checker feedback emailed back almost immediately assignments may prepared system choice run properly using chez scheme version homework graded hand automatic checker detect errors assignment usually given week assignments added list p friday due p next friday late assignments accepted assignment due solution basic scheme f pm ss static properties f pm ss simple interpreter f pm ss procedures assignment f pm ss recursion dynamic scope f pm ss exam class r assignment solution cps transformation f pm ss cps abstract continuations f pm ss cps registers stacks f pm solution exam class r assignment solution call value call reference pm tools advise web information use scheme iu including emacs support using scheme extensions mentioned eopl points deducted homework quiz exams cardinal rules indentation violated make habit follow whenever write scheme code greatly aid scheme programming though emacs big help strongly suggested write solutions exercises hand check carefully correctness approaching computer give practice indentation hand necessary exams importantly cases much easier find mistakes course exercises thinking debugging assignments count whole lot toward grade extensive experience shown students make serious effort assignments independently poorly exams experience also shown students spent much time paper pencil approaching computer would spend much less time debugging better understand programs hour pencil often worth several keyboard grading following tentative schedule evaluation approximate percentage contributions final grade self assessment quizette percent scheme quiz r september class percent write minutes several programs similar first assignment answers exam one r october class eopl chapters percent sample exam last spring available exam two r november class material covered class november include chapter parameter passing percent sample exam last spring available final exam december p p lh percent final cover whole course emphasis material second exam sample final last spring available assignments percent subjective assessment based attendance participation preparation lectures discussion sessions percent sample exams provided provide general idea expect content course semester differs somewhat especially second exam administrivia incompletes incomplete final grade given prior arrangement exceptional circumstances conforming departmental policy bulk course work completed passing fashion possibly important dates m september last day pass fail course w october last day drop course w december last day drop course dean approval academic integrity ethical pleasure read computer science department statement academic integrity dry important course evaluation end semester please complete electronic course evaluation forms chris haynes discussion section ai gustavo gomez chris haynes chaynes indiana edu
mime version server cern date sunday nov gmt content type text html content length last modified thursday oct gmt cs sample questions cs sample questions answers q relational algebra sql consider following schema used campus book store toy toyno toyname toytype color price book bookno bookname booktype price manuf mname address phone stock itemno mname quantity primary keys boldface assume stock itemno value refers either toy book manufacturer make toys books express following queries relational algebra sql print phone numbers manufacturers make toy type bicycle book type animal story print toy types every known manufacturer makes least one toy type print names manufacturers make toy type truck book type bedtime story print names purple toys made acme toy company store least stock print phone numbers manufacturers make expensive book known store answer last updated thu oct edt q files consider relation r attributes variable size suggest record structure tuples r suggest page structure pages r instead storing entire tuple record horizontal partitioning relation another alternative store column value tuples contiguously vertical partitioning vertical partitioning usually bad idea records page usually belong relation bad idea store records multiple relations page find one counter example last two questions e one query vertical partitioning good one good store multiple relations records page answer q indexes consider b tree index write pseudo code insertion algorithm leaf page involving splitting case overflow change pseudo code consider redistribution neighbor cases approach make sense consider many vs concurrent users desire minimize disk usage etc answer q memory management consider lru replacement policy buffer pool describe database query processing scenario lru ideally suited describe scenario lru terrible principle behind lru principle fail second scenario way improve lru correctly apply principle work cases answer q memory management suppose enough main memory say gb system hold relation r mb relation mb want join r using nested loops join difference tuple time nested loops join page time nested loops join blocked nested loops join algorithms learnt would recommend best one use find counter example answer previous question invalid answer q join algorithms consider problem joining tuple relation r tuple relation relations tuples fit page system page size k bytes join predicate specifies equality join attributes r b explain grace hash join algorithm works total o cost perform grace hash join r assuming enough memory available discuss memory needs grace hash join worst case scenario might occur grace hash join used compute non equality join explain answer q query processing asked write duplicate eliminating projection operation new relational dbms boss expert join algorithms want impress adapting join techniques problem sorting used projection would make efficient use main memory task hashing used would make efficient use main memory task get promotion showing boss code used processing aggregates groupby well answer q query optimization system r optimizer selinger paper describes one particular query optimization algorithm sql queries assumption uniform distribution column values used would change histograms maintained column frequency distributions notion interesting orders system r supported grace hash join analogous notion would change cost formulas access paths take account difference sequential random o equivalence transformations relational algebra make join optimization large search problem show example system r optimizer would even consider optimal query plan answer q query optimization several heuristics also used query optimization demonstrate selection pushdown case doesnt work demonstrate projection pushdwon case doesnt work consider query expensive selections projections addition joins suggest extension system r optimizer join enumeration strategy also consider appropriate placement expensive selections projections answer
date tue nov gmt server ncsa content type text html last modified thu nov gmt content length cs software process management cs software process management spring tentative information lasted updated november computer science home page univ idaho home page quick links additional course material yet implemented course schedule term project guidelines presentation slides assignments references www links instructor william junk computer science dept university idaho moscow id telephone fax alternate e mail billjunk cs uidaho edu video tapes available spring offering course available purchase rental contents course similar described contact engineering video outreach information course description course view software engineering activities management perspective centering around study software development process view process terms constituent tasks focusing flow information interconnection tasks highlight interdependencies created work products approach contrast traditional software engineering course prerequisite course focuses techniques employed accomplish technical activities topics covered include software development paradigms life cycles waterfall evolutionary incremental spiral software process maturity capability maturity model bootstrap model software process assessment improvement change management concepts process product metrics organization management strategies risk assessment although study several management topics course software project management cover manage people resources project management discussed constituent tasks overall context producing software product participation class activities individual activities term project final exam required additional effort required graduate credit prerequisites cs software engineering instructor permission ntu students something equivalent se substantial work experience considered equivalent knowledge modern software engineering techniques assumed computer access none required access use internet course material electronic mail expected goals goal course provide systematic study software development process emphasis define manage course expose participants several possible approaches software development identify tasks essential successful projects discuss tasks interact discuss organization develop mature software development process course advocate particular development approach rather take critical look popular talked strategies successfully completing course participants familiar terminology used topical area read analyzed important historical current literature addressing software life cycle models software process issues understand basic concepts embodied prevalent software life cycle models including knowledge advantages disadvantages may appropriate use life cycle approach able construct represent software life cycle organization project able construct project software life cycle consistent specific software life cycle model understand factors important building capability maturity software development organization able assess maturity level software development organization understand factors contribute successful process change implementation able plan implement software process improvement activity texts mark paulk et al capability maturity model guidelines improving software process addison wesley journal articles historical current importance material may provided instructor alternate resources interested additional information subject following list presents resources may find useful course required access resources student without access disadvantage course managing software process watts humphrey addison wesley capability maturity model software version mark c paulk et al cmu sei tr software engineering institute february key practices capability maturity model version mark c paulk et al cmu sei tr software engineering institute february software process assessment improvement bootstrap approach p kuvaja et al blackwell uk ieee std standard developing software life cycle processes ieee grading cs cs participation outside reading book n process assessment assignment process definition assignment individual project final exam undergraduate graduate sections course graded separately due slightly different schedules campus campus sections graded separately participation students expected make regular contribution class campus students prepared offer comments regarding material presented ask interesting questions class respond good answers questions asked class calling attention high quality article included course readings package topic discussed class encouraged campus students communicate regular basis using telephone fax e mail comment material presented class provide feedback industry practitioner perspectives regarding topics studied relate personal experiences relevant class discussions course ask questions campus students may also make contribution via e mail significant contribution every week considered minimum satisfactory participation level portion class session devoted discussion feedback based questions comments supplied campus assignments required perform software process assessment make report findings may evaluate software development organization familiar may evaluate case study make available practical application course material expected develop process definition representation portion work function process definition defines tasks interfaces people organizations outside readingstudents enrolled graduate credit cs required read one book related development life cycles organizational maturity process improvement list acceptable books provided term projectthe course also requires approved term project practical application concept studied course project expected extensive graduate students undergraduates project might prepare software management plan following ieee standards develop software process simulation model organization study software process metrics organization expected propose topic receive approval starting additional guidelines provided activities assignment projects etc sent directly video outreach office address listed work us mail federal express ups final exam must sent examination coordinator video outreach office probably want keep copy work submit case something gets lost mail unfortunately happen course outline approximate software life cycle paradigms sessions waterfall model incremental development model evolutionary development model object oriented model maintenance model cleanroom model spiral model ii software processes maturity evolution sessions software processes sei capability maturity model bootstrap model ieee standard maturity evaluation iii software life cycle processes sessions requirements management project planning management project tracking oversight software subcontract management software quality assurance software configuration management process definition training product engineering intergroup coordination peer review process management software quality management defect prevention risk analysis risk management installation support iv change management sessions computer science home page univ idaho home page billjunk cs uidaho edu
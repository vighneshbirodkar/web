date mon nov gmt server ncsa content type text html last modified wed sep gmt content length tetra multi platform instruction trace analyzer tetra multi platform instruction trace analyzer tetra tetra tool evaluating serial program performance resource control constraints fine grain parallel processors tetra written todd austin austin cs wisc edu tetra primary advantage user ability quickly generate performance metrics yet designed architectures user needs specify capabilities architecture e g number functional units issue model etc rather implementation tetra many options parameterize data control resource constraints placed execution graph constructs including control execution model memory disambiguation capability control model based either cfg cdg branch prediction mechanism e g fixed taken bit btb functional unit supply latencies window size e g total reservation stations renaming capability register memory constructing execution graphs limited resources tetra provides five user selectable schedulers varying cost performance capability history scheduler simulates line capability line list scheduler list best fit scheduler list first fit scheduler round robin scheduler random scheduler addition tetra provides number options describing analyses performed constructed execution graph including generation parallelism profiles value sharing distributions storage demand profiles value lifetime distributions disassembled parallel instruction traces software modular allowing easily used test bed new ideas tetra currently targeted mips sparc based systems porting architectures supported qpt another capable tracer requires little coding constants instruction dependency decoder two papers describing development application tetra references manual page also available web page even re interested amount parallelism serial programs may still find tetra useful planning trace analysis especially qpt included source package useful goodies including instruction decoders disassemblers dependency analyzers machine independent interfaces mips sparc architectures qpt trace generator qpt trace decoder gnuplot compatible distribution generator portable fixed size heap allocator system requirements ll need following install tetra sparc mips based unix system ansi c compiler preferably gnu gcc qpt program profiler tracing system written james larus gnu bfd library built host architecture gnu liberty library tetra tested following configurations sparc sunos gnu gcc primary testing configuration sparc sunos sun acc mips ultrix gnu gcc mips ultrix mips cc version get tetra source release tetra version available via anonymous ftp ftp cs wisc edu file sohi code tetra tar z clicking highlighted file name fetch file machine learn tetra manual page included source distribution includes installation user instructions addition two papers describing implementation application tetra tetra evaluation serial program performance fine grain parallel processors todd m austin gurindar sohi university wisconsin madison technical report july dynamic dependency analysis ordinary programs todd m austin gurindar sohi proceedings th annual international symposium computer architecture may made tetra tetra result research conducted todd austin guri sohi wisconsin multiscalar group university wisconsin madison tetra written todd austin austin cs wisc edu portions code written copyrighted alain k gi author fibonacci heap code regents university california developer avl tree code development code supported grants national science foundation grant ccr plus software capitalization supplement office naval research grant n last updated september
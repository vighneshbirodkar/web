mime version server cern date friday jan gmt content type text html content length last modified wednesday mar gmt introduction code introduction code code tutorial overview code visual parallel programming system thought framework allowing user compose sequential code parallel program fundamental idea users create parallel programs drawing annotating graphs graph diagram consists nodes represented icons code arcs interconnect nodes diagram shows computation communication structure nodes represent computations arcs represent flow data one computation another parallel programs created composing nodes graphs users draw nodes interconnect arcs standard way creating program code first user draws graph shows parallel program communication structure user annotates graph filling forms describe properties nodes arcs graph example user must specify sequential computation node performs finally user runs program code translates compiles executes simple example user first runs code empty window appears graph may drawn window code graphs contain several different node types different meanings uses different node type represented different icon important type node computation node represents sequential computation nodes may composed form parallel programs drawing arcs define data flow figure shows complete code program uses computation nodes arcs program integrates function interval dividing interval half integrating piece separately results added form final answer program consists four computation nodes arcs represent data created one computation needed another program runs first executes fires computation node called split interval divides interval half sends endpoints sub intervals integ half nodes nodes integrate function interval receive split interval run parallel since arcs node sum print waits results two integrations prints sum annotating graph drawing graph first part creating code program annotating comes next graph defines parallel structure program annotations define aspects program like computations performed conditions node may fire data types defined program etc annotations added filling object annotation form figure shows annotation form computation node split interval note annotation forms displayed using information tool upper left hand corner screen clicking code object notice start node option selected means node first one executed program begins one start node allowed likewise one stop node allowed fires program execution ends sequential computation defined node part specification specification also includes mapping data incoming outgoing arcs local data used computation well conditions node allowed fire discuss details specifications next section home page specifications introduction code emery cs utexas edu last updated august
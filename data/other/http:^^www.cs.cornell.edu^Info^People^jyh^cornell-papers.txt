mime version server cern date sunday dec gmt content type text html content length last modified thursday aug gmt jason hickey papers cornell cornell papers jason j hickey semantics objects type theory forthcoming tech report also submitted popl postscript file formal definitions theorems semantics presented paper bare formalizations plan provide guide makes easier walk proofs abstract present semantics object calculi type theory interpretation serves provide solid mathematical foundation object oriented programming calculi consider support self application method selection functional method update subtyping method subsumption interpretation provides support without need recursive types represent self provides new analysis objects requirements subsumption expressed directly method types jason j hickey formal objects type theory using dependent types postscript file abstract paper present extension basic type theory allow uniform construction abstract data types adts many properties objects including abstraction subtyping inheritance extension relies allowing type dependencies function types range well founded domain using propositions types correspondence abstract data types identified logical theories proofs theories objects inhabit corresponding adt also slides talk pdf slides better acrobat postscript slides john o leary miriam leeser mark aagard jason hickey non restoring integer square root case study design pricipled optimization postscript file abstract theorem proving techniques particularly well suited reasoning arithmetic bit level relating different levels abstraction paper show non restoring integer square root algorithm transformed efficient hardware implementation top level standard ml function operates unbounded integers bottom level structural description hardware consisting adder subtracter simple combinational logic registers looking hardware obvious function circuit implements top level prove algorithm correctly implements square root function show series optimizing transformations refine top level algorithm hardware implementation transformation verified places transformations motivated knowledge operands guarantee verification decomposing verification effort transformations show hardware design implements square root implemented algorithm hardware altera programmable device full custom cmos jason j hickey formal abstract data types postscript file abstract current constructive type theories powerful systems describing mathematical objects complex dependencies types computational values making expressive enough encompass large ares mathematics programming however body formal knowledge type theory expands problem managing mathematical domains proofs becomes increasingly significant though objects theory formal domains paper show apply methods formal data abstraction organization mathematical domains process expand tools data abstraction include reusability namespace organization providing environment used defining objects within domain organizing domains within type theory organizing theories within system environment require extending expressivness inductive definitions within type theory include dependent characteristics type theoretical domains note also contains summary nuprl type theory appendix
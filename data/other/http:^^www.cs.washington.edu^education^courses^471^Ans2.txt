date mon dec gmt server ncsa content type text html answer sheet answers hints review sheet trend r m machine tends percentage branch instructions l machines tend lowest percentage branch instructions reason every computation task exists fixed number branches encoding different kinds machines differs r m compact encoding highest percentage branches l machine ld w r b ld w r c add r r r st w r words r m machine ld w r b add r c st w r words r m machin add w b c words page get instructions gain using perfect register window total execution speed system call return trap interrupt page table entry change context switch basically instruction run length number instructions branches one would expect l machines larger run length simply lowest percentage branch intructions refer question bc br bcr brr loop control procedure call total centered branch table contains prefetched instructions retained preciously executed instructions words bytes would needed l architecture least effective refer figure instructions program depends execution data values computed previous three instructions cycles d ex mem mem wb add d ex mem mem wb bc blank d ex mem mem wb target blank blank blank tif tif d inline blank blank blank d add d ex mem mem wb add blank d blank blank ex mem mem wb question cycles delay question cycles delay previous ag instruction waiting result former instruction ag controlled output decocde new decode stored ag finished compilers could make use reorganize instructions decoding pipeline delay reduced free instructinons could executed run instruction basically instruction occupies execution unit many cycles basic instructions e g multiply divide unit
date tue nov gmt server ncsa content type text html last modified wed nov gmt content length peter wyckoff home page peter wyckoff ph d student th year department computer science courant institute mathematical sciences new york university mercer street new york ny bandalier national park new mexico contents brief biography resume html research interests publications contact information brief biography ph d candidate computer science department courant institute mathematical sciences new york university received b computer science suny stony brook m computer science nyu grew new york city attended day school city country finally trinity research interests interested theoretical practical ways address fault tolerant computing response time critical main area research lite transactions properties transactions light weight traditional transactions properties acid useful fault tolerance traditional transactions expensive practical many areas previous light weight transactions e g group commit addressed increased server throughput however increased throughput achieved expense increased client response time many situations real time systems tradeoff desirable even practical unlike traditional transactions lite transactions commit disk rather commit memory makes light allows provide temporal guarantees traditional systems makes applicable response time guarantees needed server fails committed lite transactions may lost case system recovered last checkpoint due volatile nature lite transactions pose challenge low overhead non client blocking distributed checkpointing developed efficient checkpointing algorithm lite transactions non blocking clients requires little synchronization servers applied lite transactions linda model linda may used harness aggregate power networks workstations however linda fault tolerant linda processes become obtrusive user finds machine busy someone else processes piranha system used limited types applications working prototype system called persistent linda apply lite transactions linda model persistent linda may used harness aggregate power networks workstations unobtrusive manner processes automatically killed ie kill pid one machine restarted elsewhere fault tolerance mechanisms built lite transactions allow processes recover last commit point fact type architecture originating machine final destination machine different fact processes migrated independently crucial utilizing networks workstations parallel applications worked extensively current version prototype approximately lines c includes designing implementing overhead locking degree lite transactions designing implementing buffered writes piggybacked transactions operations re implementing tuple data structure efficiency portability re implementing communication library portability another project working provide transparent shared memory fault tolerance runtime system capable running efficiently highly unpredictable networks e g www java type language runtime system programmers rich environment write applications publications peter wyckoff achieving high performance robustness parallel software loosely coupled systems survey thesis proposal november postscript arash baratloo mehmet karaul zvi kedem peter wyckoff charlotte metacomputing web ninth international conference parallel distributed computing systems september postscript tom brown karpjoo jeong bin li dennis shasha peter wyckoff persistent linda user manual nyu department computer science technical report december appear karpjoo jeong dennis shasha suren talla peter wyckoff approach fault tolerant parallel processing intermittently idle heterogeneous workstations submitted twenty seventh international symposium fault tolerant computing contact information office broadway room new york ny home email wyckoff cs nyu edu finger wyckoff slinky cs nyu edu
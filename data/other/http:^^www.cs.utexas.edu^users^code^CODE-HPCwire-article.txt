mime version server cern date friday jan gmt content type text html content length last modified thursday oct gmt code visual parallel programming may come age code hpcwire hpcwire reprinted permission visual parallel programming may come age code alan beck editor chief austin texas although visual parallel programming environments new unusually simple direct techniques employed university texas code computationally oriented display environment abstract declarative graphical environment parallel programming promises different also much effective approach entire task within code environment parallel program directed graph data flows arcs connecting nodes representing sequential programs sequential programs may written language code architecture independent thus code system produce parallel programs pvm based mpi based networks well sequent symmetry cray sun sparc mp currently code graphical interface runs suns order learn operation code hpcwire interviewed godfather james c browne regents chair computer sciences professor physics electrical computer engineering university texas following selected excerpts discussion hpcwire level skill must programmer bring code browne special programming skills needed traditionally one works procedural level stipulating computation done code make transition something done re trying high level ve used code undergraduate parallel programming classes given students hour instruction turned loose graphical environment work way forgiving course already know program traditional languages clearly must understand parallelism conceptual level hpcwire fair say better programmer better able utilize code browne let take another tack say better people understand applications better ll able use code write program language like hpf lot nonintuitive things like partitioning matrices handling distributions etc code must understand parallel computation structure basically directed graph many paths different level conceptual understanding ve used code undergraduate parallel programming classes given students hour instruction turned loose graphical environment work way hpcwire given certain level skill much efficiently parallel programmer function code browne order magnitude effectively need even better ve done change level abstraction programs described like writing book simply writing outline smart word processor consult encyclopedias dictionaries fill rest code uses abstract general model parallel computation hierarchical dependence graph lot buzzwords graphical environment speaks let say old fortran program bunch subroutines want invoke many parallel copies associate one subroutine node graph want run n copies parallel connect rest program simply draw arcs among routines want connected code takes care parallel programming book keeping like copy get touch input output synchronize routines hpcwire doesn favor coarse grained approach browne definitely three years ago asked data parallelism could simply represented dependence graph model construct graph node represents part computation matrix awkward thought introduce additional annotation arcs says data flowing arc split pieces piece sent copy routine arc end fine grained data parallelism embedded graphical model paper approach integration data parallelism graphical model presented last international parallel processing symposium hpcwire limitations approach browne lack familiarity need change way think see re messing people minds intrinsic limitations nodes nothing less fortran c subroutines conceptual limitations back ends compile shared memory pvm mpi back ends give us one graph click icon back end want compile optimization different environment reason approach program development isn particularly well accepted scientific engineering community accustomed business certain way working certain level abstraction method require people change way think people change way think slowly compile shared memory pvm mpi back ends give us one graph click icon back end want compile optimization different environment hpcwire competitors browne many people worked graphical models parallel programming long time good systems ted lewis ppse system oregon state group used work jack dongarra university tennessee produced system called hence similar several interesting graphical programming systems encountered similar results really neat technology get people trained like like major paradigm change hard people make paradigm shifts great part benefit graphical interface although makes programming easier fact re using general abstract model parallel computation hpcwire still refining system browne yes re still trying better integrate data parallelism dependence graph model also re developing debugger normally debugging parallel programs difficult particularly distributed ones race conditions wrap hands around problems really good debuggers parallel systems although strong academic work done example bart miller university wisconsin debug code play back execution animating graph ve cleanly separated notion computation notions communication interaction hpcwire feel type model fundamental impact parallel programming browne think next years people learn change everybody graphical workstation front whole idea raising level abstraction people program take effect truly believe change practice programming going higher levels abstraction change next years years since wrote first program free alpha release code available information see web site http www cs utexas edu users code copyright hpcwire redistribution article forbidden law without expressed written consent publisher free trial subscription hpcwire send e mail trial hpcwire tgc com emery cs utexas edu last modified tue oct cdt
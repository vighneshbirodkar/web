date tue nov gmt server ncsa content type text html last modified thu mar gmt content length logic functional programming group sfu logic functional programming group sfu address simon fraser university burnaby b c canada v phone fax director ver nica dahl school computing science sfu contact fred popowich school computing science sfu members harvey abramson department computer science aizu university hassan kaci mpr teltech senior nserc chair intelligent software systems romas aleliunas center systems science sfu steve thomason department mathematice sfu warren burton school computing science sfu phil winne faculty education sfu jim delgrande school computing science sfu bill havens school computing science sfu jia wei han school computing science sfu lou hafer school computing science sfu ron harrop department mathematics sfu david poole department computer science ubc michael rochemont department linguistics ubc bill wadge department computer science university victoria maarten van emden department computer science university victoria associate members richard dearmond department linguistics sfu john jones school engineering sfu visiting scientists dominique vellard d partement d informatique universit de nantes paul tarau d partement d informatique universit de moncton post docs jamie andrews genesis logic functional programming group formally established independent research group sfu policy ac strongly interdisciplinary group comprising members six sfu units computing sciences linguistics mathematics centre systems science education engineering two ubc units linguistics computinc sciences university victoria aizu university japan area logic programming art using logic describe knowledge human oriented way possible traditional programming languages achieved describing problem domain terms facts rules written simple subset first order logic hidden theorem prover solve particular problem domain deducing needed facts facts rules stored thus program declaratively largely terms needs done rather logic programming become heart fifth generation computing project objectives group objectives state art theoretical practical aspects developing declarative programming tools particular logic programming functional programming constraint logic programming logic grammars investigate uses tools concrete fifth generation computing applications facilitate result transfers collaborations academic units industry specific research interests building existing logic functional programming tools group develops new tools e g logic grammars investigates theoretical implementation aspects develops fifth generation software areas natural language processing front ends knowledge based systems analysis generation translation linguistic theory automation deductive databases knowledge representation constraint logic programming hardware design probabilistic systems expert systems related areas neural networks parallelism also investigated collaborations group members solid record successful collaboration industry including record setting research contract ibm canada generating machine readable error messages research contract french government automatic consultation industrial catalogues french two research contracts canadian workplace automation research centre laval automatic translation agricultural reports group also collaboration agreements european universities discussing potential collaborations please contact group director dr ver ocute nica dahl equipment group laboratory located asb contains sun sparcstation ipx runs quintus prolog macintosh lcii runs als lpa prolog ibm personal computer several video terminals sparcstation mac purchased nserc css prg equipment grants ibm terminals purchased funds ibm sur grant nserc operating grant respectively acknowledgements group gratefully acknowledges financial support nserc css prg form infrastructure equipment grants also grateful sfu css use facilities
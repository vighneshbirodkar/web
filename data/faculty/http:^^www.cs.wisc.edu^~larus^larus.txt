date thu nov gmt server ncsa content type text html last modified fri nov gmt content length james larus home page james larus larus cs wisc edu associate professor computer science department computer sciences university wisconsin madison west dayton street madison wi usa larus cs wisc edu phone secretary julie fingerson thea sklenar departmental office fax education research interests research projects upcomming courses software recent papers ph d graduates summary education ph d university california berkeley m university california berkeley b harvard college research interests programming languages compilers particular languages compilers parallel machines design programming shared memory parallel computers compiling symbolic languages program profiling tracing program executable editing research projects wisconsin wind tunnel wwt c large grain data parallel programming language executable editing library eel courses cs data structures cs java software spim qpt eel warts recent papers efficient path profiling thomas ball james larus appear micro december parallel programming c large grain data parallel programming language james larus brad richards guhan viswanathan gregory v wilson ed parallel programming using c mit press teapot language support writing memory coherence protocols satish chandra brad richards james larus acm sigplan programming language design implementation pldi may instruction scheduling executable editing eric schnarr james r larus appear workshop compiler support system software wcsss february efficient support irregular applications distributed memory machines shubhendu mukherjee shamik sharma mark hill james larus anne rogers joel saltz fifth acm sigplan symposium principles practice parallel programming ppopp july eel machine independent executable editing james larus eric schnarr acm sigplan conferences programming languages design implementation pldi june tempest substrate portable parallel programs mark hill james larus david wood compcon spring march static branch frequency program profile analysis youfeng wu james larus th annual ieee acm international symposium microarchitecture micro november application specific protocols user level shared memory babak falsafi alvin lebeck steven reinhardt ioannis schoinas mark hill james larus anne rogers david wood supercomputing november time spent message passing shared memory programs satish chandra james larus anne rogers sixth international conference architectural support programming languages operating systems asplos vi october lcm system support language implementation james larus brad richards guhan viswanathan sixth international conference architectural support programming languages operating systems asplos vi october fine grain access control distributed shared memory ioannis schoinas babak falsafi alvin lebeck steven reinhardt james larus david wood sixth international conference architectural support programming languages operating systems asplos vi october cachier tool automatically inserting cico annotations trishul chilimbi james larus international conference parallel programming icpp august wisconsin wind tunnel project annotated bibliography mark d hill james r larus david wood unpublished manuscript revised frequently cooperative shared memory software hardware scalable multiprocessors mark d hill james r larus steven k reinhardt david wood acm transactions computer systems tocs november wisconsin architectural research tool set warts mark d hill james r larus alvin r lebeck madhusudhan talluri david wood computer architecture news august ph d graduates brad richards ph d august memory systems parallel programming first employment vassar college guhan viswanathan ph d september new techniques compiling data parallel languages first employment oracle lorenz huelsbergen ph d august dynamic language parallelization first employment bell labs lorenz research att com thomas ball ph d august use control flow control dependence software tools first employment bell labs tball research att com research summary research focuses problems programming computers part wisconsin wind tunnel wwt project helped develop hybrid software hardware shared memory computer architecture facilitates programming compiling parallel machines currently students developing languages compilers tools demonstrate exploit power user level coherence policies m also interested performance evaluation tools help programmers understand improve programs performance recently tom ball developed efficient path profiling algorithm provides detailed understanding control flow within routines identified new possibilities better compilers last modified fri nov james larus larus cs wisc edu
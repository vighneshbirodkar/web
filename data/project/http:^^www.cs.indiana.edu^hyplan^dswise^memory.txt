date wed nov gmt server apache content type text html content length last modified thu may gmt storage management storage management description heap memory usually requires overhead storage management traditionally garbage collection built reference counting memory rcm installed banks smart memories without incurring processor cycles heap management even multiprocessor would support languages depend heap e g lisp scheme prolog haskell local use scheme c prototype applicative file system built rcm provides essential files services persistency bulk within purely applicative environment work targeted reusing nodes place applicative style often asks us copy structure changes fact analogous structure abandoned copy occurs want recycle uniquely referenced nodes either run time better compile time noticing unique referencing developed generational storage management system incorporated chez scheme employs segmented memory model hybrid tagging system hybrid tagging system uses typed pointers typed objects object level typing big bag pages bibop meta level typing system allows allocation performed line single register based allocation pointer results virtually tagging overhead allows scheme heap coexist gracefully languages run time systems increases data locality supports weak pairs finalization supports large objects efficiently system used ongoing research storage management associated faculty david wise dswise r kent dybvig dyb associated graduate students brian heck heckb diana meadows meadows joshua walgenbach jwalgenb return iu computer science research